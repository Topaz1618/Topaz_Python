{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "analysis": "无"}
{"name": "Python 练习实例79", "title": "字符串排序。", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "analysis": "无。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "analysis": "无。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例77", "title": "循环输出列表", "analysis": "无。"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "analysis": "无。"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "analysis": "无。"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "analysis": "无。"}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "analysis": "无。"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "analysis": "无。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "analysis": "无。"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "analysis": "无。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例55", "title": "学习使用按位取反~。", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例57", "title": "画图，学用line画直线。", "analysis": "无。"}
{"name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例52", "title": "学习使用按位或 | 。", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例51", "title": "学习使用按位与 & 。", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例50", "title": "输出一个随机数。", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例48", "title": "数字比较。", "analysis": "无"}
{"name": "Python 练习实例47", "title": "两个变量值互换。", "analysis": "无"}
{"name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。", "analysis": "无"}
{"name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "analysis": "无"}
{"name": "Python 练习实例45", "title": "统计 1 到 100 之和。", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例41", "title": "模仿静态变量的用法。", "analysis": "无。"}
{"name": "Python 练习实例40", "title": "将一个数组逆序输出。", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例37", "title": "对10个数进行排序。", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例36", "title": "求100之内的素数。", "analysis": "无。"}
{"name": "Python 练习实例35", "title": "文本颜色设置。", "analysis": "无。"}
{"name": "Python 练习实例34", "title": "练习函数调用。", "analysis": "无。"}
{"name": "Python 练习实例33", "title": "按逗号分隔列表。", "analysis": "无。"}
{"name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "analysis": "无。"}
{"name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。", "analysis": "无。"}
{"name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "analysis": "无。"}
{"name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例26", "title": "利用递归方法求5!。", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "analysis": "程序源代码："}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "analysis": "无。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "analysis": "无。"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "analysis": "无。"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "analysis": "无。"}
{"name": "Python 练习实例79", "title": "字符串排序。", "analysis": "无。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "analysis": "无。"}
{"name": "Python 练习实例77", "title": "循环输出列表", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "analysis": "无。"}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "analysis": "无。"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "analysis": "无。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "analysis": "无。"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "analysis": "无。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例52", "title": "学习使用按位或 | 。", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例57", "title": "画图，学用line画直线。", "analysis": "无。"}
{"name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"name": "Python 练习实例55", "title": "学习使用按位取反~。", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例51", "title": "学习使用按位与 & 。", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例50", "title": "输出一个随机数。", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。", "analysis": "无"}
{"name": "Python 练习实例48", "title": "数字比较。", "analysis": "无"}
{"name": "Python 练习实例47", "title": "两个变量值互换。", "analysis": "无"}
{"name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "analysis": "无"}
{"name": "Python 练习实例45", "title": "统计 1 到 100 之和。", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例41", "title": "模仿静态变量的用法。", "analysis": "无。"}
{"name": "Python 练习实例35", "title": "文本颜色设置。", "analysis": "无。"}
{"name": "Python 练习实例34", "title": "练习函数调用。", "analysis": "无。"}
{"name": "Python 练习实例40", "title": "将一个数组逆序输出。", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例37", "title": "对10个数进行排序。", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例36", "title": "求100之内的素数。", "analysis": "无。"}
{"name": "Python 练习实例33", "title": "按逗号分隔列表。", "analysis": "无。"}
{"name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "analysis": "无。"}
{"name": "Python 练习实例26", "title": "利用递归方法求5!。", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。", "analysis": "无。"}
{"name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "analysis": "无。"}
{"name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "analysis": "无"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "analysis": "程序源代码："}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "按相反的顺序输出列表的值。", "name": "Python 练习实例32", "analysis": "无。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20", "analysis": "无"}
{"title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19", "analysis": "请参照程序"}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。"}
{"title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"title": "输出指定格式的日期。", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。"}
{"title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "analysis": "无。"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "analysis": "无。"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "analysis": "无。"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "analysis": "无。"}
{"title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "analysis": "无。"}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "analysis": "无。"}
{"title": "时间函数举例3。", "name": "Python 练习实例93", "analysis": "无。"}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "时间函数举例2。", "name": "Python 练习实例92", "analysis": "无。"}
{"title": "时间函数举例1。", "name": "Python 练习实例91", "analysis": "无。"}
{"title": "列表使用实例。", "name": "Python 练习实例90", "analysis": "无。"}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "analysis": "无。"}
{"title": "连接字符串。", "name": "Python 练习实例84", "analysis": "无。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "两个字符串连接程序。", "name": "Python 练习实例86", "analysis": "无。"}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。"}
{"title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t"}
{"title": "八进制转换为十进制", "name": "Python 练习实例82", "analysis": "无。"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "analysis": "无。"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "analysis": "无。"}
{"title": "字符串排序。", "name": "Python 练习实例79", "analysis": "无。"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "analysis": "无。"}
{"title": "循环输出列表", "name": "Python 练习实例77", "analysis": "无。"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "analysis": "无。"}
{"title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "analysis": "无。"}
{"title": "列表排序及连接。", "name": "Python 练习实例74", "analysis": "排序可使用 "}
{"title": "反向输出一个链表。", "name": "Python 练习实例73", "analysis": "无。"}
{"title": "创建一个链表。", "name": "Python 练习实例72", "analysis": "无。"}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "analysis": "无。"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "analysis": "无。"}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "analysis": "无。"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "analysis": "无。"}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67", "analysis": "无。"}
{"title": "一个最优美的图案。　　", "name": "Python 练习实例65", "analysis": "无。"}
{"title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64", "analysis": "无。"}
{"title": "画椭圆。　", "name": "Python 练习实例63", "analysis": "使用 Tkinter。"}
{"title": "查找字符串。　　", "name": "Python 练习实例62", "analysis": "无。"}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61", "analysis": "无。"}
{"title": "计算字符串长度。　　", "name": "Python 练习实例60", "analysis": "无。"}
{"title": "画图，综合例子。　　", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66", "analysis": "无。"}
{"title": "画图，学用rectangle画方形。　　　", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t"}
{"title": "画图，学用circle画圆形。　　　", "name": "Python 练习实例56", "analysis": "无。"}
{"title": "学习使用按位取反~。", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; "}
{"title": "学习使用按位异或 ^ 。", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"title": "学习使用按位或 | 。", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"title": "学习使用按位与 & 。", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"title": "画图，学用line画直线。", "name": "Python 练习实例57", "analysis": "无。"}
{"title": "输出一个随机数。", "name": "Python 练习实例50", "analysis": "使用 random 模块。"}
{"title": "数字比较。", "name": "Python 练习实例48", "analysis": "无"}
{"title": "两个变量值互换。", "name": "Python 练习实例47", "analysis": "无"}
{"title": "模仿静态变量(static)另一案例。", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法"}
{"title": "使用lambda来创建匿名函数。", "name": "Python 练习实例49", "analysis": "无"}
{"title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "name": "Python 练习实例46", "analysis": "无"}
{"title": "统计 1 到 100 之和。", "name": "Python 练习实例45", "analysis": "无"}
{"title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"title": "学习使用auto定义变量的用法。", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"title": "模仿静态变量的用法。", "name": "Python 练习实例41", "analysis": "无。"}
{"title": "将一个数组逆序输出。", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。"}
{"title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"title": "求一个3*3矩阵对角线元素之和。", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"title": "按逗号分隔列表。", "name": "Python 练习实例33", "analysis": "无。"}
{"title": "对10个数进行排序。", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"title": "求100之内的素数。", "name": "Python 练习实例36", "analysis": "无。"}
{"title": "文本颜色设置。", "name": "Python 练习实例35", "analysis": "无。"}
{"title": "练习函数调用。", "name": "Python 练习实例34", "analysis": "无。"}
{"title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "name": "Python 练习实例30", "analysis": "无。"}
{"title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "name": "Python 练习实例29", "analysis": "学会分解出每一位数。"}
{"title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "name": "Python 练习实例27", "analysis": "无。"}
{"title": "利用递归方法求5!。", "name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! "}
{"title": "求1+2!+3!+...+20!的和。", "name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  "}
{"title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 "}
{"title": "打印出如下图案（菱形）:", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "name": "Python 练习实例22", "analysis": "程序源代码："}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "analysis": "无。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "title": "\n\t\t\t\t\t"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "title": "斐波那契数列。 "}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"analysis": "无。", "name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 "}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "title": "暂停一秒输出。 "}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。"}
{"analysis": "无。", "name": "Python 练习实例100", "title": "列表转换为字典。 "}
{"analysis": "采取逆向思维的方法，从后往前推断。", "name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"analysis": "无", "name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"analysis": "请参照程序", "name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"analysis": "无。", "name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"analysis": "无。", "name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"analysis": "无。", "name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"analysis": "无。", "name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。"}
{"analysis": "无。", "name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。"}
{"analysis": "无。", "name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"analysis": "无。", "name": "Python 练习实例93", "title": "时间函数举例3。"}
{"analysis": "无。", "name": "Python 练习实例92", "title": "时间函数举例2。"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 "}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"name": "Python 练习实例70", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"name": "Python 练习实例10", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 "}
{"name": "Python 练习实例20", "analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 "}
{"name": "Python 练习实例100", "analysis": "无。", "title": "列表转换为字典。 "}
{"name": "Python 练习实例99", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"name": "Python 练习实例98", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"name": "Python 练习实例97", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"name": "Python 练习实例96", "analysis": "无。", "title": "计算字符串中子串出现的次数。"}
{"name": "Python 练习实例95", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。"}
{"name": "Python 练习实例94", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"name": "Python 练习实例93", "analysis": "无。", "title": "时间函数举例3。"}
{"name": "Python 练习实例92", "analysis": "无。", "title": "时间函数举例2。"}
{"analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "name": "Python 练习实例6"}
{"analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11"}
{"analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 ", "name": "Python 练习实例9"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3"}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2"}
{"analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7"}
{"analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18"}
{"analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "name": "Python 练习实例17"}
{"analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。", "name": "Python 练习实例16"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14"}
{"analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68"}
{"analysis": "无。", "title": "列表转换为字典。 ", "name": "Python 练习实例100"}
{"analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99"}
{"analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98"}
{"analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97"}
{"analysis": "无。", "title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96"}
{"analysis": "无。", "title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95"}
{"analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94"}
{"analysis": "无。", "title": "时间函数举例3。", "name": "Python 练习实例93"}
{"analysis": "无。", "title": "时间函数举例2。", "name": "Python 练习实例92"}
{"analysis": "无。", "title": "时间函数举例1。", "name": "Python 练习实例91"}
{"analysis": "无。", "title": "列表使用实例。", "name": "Python 练习实例90"}
{"analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89"}
{"analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88"}
{"analysis": "无。", "title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87"}
{"analysis": "无。", "title": "两个字符串连接程序。", "name": "Python 练习实例86"}
{"analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85"}
{"analysis": "无。", "title": "连接字符串。", "name": "Python 练习实例84"}
{"analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83"}
{"analysis": "无。", "title": "八进制转换为十进制", "name": "Python 练习实例82"}
{"analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81"}
{"analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80"}
{"analysis": "无。", "title": "创建一个链表。", "name": "Python 练习实例72"}
{"analysis": "无。", "title": "字符串排序。", "name": "Python 练习实例79"}
{"analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78"}
{"analysis": "无。", "title": "循环输出列表", "name": "Python 练习实例77"}
{"analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76"}
{"analysis": "无。", "title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75"}
{"analysis": "排序可使用 ", "title": "列表排序及连接。", "name": "Python 练习实例74"}
{"analysis": "无。", "title": "反向输出一个链表。", "name": "Python 练习实例73"}
{"analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71"}
{"analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70"}
{"analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69"}
{"analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67"}
{"analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66"}
{"analysis": "无。", "title": "一个最优美的图案。　　", "name": "Python 练习实例65"}
{"analysis": "无。", "title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64"}
{"analysis": "使用 Tkinter。", "title": "画椭圆。　", "name": "Python 练习实例63"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "输出指定格式的日期。", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "analysis": "无。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "analysis": "无。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "analysis": "无。"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "analysis": "无。"}
{"name": "Python 练习实例79", "title": "字符串排序。", "analysis": "无。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "analysis": "无。"}
{"name": "Python 练习实例77", "title": "循环输出列表", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "analysis": "无。"}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "analysis": "无。"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "analysis": "无。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "analysis": "无。"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "analysis": "无。"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例57", "title": "画图，学用line画直线。", "analysis": "无。"}
{"name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"name": "Python 练习实例55", "title": "学习使用按位取反~。", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例52", "title": "学习使用按位或 | 。", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例51", "title": "学习使用按位与 & 。", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例50", "title": "输出一个随机数。", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。", "analysis": "无"}
{"name": "Python 练习实例48", "title": "数字比较。", "analysis": "无"}
{"name": "Python 练习实例47", "title": "两个变量值互换。", "analysis": "无"}
{"name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "analysis": "无"}
{"name": "Python 练习实例45", "title": "统计 1 到 100 之和。", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例41", "title": "模仿静态变量的用法。", "analysis": "无。"}
{"name": "Python 练习实例40", "title": "将一个数组逆序输出。", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例37", "title": "对10个数进行排序。", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例36", "title": "求100之内的素数。", "analysis": "无。"}
{"name": "Python 练习实例35", "title": "文本颜色设置。", "analysis": "无。"}
{"name": "Python 练习实例34", "title": "练习函数调用。", "analysis": "无。"}
{"name": "Python 练习实例33", "title": "按逗号分隔列表。", "analysis": "无。"}
{"name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "analysis": "无。"}
{"name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "analysis": "无。"}
{"name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。", "analysis": "无。"}
{"name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例26", "title": "利用递归方法求5!。", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "analysis": "程序源代码："}
{"name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "analysis": "无"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "求1+2!+3!+...+20!的和。", "name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  "}
{"title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 "}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "analysis": "无。"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "analysis": "无。"}
{"title": "时间函数举例1。", "name": "Python 练习实例91", "analysis": "无。"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "analysis": "无。"}
{"title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "analysis": "无。"}
{"title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "analysis": "无。"}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "analysis": "无。"}
{"title": "时间函数举例3。", "name": "Python 练习实例93", "analysis": "无。"}
{"title": "时间函数举例2。", "name": "Python 练习实例92", "analysis": "无。"}
{"title": "列表使用实例。", "name": "Python 练习实例90", "analysis": "无。"}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "analysis": "无。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "两个字符串连接程序。", "name": "Python 练习实例86", "analysis": "无。"}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。"}
{"title": "连接字符串。", "name": "Python 练习实例84", "analysis": "无。"}
{"title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t"}
{"title": "八进制转换为十进制", "name": "Python 练习实例82", "analysis": "无。"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "analysis": "无。"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "analysis": "无。"}
{"title": "字符串排序。", "name": "Python 练习实例79", "analysis": "无。"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "analysis": "无。"}
{"title": "循环输出列表", "name": "Python 练习实例77", "analysis": "无。"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "analysis": "无。"}
{"title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "analysis": "无。"}
{"title": "列表排序及连接。", "name": "Python 练习实例74", "analysis": "排序可使用 "}
{"title": "反向输出一个链表。", "name": "Python 练习实例73", "analysis": "无。"}
{"title": "创建一个链表。", "name": "Python 练习实例72", "analysis": "无。"}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "analysis": "无。"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "analysis": "无。"}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "analysis": "无。"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "analysis": "无。"}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67", "analysis": "无。"}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66", "analysis": "无。"}
{"title": "一个最优美的图案。　　", "name": "Python 练习实例65", "analysis": "无。"}
{"title": "画图，学用rectangle画方形。　　　", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t"}
{"title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64", "analysis": "无。"}
{"title": "画椭圆。　", "name": "Python 练习实例63", "analysis": "使用 Tkinter。"}
{"title": "查找字符串。　　", "name": "Python 练习实例62", "analysis": "无。"}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61", "analysis": "无。"}
{"title": "计算字符串长度。　　", "name": "Python 练习实例60", "analysis": "无。"}
{"title": "画图，综合例子。　　", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"title": "画图，学用line画直线。", "name": "Python 练习实例57", "analysis": "无。"}
{"title": "画图，学用circle画圆形。　　　", "name": "Python 练习实例56", "analysis": "无。"}
{"title": "使用lambda来创建匿名函数。", "name": "Python 练习实例49", "analysis": "无"}
{"title": "学习使用按位取反~。", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; "}
{"title": "学习使用按位异或 ^ 。", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"title": "学习使用按位或 | 。", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"title": "学习使用按位与 & 。", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"title": "输出一个随机数。", "name": "Python 练习实例50", "analysis": "使用 random 模块。"}
{"title": "数字比较。", "name": "Python 练习实例48", "analysis": "无"}
{"title": "两个变量值互换。", "name": "Python 练习实例47", "analysis": "无"}
{"title": "将一个数组逆序输出。", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。"}
{"title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "name": "Python 练习实例46", "analysis": "无"}
{"title": "统计 1 到 100 之和。", "name": "Python 练习实例45", "analysis": "无"}
{"title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"title": "模仿静态变量(static)另一案例。", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法"}
{"title": "学习使用auto定义变量的用法。", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"title": "模仿静态变量的用法。", "name": "Python 练习实例41", "analysis": "无。"}
{"title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"title": "求一个3*3矩阵对角线元素之和。", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"title": "对10个数进行排序。", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"title": "求100之内的素数。", "name": "Python 练习实例36", "analysis": "无。"}
{"title": "文本颜色设置。", "name": "Python 练习实例35", "analysis": "无。"}
{"title": "练习函数调用。", "name": "Python 练习实例34", "analysis": "无。"}
{"title": "按逗号分隔列表。", "name": "Python 练习实例33", "analysis": "无。"}
{"title": "按相反的顺序输出列表的值。", "name": "Python 练习实例32", "analysis": "无。"}
{"title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "name": "Python 练习实例30", "analysis": "无。"}
{"title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "name": "Python 练习实例29", "analysis": "学会分解出每一位数。"}
{"title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "name": "Python 练习实例22", "analysis": "程序源代码："}
{"title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "name": "Python 练习实例27", "analysis": "无。"}
{"title": "利用递归方法求5!。", "name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! "}
{"title": "打印出如下图案（菱形）:", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20", "analysis": "无"}
{"title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19", "analysis": "请参照程序"}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。"}
{"title": "输出指定格式的日期。", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。"}
{"title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例37", "title": "对10个数进行排序。", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例36", "title": "求100之内的素数。", "analysis": "无。"}
{"name": "Python 练习实例35", "title": "文本颜色设置。", "analysis": "无。"}
{"name": "Python 练习实例34", "title": "练习函数调用。", "analysis": "无。"}
{"name": "Python 练习实例33", "title": "按逗号分隔列表。", "analysis": "无。"}
{"name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。", "analysis": "无。"}
{"name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。", "analysis": "无"}
{"name": "Python 练习实例48", "title": "数字比较。", "analysis": "无"}
{"name": "Python 练习实例47", "title": "两个变量值互换。", "analysis": "无"}
{"name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "analysis": "无"}
{"name": "Python 练习实例45", "title": "统计 1 到 100 之和。", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "analysis": "无。"}
{"name": "Python 练习实例77", "title": "循环输出列表", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "analysis": "无。"}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "analysis": "无。"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "analysis": "无。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "analysis": "无。"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "analysis": "无。"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "analysis": "无。"}
{"name": "Python 练习实例79", "title": "字符串排序。", "analysis": "无。"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "analysis": "无。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "analysis": "无。"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "analysis": "无。"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例57", "title": "画图，学用line画直线。", "analysis": "无。"}
{"name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"name": "Python 练习实例55", "title": "学习使用按位取反~。", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例52", "title": "学习使用按位或 | 。", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例51", "title": "学习使用按位与 & 。", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例50", "title": "输出一个随机数。", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例41", "title": "模仿静态变量的用法。", "analysis": "无。"}
{"name": "Python 练习实例40", "title": "将一个数组逆序输出。", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "analysis": "无。"}
{"name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "analysis": "无。"}
{"name": "Python 练习实例26", "title": "利用递归方法求5!。", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "analysis": "程序源代码："}
{"name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "analysis": "无"}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "打印出如下图案（菱形）:", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "name": "Python 练习实例22", "analysis": "程序源代码："}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "analysis": "无。"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "analysis": "无。"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "analysis": "无。"}
{"title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "analysis": "无。"}
{"title": "时间函数举例2。", "name": "Python 练习实例92", "analysis": "无。"}
{"title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "analysis": "无。"}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "analysis": "无。"}
{"title": "时间函数举例3。", "name": "Python 练习实例93", "analysis": "无。"}
{"title": "时间函数举例1。", "name": "Python 练习实例91", "analysis": "无。"}
{"title": "列表使用实例。", "name": "Python 练习实例90", "analysis": "无。"}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "analysis": "无。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "两个字符串连接程序。", "name": "Python 练习实例86", "analysis": "无。"}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。"}
{"title": "连接字符串。", "name": "Python 练习实例84", "analysis": "无。"}
{"title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t"}
{"title": "八进制转换为十进制", "name": "Python 练习实例82", "analysis": "无。"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "analysis": "无。"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "analysis": "无。"}
{"title": "字符串排序。", "name": "Python 练习实例79", "analysis": "无。"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "analysis": "无。"}
{"title": "循环输出列表", "name": "Python 练习实例77", "analysis": "无。"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "analysis": "无。"}
{"title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "analysis": "无。"}
{"title": "列表排序及连接。", "name": "Python 练习实例74", "analysis": "排序可使用 "}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67", "analysis": "无。"}
{"title": "反向输出一个链表。", "name": "Python 练习实例73", "analysis": "无。"}
{"title": "创建一个链表。", "name": "Python 练习实例72", "analysis": "无。"}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "analysis": "无。"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "analysis": "无。"}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "analysis": "无。"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "analysis": "无。"}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66", "analysis": "无。"}
{"title": "一个最优美的图案。　　", "name": "Python 练习实例65", "analysis": "无。"}
{"title": "画图，学用rectangle画方形。　　　", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t"}
{"title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64", "analysis": "无。"}
{"title": "画椭圆。　", "name": "Python 练习实例63", "analysis": "使用 Tkinter。"}
{"title": "查找字符串。　　", "name": "Python 练习实例62", "analysis": "无。"}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61", "analysis": "无。"}
{"title": "计算字符串长度。　　", "name": "Python 练习实例60", "analysis": "无。"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "name": "Python 练习实例22", "analysis": "程序源代码："}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20", "analysis": "无"}
{"title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19", "analysis": "请参照程序"}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。"}
{"title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "title": "\n\t\t\t\t\t"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "title": "暂停一秒输出。 "}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。"}
{"analysis": "无。", "name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 "}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "title": "斐波那契数列。 "}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。"}
{"analysis": "程序源代码：", "name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 "}
{"analysis": "采取逆向思维的方法，从后往前推断。", "name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"analysis": "无", "name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"analysis": "请参照程序", "name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"analysis": "关键是计算出每一项的值。", "name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。"}
{"analysis": "无。", "name": "Python 练习实例100", "title": "列表转换为字典。 "}
{"analysis": "无。", "name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"analysis": "无。", "name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"analysis": "无。", "name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"analysis": "无。", "name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。"}
{"analysis": "无。", "name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。"}
{"analysis": "无。", "name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"analysis": "无。", "name": "Python 练习实例93", "title": "时间函数举例3。"}
{"analysis": "无。", "name": "Python 练习实例92", "title": "时间函数举例2。"}
{"analysis": "无。", "name": "Python 练习实例91", "title": "时间函数举例1。"}
{"analysis": "无。", "name": "Python 练习实例90", "title": "列表使用实例。"}
{"analysis": "无。", "name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "title": "\n\t\t\t\t\t"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "title": "斐波那契数列。 "}
{"analysis": "无。", "name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 "}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "title": "暂停一秒输出。 "}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。"}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"analysis": "使用 datetime 模块。", "name": "Python 练习实例16", "title": "输出指定格式的日期。"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。"}
{"analysis": "无。", "name": "Python 练习实例100", "title": "列表转换为字典。 "}
{"analysis": "无。", "name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"analysis": "无。", "name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"analysis": "无。", "name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"analysis": "无。", "name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。"}
{"analysis": "无。", "name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。"}
{"analysis": "无。", "name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"analysis": "无。", "name": "Python 练习实例93", "title": "时间函数举例3。"}
{"analysis": "无。", "name": "Python 练习实例92", "title": "时间函数举例2。"}
{"analysis": "无。", "name": "Python 练习实例91", "title": "时间函数举例1。"}
{"analysis": "无。", "name": "Python 练习实例90", "title": "列表使用实例。"}
{"analysis": "无。", "name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"analysis": "无。", "name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"analysis": "无。", "name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。"}
{"analysis": "无。", "name": "Python 练习实例86", "title": "两个字符串连接程序。"}
{"analysis": "999999 / 13 = 76923。", "name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"analysis": "无。", "name": "Python 练习实例84", "title": "连接字符串。"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。"}
{"analysis": "无。", "name": "Python 练习实例77", "title": "循环输出列表"}
{"analysis": "无。", "name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"analysis": "无。", "name": "Python 练习实例82", "title": "八进制转换为十进制"}
{"analysis": "无。", "name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"analysis": "无。", "name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"analysis": "无。", "name": "Python 练习实例79", "title": "字符串排序。"}
{"analysis": "无。", "name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"analysis": "无。", "name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。"}
{"analysis": "排序可使用 ", "name": "Python 练习实例74", "title": "列表排序及连接。"}
{"analysis": "无。", "name": "Python 练习实例73", "title": "反向输出一个链表。"}
{"analysis": "无。", "name": "Python 练习实例72", "title": "创建一个链表。"}
{"analysis": "无。", "name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"analysis": "无。", "name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"analysis": "无。", "name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"analysis": "无。", "name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"analysis": "无。", "name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"analysis": "无。", "name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"analysis": "无。", "name": "Python 练习实例65", "title": "一个最优美的图案。　　"}
{"analysis": "无。", "name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　"}
{"analysis": "使用 Tkinter。", "name": "Python 练习实例63", "title": "画椭圆。　"}
{"analysis": "无。", "name": "Python 练习实例62", "title": "查找字符串。　　"}
{"analysis": "无。", "name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"analysis": "无。", "name": "Python 练习实例60", "title": "计算字符串长度。　　"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "name": "Python 练习实例59", "title": "画图，综合例子。　　"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　"}
{"analysis": "无。", "name": "Python 练习实例57", "title": "画图，学用line画直线。"}
{"analysis": "无。", "name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　"}
{"analysis": "~0=1; ~1=0; ", "name": "Python 练习实例55", "title": "学习使用按位取反~。"}
{"analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "name": "Python 练习实例52", "title": "学习使用按位或 | 。"}
{"analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "name": "Python 练习实例51", "title": "学习使用按位与 & 。"}
{"analysis": "使用 random 模块。", "name": "Python 练习实例50", "title": "输出一个随机数。"}
{"analysis": "无", "name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。"}
{"analysis": "无", "name": "Python 练习实例48", "title": "数字比较。"}
{"analysis": "无", "name": "Python 练习实例47", "title": "两个变量值互换。"}
{"analysis": "无", "name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"analysis": "无", "name": "Python 练习实例45", "title": "统计 1 到 100 之和。"}
{"analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"analysis": "演示一个python作用域使用方法", "name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。"}
{"analysis": "没有auto关键字，使用变量作用域来举例吧。", "name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。"}
{"analysis": "无。", "name": "Python 练习实例41", "title": "模仿静态变量的用法。"}
{"analysis": "用第一个与最后一个交换。", "name": "Python 练习实例40", "title": "将一个数组逆序输出。"}
{"analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。"}
{"analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。"}
{"analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "name": "Python 练习实例37", "title": "对10个数进行排序。"}
{"analysis": "无。", "name": "Python 练习实例36", "title": "求100之内的素数。"}
{"analysis": "无。", "name": "Python 练习实例35", "title": "文本颜色设置。"}
{"analysis": "无。", "name": "Python 练习实例34", "title": "练习函数调用。"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。"}
{"title": "输出指定格式的日期。", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。"}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "name": "Python 练习实例29", "analysis": "学会分解出每一位数。"}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "analysis": "无。"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "analysis": "无。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "analysis": "无。"}
{"title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "analysis": "无。"}
{"title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "analysis": "无。"}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "analysis": "无。"}
{"title": "时间函数举例3。", "name": "Python 练习实例93", "analysis": "无。"}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "analysis": "无。"}
{"title": "时间函数举例2。", "name": "Python 练习实例92", "analysis": "无。"}
{"title": "时间函数举例1。", "name": "Python 练习实例91", "analysis": "无。"}
{"title": "列表使用实例。", "name": "Python 练习实例90", "analysis": "无。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "两个字符串连接程序。", "name": "Python 练习实例86", "analysis": "无。"}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。"}
{"title": "连接字符串。", "name": "Python 练习实例84", "analysis": "无。"}
{"title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t"}
{"title": "八进制转换为十进制", "name": "Python 练习实例82", "analysis": "无。"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "analysis": "无。"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "analysis": "无。"}
{"title": "字符串排序。", "name": "Python 练习实例79", "analysis": "无。"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "analysis": "无。"}
{"title": "循环输出列表", "name": "Python 练习实例77", "analysis": "无。"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "analysis": "无。"}
{"title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "analysis": "无。"}
{"title": "列表排序及连接。", "name": "Python 练习实例74", "analysis": "排序可使用 "}
{"title": "反向输出一个链表。", "name": "Python 练习实例73", "analysis": "无。"}
{"title": "创建一个链表。", "name": "Python 练习实例72", "analysis": "无。"}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "analysis": "无。"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "analysis": "无。"}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "analysis": "无。"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "analysis": "无。"}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67", "analysis": "无。"}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66", "analysis": "无。"}
{"title": "一个最优美的图案。　　", "name": "Python 练习实例65", "analysis": "无。"}
{"title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64", "analysis": "无。"}
{"title": "画图，综合例子。　　", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"title": "计算字符串长度。　　", "name": "Python 练习实例60", "analysis": "无。"}
{"title": "画椭圆。　", "name": "Python 练习实例63", "analysis": "使用 Tkinter。"}
{"title": "查找字符串。　　", "name": "Python 练习实例62", "analysis": "无。"}
{"title": "画图，学用rectangle画方形。　　　", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t"}
{"title": "画图，学用line画直线。", "name": "Python 练习实例57", "analysis": "无。"}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61", "analysis": "无。"}
{"title": "学习使用按位取反~。", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; "}
{"title": "画图，学用circle画圆形。　　　", "name": "Python 练习实例56", "analysis": "无。"}
{"title": "学习使用按位异或 ^ 。", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"title": "学习使用按位或 | 。", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"title": "使用lambda来创建匿名函数。", "name": "Python 练习实例49", "analysis": "无"}
{"title": "学习使用按位与 & 。", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"title": "输出一个随机数。", "name": "Python 练习实例50", "analysis": "使用 random 模块。"}
{"title": "数字比较。", "name": "Python 练习实例48", "analysis": "无"}
{"title": "两个变量值互换。", "name": "Python 练习实例47", "analysis": "无"}
{"title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "name": "Python 练习实例46", "analysis": "无"}
{"title": "统计 1 到 100 之和。", "name": "Python 练习实例45", "analysis": "无"}
{"title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"title": "模仿静态变量(static)另一案例。", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法"}
{"title": "将一个数组逆序输出。", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。"}
{"title": "学习使用auto定义变量的用法。", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"title": "模仿静态变量的用法。", "name": "Python 练习实例41", "analysis": "无。"}
{"title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"title": "求一个3*3矩阵对角线元素之和。", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"title": "对10个数进行排序。", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"title": "求100之内的素数。", "name": "Python 练习实例36", "analysis": "无。"}
{"title": "文本颜色设置。", "name": "Python 练习实例35", "analysis": "无。"}
{"title": "练习函数调用。", "name": "Python 练习实例34", "analysis": "无。"}
{"title": "按逗号分隔列表。", "name": "Python 练习实例33", "analysis": "无。"}
{"title": "按相反的顺序输出列表的值。", "name": "Python 练习实例32", "analysis": "无。"}
{"title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "name": "Python 练习实例30", "analysis": "无。"}
{"title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "name": "Python 练习实例27", "analysis": "无。"}
{"title": "利用递归方法求5!。", "name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! "}
{"title": "求1+2!+3!+...+20!的和。", "name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  "}
{"title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 "}
{"title": "打印出如下图案（菱形）:", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "name": "Python 练习实例22", "analysis": "程序源代码："}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20", "analysis": "无"}
{"title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19", "analysis": "请参照程序"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 "}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 "}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例20", "analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"name": "Python 练习实例10", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 "}
{"name": "Python 练习实例19", "analysis": "请参照程序", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "title": "学习使用按位与 & 。"}
{"name": "Python 练习实例60", "analysis": "无。", "title": "计算字符串长度。　　"}
{"name": "Python 练习实例69", "analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"name": "Python 练习实例68", "analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"name": "Python 练习实例67", "analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"name": "Python 练习实例66", "analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"name": "Python 练习实例81", "analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"name": "Python 练习实例80", "analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"name": "Python 练习实例79", "analysis": "无。", "title": "字符串排序。"}
{"name": "Python 练习实例88", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"name": "Python 练习实例94", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"name": "Python 练习实例93", "analysis": "无。", "title": "时间函数举例3。"}
{"name": "Python 练习实例92", "analysis": "无。", "title": "时间函数举例2。"}
{"name": "Python 练习实例91", "analysis": "无。", "title": "时间函数举例1。"}
{"name": "Python 练习实例90", "analysis": "无。", "title": "列表使用实例。"}
{"name": "Python 练习实例89", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"name": "Python 练习实例87", "analysis": "无。", "title": "回答结果（结构体变量传递）。"}
{"name": "Python 练习实例100", "analysis": "无。", "title": "列表转换为字典。 "}
{"name": "Python 练习实例84", "analysis": "无。", "title": "连接字符串。"}
{"name": "Python 练习实例99", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"name": "Python 练习实例98", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"name": "Python 练习实例97", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"name": "Python 练习实例96", "analysis": "无。", "title": "计算字符串中子串出现的次数。"}
{"name": "Python 练习实例95", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。"}
{"name": "Python 练习实例86", "analysis": "无。", "title": "两个字符串连接程序。"}
{"name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。"}
{"name": "Python 练习实例82", "analysis": "无。", "title": "八进制转换为十进制"}
{"name": "Python 练习实例78", "analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"name": "Python 练习实例77", "analysis": "无。", "title": "循环输出列表"}
{"name": "Python 练习实例76", "analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"name": "Python 练习实例75", "analysis": "无。", "title": "放松一下，算一道简单的题目。"}
{"name": "Python 练习实例74", "analysis": "排序可使用 ", "title": "列表排序及连接。"}
{"name": "Python 练习实例73", "analysis": "无。", "title": "反向输出一个链表。"}
{"name": "Python 练习实例72", "analysis": "无。", "title": "创建一个链表。"}
{"name": "Python 练习实例70", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"name": "Python 练习实例65", "analysis": "无。", "title": "一个最优美的图案。　　"}
{"name": "Python 练习实例64", "analysis": "无。", "title": "利用ellipse 和 rectangle 画图。。　"}
{"name": "Python 练习实例63", "analysis": "使用 Tkinter。", "title": "画椭圆。　"}
{"name": "Python 练习实例62", "analysis": "无。", "title": "查找字符串。　　"}
{"name": "Python 练习实例61", "analysis": "无。", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "title": "画图，综合例子。　　"}
{"name": "Python 练习实例71", "analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t", "title": "画图，学用rectangle画方形。　　　"}
{"name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "title": "学习使用按位或 | 。"}
{"name": "Python 练习实例50", "analysis": "使用 random 模块。", "title": "输出一个随机数。"}
{"name": "Python 练习实例49", "analysis": "无", "title": "使用lambda来创建匿名函数。"}
{"name": "Python 练习实例57", "analysis": "无。", "title": "画图，学用line画直线。"}
{"name": "Python 练习实例56", "analysis": "无。", "title": "画图，学用circle画圆形。　　　"}
{"name": "Python 练习实例55", "analysis": "~0=1; ~1=0; ", "title": "学习使用按位取反~。"}
{"name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "title": "学习使用按位异或 ^ 。"}
{"name": "Python 练习实例48", "analysis": "无", "title": "数字比较。"}
{"name": "Python 练习实例47", "analysis": "无", "title": "两个变量值互换。"}
{"name": "Python 练习实例46", "analysis": "无", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"name": "Python 练习实例45", "analysis": "无", "title": "统计 1 到 100 之和。"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法", "title": "模仿静态变量(static)另一案例。"}
{"name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "title": "学习使用auto定义变量的用法。"}
{"name": "Python 练习实例41", "analysis": "无。", "title": "模仿静态变量的用法。"}
{"name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。", "title": "将一个数组逆序输出。"}
{"name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。"}
{"name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "title": "求一个3*3矩阵对角线元素之和。"}
{"name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "title": "对10个数进行排序。"}
{"name": "Python 练习实例36", "analysis": "无。", "title": "求100之内的素数。"}
{"name": "Python 练习实例35", "analysis": "无。", "title": "文本颜色设置。"}
{"name": "Python 练习实例34", "analysis": "无。", "title": "练习函数调用。"}
{"name": "Python 练习实例33", "analysis": "无。", "title": "按逗号分隔列表。"}
{"name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。"}
{"name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？"}
{"name": "Python 练习实例27", "analysis": "无。", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。"}
{"name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! ", "title": "利用递归方法求5!。"}
{"name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  ", "title": "求1+2!+3!+...+20!的和。"}
{"name": "Python 练习实例32", "analysis": "无。", "title": "按相反的顺序输出列表的值。"}
{"name": "Python 练习实例30", "analysis": "无。", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。"}
{"name": "Python 练习实例29", "analysis": "学会分解出每一位数。", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。"}
{"name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 ", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。"}
{"name": "Python 练习实例16", "analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。"}
{"name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:"}
{"name": "Python 练习实例22", "analysis": "程序源代码：", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 "}
{"name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4"}
{"analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10"}
{"analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7"}
{"analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 ", "name": "Python 练习实例9"}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "name": "Python 练习实例6"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5"}
{"analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:", "name": "Python 练习实例23"}
{"analysis": "程序源代码：", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "name": "Python 练习实例22"}
{"analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21"}
{"analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20"}
{"analysis": "请参照程序", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19"}
{"analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18"}
{"analysis": "无。", "title": "列表转换为字典。 ", "name": "Python 练习实例100"}
{"analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t", "name": "Python 100例"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 "}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"name": "Python 练习实例10", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 "}
{"name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 "}
{"name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 ", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。"}
{"name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:"}
{"name": "Python 练习实例99", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"name": "Python 练习实例100", "analysis": "无。", "title": "列表转换为字典。 "}
{"name": "Python 练习实例98", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"name": "Python 练习实例97", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"name": "Python 练习实例96", "analysis": "无。", "title": "计算字符串中子串出现的次数。"}
{"name": "Python 练习实例95", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。"}
{"name": "Python 练习实例94", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"name": "Python 练习实例93", "analysis": "无。", "title": "时间函数举例3。"}
{"name": "Python 练习实例92", "analysis": "无。", "title": "时间函数举例2。"}
{"name": "Python 练习实例91", "analysis": "无。", "title": "时间函数举例1。"}
{"name": "Python 练习实例90", "analysis": "无。", "title": "列表使用实例。"}
{"name": "Python 练习实例89", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"name": "Python 练习实例88", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"name": "Python 练习实例87", "analysis": "无。", "title": "回答结果（结构体变量传递）。"}
{"name": "Python 练习实例86", "analysis": "无。", "title": "两个字符串连接程序。"}
{"name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"name": "Python 练习实例84", "analysis": "无。", "title": "连接字符串。"}
{"name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "analysis": "无。"}
{"name": "Python 练习实例26", "title": "利用递归方法求5!。", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例41", "title": "模仿静态变量的用法。", "analysis": "无。"}
{"name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "analysis": "无。"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "analysis": "无。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "analysis": "无。"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "analysis": "无。"}
{"name": "Python 练习实例77", "title": "循环输出列表", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。"}
{"name": "Python 练习实例79", "title": "字符串排序。", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "analysis": "排序可使用 "}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "analysis": "无。"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "analysis": "无。"}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "analysis": "无。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "analysis": "无。"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "analysis": "无。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例57", "title": "画图，学用line画直线。", "analysis": "无。"}
{"name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例52", "title": "学习使用按位或 | 。", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"name": "Python 练习实例55", "title": "学习使用按位取反~。", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例50", "title": "输出一个随机数。", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例51", "title": "学习使用按位与 & 。", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。", "analysis": "无"}
{"name": "Python 练习实例48", "title": "数字比较。", "analysis": "无"}
{"name": "Python 练习实例47", "title": "两个变量值互换。", "analysis": "无"}
{"name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "analysis": "无"}
{"name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例45", "title": "统计 1 到 100 之和。", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例40", "title": "将一个数组逆序输出。", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例35", "title": "文本颜色设置。", "analysis": "无。"}
{"name": "Python 练习实例37", "title": "对10个数进行排序。", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例34", "title": "练习函数调用。", "analysis": "无。"}
{"name": "Python 练习实例33", "title": "按逗号分隔列表。", "analysis": "无。"}
{"name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例36", "title": "求100之内的素数。", "analysis": "无。"}
{"name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。", "analysis": "无。"}
{"name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "analysis": "无。"}
{"name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "analysis": "程序源代码："}
{"name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "analysis": "无"}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t", "name": "Python 100例"}
{"analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3"}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8"}
{"analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "name": "Python 练习实例6"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11"}
{"analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10"}
{"analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 ", "name": "Python 练习实例9"}
{"analysis": "无。", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "name": "Python 练习实例27"}
{"analysis": "递归公式：fn=fn_1*4! ", "title": "利用递归方法求5!。", "name": "Python 练习实例26"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "title": "\n\t\t\t\t\t"}
{"analysis": "无。", "name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。"}
{"analysis": "无。", "name": "Python 练习实例93", "title": "时间函数举例3。"}
{"analysis": "无。", "name": "Python 练习实例91", "title": "时间函数举例1。"}
{"analysis": "无。", "name": "Python 练习实例90", "title": "列表使用实例。"}
{"analysis": "无。", "name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。"}
{"analysis": "无。", "name": "Python 练习实例86", "title": "两个字符串连接程序。"}
{"analysis": "无。", "name": "Python 练习实例73", "title": "反向输出一个链表。"}
{"analysis": "无。", "name": "Python 练习实例72", "title": "创建一个链表。"}
{"analysis": "无。", "name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"analysis": "无。", "name": "Python 练习实例65", "title": "一个最优美的图案。　　"}
{"analysis": "无。", "name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　"}
{"analysis": "无。", "name": "Python 练习实例62", "title": "查找字符串。　　"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "name": "Python 练习实例59", "title": "画图，综合例子。　　"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　"}
{"analysis": "~0=1; ~1=0; ", "name": "Python 练习实例55", "title": "学习使用按位取反~。"}
{"analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。"}
{"analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "name": "Python 练习实例52", "title": "学习使用按位或 | 。"}
{"analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "name": "Python 练习实例51", "title": "学习使用按位与 & 。"}
{"analysis": "演示一个python作用域使用方法", "name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。"}
{"analysis": "没有auto关键字，使用变量作用域来举例吧。", "name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。"}
{"analysis": "无。", "name": "Python 练习实例41", "title": "模仿静态变量的用法。"}
{"analysis": "无。", "name": "Python 练习实例35", "title": "文本颜色设置。"}
{"analysis": "无。", "name": "Python 练习实例34", "title": "练习函数调用。"}
{"analysis": null, "title": null, "name": null}
{"name": null, "title": null, "analysis": null}
{"analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4"}
{"analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。", "name": "Python 练习实例16"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15"}
{"analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "name": "Python 练习实例6"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5"}
{"analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1"}
{"analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7"}
{"analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "name": "Python 练习实例17"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "name": "Python 练习实例6"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 "}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"name": "Python 练习实例10", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 "}
{"name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 "}
{"name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:"}
{"name": "Python 练习实例22", "analysis": "程序源代码：", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 "}
{"name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 "}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"name": "Python 练习实例16", "analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。"}
{"name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"name": "Python 练习实例29", "analysis": "学会分解出每一位数。", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。"}
{"name": "Python 练习实例100", "analysis": "无。", "title": "列表转换为字典。 "}
{"name": "Python 练习实例99", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"name": "Python 练习实例98", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"name": "Python 练习实例97", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"name": "Python 练习实例96", "analysis": "无。", "title": "计算字符串中子串出现的次数。"}
{"name": "Python 练习实例95", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。"}
{"name": "Python 练习实例94", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"name": "Python 练习实例93", "analysis": "无。", "title": "时间函数举例3。"}
{"name": "Python 练习实例92", "analysis": "无。", "title": "时间函数举例2。"}
{"name": "Python 练习实例91", "analysis": "无。", "title": "时间函数举例1。"}
{"name": "Python 练习实例90", "analysis": "无。", "title": "列表使用实例。"}
{"name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。"}
{"name": "Python 练习实例89", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"name": "Python 练习实例88", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"name": "Python 练习实例87", "analysis": "无。", "title": "回答结果（结构体变量传递）。"}
{"name": "Python 练习实例86", "analysis": "无。", "title": "两个字符串连接程序。"}
{"name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"name": "Python 练习实例84", "analysis": "无。", "title": "连接字符串。"}
{"name": "Python 练习实例82", "analysis": "无。", "title": "八进制转换为十进制"}
{"name": "Python 练习实例74", "analysis": "排序可使用 ", "title": "列表排序及连接。"}
{"name": "Python 练习实例81", "analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"name": "Python 练习实例80", "analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"name": "Python 练习实例79", "analysis": "无。", "title": "字符串排序。"}
{"name": "Python 练习实例78", "analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"name": "Python 练习实例77", "analysis": "无。", "title": "循环输出列表"}
{"name": "Python 练习实例76", "analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"name": "Python 练习实例75", "analysis": "无。", "title": "放松一下，算一道简单的题目。"}
{"name": "Python 练习实例73", "analysis": "无。", "title": "反向输出一个链表。"}
{"name": "Python 练习实例72", "analysis": "无。", "title": "创建一个链表。"}
{"name": "Python 练习实例71", "analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"name": "Python 练习实例70", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"name": "Python 练习实例69", "analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"name": "Python 练习实例68", "analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"name": "Python 练习实例67", "analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"name": "Python 练习实例66", "analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "title": "\n\t\t\t\t\t", "demo": ""}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)"}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "title": "斐波那契数列。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h"}
{"analysis": "无。", "name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))"}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "title": "暂停一秒输出。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒"}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),"}
{"analysis": "程序源代码：", "name": "Python 练习实例22", "title": "两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(ord('x'),ord('z') + 1):\n    for j in range(ord('x'),ord('z') + 1):\n        if i != j:\n            for k in range(ord('x'),ord('z') + 1):\n                if (i != k) and (j != k):\n                    if (i != ord('x')) and (k != ord('x')) and (k != ord('z')):\n                        print 'order is a -- %s\\t b -- %s\\tc--%s' % (chr(i),chr(j),chr(k))"}
{"analysis": "请参照程序", "name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]"}
{"analysis": "无。", "name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount"}
{"analysis": "采取逆向思维的方法，从后往前推断。", "name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1"}
{"analysis": "无", "name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))"}
{"analysis": "无。", "name": "Python 练习实例93", "title": "时间函数举例3。", "demo": ""}
{"analysis": "无。", "name": "Python 练习实例100", "title": "列表转换为字典。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])"}
{"demo": "", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "name": "Python 100例"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。", "name": "Python 练习实例16"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "name": "Python 练习实例6"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 ", "name": "Python 练习实例9"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14"}
{"demo": "", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "title": "学习使用按位与 & 。", "name": "Python 练习实例51"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10"}
{"demo": "", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。", "title": "字符串排序。", "name": "Python 练习实例79"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。", "title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96"}
{"demo": "", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94"}
{"demo": "", "analysis": "无。", "title": "时间函数举例3。", "name": "Python 练习实例93"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。", "title": "时间函数举例2。", "name": "Python 练习实例92"}
{"demo": "", "analysis": "无。", "title": "时间函数举例1。", "name": "Python 练习实例91"}
{"demo": "", "analysis": "无。", "title": "列表使用实例。", "name": "Python 练习实例90"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。", "title": "列表转换为字典。 ", "name": "Python 练习实例100"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88"}
{"demo": "", "analysis": "无。", "title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87"}
{"demo": "", "analysis": "无。", "title": "两个字符串连接程序。", "name": "Python 练习实例86"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。", "title": "连接字符串。", "name": "Python 练习实例84"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。", "title": "八进制转换为十进制", "name": "Python 练习实例82"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。", "title": "循环输出列表", "name": "Python 练习实例77"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。", "title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 ", "title": "列表排序及连接。", "name": "Python 练习实例74"}
{"demo": "", "analysis": "无。", "title": "反向输出一个链表。", "name": "Python 练习实例73"}
{"demo": "", "analysis": "无。", "title": "创建一个链表。", "name": "Python 练习实例72"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71"}
{"demo": "", "analysis": "无。", "title": "一个最优美的图案。　　", "name": "Python 练习实例65"}
{"demo": "", "analysis": "无。", "title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。", "title": "画椭圆。　", "name": "Python 练习实例63"}
{"demo": "", "analysis": "无。", "title": "查找字符串。　　", "name": "Python 练习实例62"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。", "title": "计算字符串长度。　　", "name": "Python 练习实例60"}
{"demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "title": "画图，综合例子。　　", "name": "Python 练习实例59"}
{"demo": "", "analysis": "\n\t\t\t\t\t", "title": "画图，学用rectangle画方形。　　　", "name": "Python 练习实例58"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "analysis": "无。", "title": "画图，学用line画直线。", "name": "Python 练习实例57"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "analysis": "无。", "title": "画图，学用circle画圆形。　　　", "name": "Python 练习实例56"}
{"demo": "", "analysis": "~0=1; ~1=0; ", "title": "学习使用按位取反~。", "name": "Python 练习实例55"}
{"demo": "", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "title": "学习使用按位异或 ^ 。", "name": "Python 练习实例53"}
{"demo": "", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "title": "学习使用按位或 | 。", "name": "Python 练习实例52"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "analysis": "使用 random 模块。", "title": "输出一个随机数。", "name": "Python 练习实例50"}
{"demo": "", "analysis": "演示一个python作用域使用方法", "title": "模仿静态变量(static)另一案例。", "name": "Python 练习实例43"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "analysis": "无", "title": "使用lambda来创建匿名函数。", "name": "Python 练习实例49"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "analysis": "无", "title": "数字比较。", "name": "Python 练习实例48"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "analysis": "无", "title": "两个变量值互换。", "name": "Python 练习实例47"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "analysis": "无", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "name": "Python 练习实例46"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "analysis": "无", "title": "统计 1 到 100 之和。", "name": "Python 练习实例45"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "name": "Python 练习实例44 - Python 两个矩阵相加"}
{"demo": "", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "title": "学习使用auto定义变量的用法。", "name": "Python 练习实例42"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "analysis": "用第一个与最后一个交换。", "title": "将一个数组逆序输出。", "name": "Python 练习实例40"}
{"demo": "", "analysis": "无。", "title": "模仿静态变量的用法。", "name": "Python 练习实例41"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "analysis": "无。", "title": "求100之内的素数。", "name": "Python 练习实例36"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "title": "求一个3*3矩阵对角线元素之和。", "name": "Python 练习实例38"}
{"demo": "", "analysis": "无。", "title": "文本颜色设置。", "name": "Python 练习实例35"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "title": "对10个数进行排序。", "name": "Python 练习实例37"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "name": "Python 练习实例39"}
{"demo": "", "analysis": "无。", "title": "练习函数调用。", "name": "Python 练习实例34"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "analysis": "无。", "title": "按逗号分隔列表。", "name": "Python 练习实例33"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "analysis": "无。", "title": "按相反的顺序输出列表的值。", "name": "Python 练习实例32"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "name": "Python 练习实例31"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "analysis": "学会分解出每一位数。", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "name": "Python 练习实例29"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "analysis": "无。", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "name": "Python 练习实例27"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "analysis": "无。", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "name": "Python 练习实例30"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "name": "Python 练习实例28"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "analysis": "递归公式：fn=fn_1*4! ", "title": "利用递归方法求5!。", "name": "Python 练习实例26"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "analysis": "请抓住分子与分母的变化规律。 ", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "name": "Python 练习实例24"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "analysis": "此程序只是把累加变成了累乘。  ", "title": "求1+2!+3!+...+20!的和。", "name": "Python 练习实例25"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:", "name": "Python 练习实例23"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "name": "Python 练习实例17"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "analysis": "请参照程序", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18"}
{"name": "Python 100例", "demo": "", "output": "", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例63", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "output": "", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例57", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "output": "", "title": "画图，学用line画直线。", "analysis": "无。"}
{"name": "Python 练习实例56", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "output": "", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"demo": "", "title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t", "output": ""}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "output": "\r\n153\r\n370\r\n371\r\n407\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "output": "\r\n1 a\r\n2 b\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。", "output": "\r\n[1, 2, 3]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "output": "\r\n1534\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。", "output": "\r\n{'a': 'b', 1: 2}\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20", "analysis": "无", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "name": "Python 练习实例19", "analysis": "请参照程序", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "analysis": "无。", "output": "\r\n123456\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "analysis": "无。", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "analysis": "无。", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "analysis": "无。", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n"}
{"demo": "", "title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "analysis": "无。", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n"}
{"demo": "", "title": "时间函数举例3。", "name": "Python 练习实例93", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "title": "时间函数举例2。", "name": "Python 练习实例92", "analysis": "无。", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n"}
{"demo": "", "title": "时间函数举例1。", "name": "Python 练习实例91", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n"}
{"demo": "", "title": "列表使用实例。", "name": "Python 练习实例90", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "analysis": "无。", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n"}
{"demo": "", "title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n"}
{"demo": "", "title": "两个字符串连接程序。", "name": "Python 练习实例86", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "title": "连接字符串。", "name": "Python 练习实例84", "analysis": "无。", "output": "\r\nBrazil,Russia,India,China\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "title": "八进制转换为十进制", "name": "Python 练习实例82", "analysis": "无。", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "analysis": "无。", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "analysis": "无。", "output": "\r\n3121\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "title": "字符串排序。", "name": "Python 练习实例79", "analysis": "无。", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "analysis": "无。", "output": "\r\nwang,50\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "title": "循环输出列表", "name": "Python 练习实例77", "analysis": "无。", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "analysis": "无。", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "analysis": "无。", "output": "\r\n67\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "title": "列表排序及连接。", "name": "Python 练习实例74", "analysis": "排序可使用 ", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67", "analysis": "无。", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n"}
{"demo": "", "title": "反向输出一个链表。", "name": "Python 练习实例73", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n"}
{"demo": "", "title": "创建一个链表。", "name": "Python 练习实例72", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "analysis": "无。", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n"}
{"demo": "", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "analysis": "无。", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "analysis": "无。", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66", "analysis": "无。", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n"}
{"demo": "", "title": "一个最优美的图案。　　", "name": "Python 练习实例65", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n"}
{"demo": "", "title": "画图，学用rectangle画方形。　　　", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n"}
{"demo": "", "title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "title": "画椭圆。　", "name": "Python 练习实例63", "analysis": "使用 Tkinter。", "output": ""}
{"demo": "", "title": "查找字符串。　　", "name": "Python 练习实例62", "analysis": "无。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61", "analysis": "无。", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "title": "计算字符串长度。　　", "name": "Python 练习实例60", "analysis": "无。", "output": "\r\n6\r\n"}
{"demo": "", "title": "画图，综合例子。　　", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "title": "画图，学用line画直线。", "name": "Python 练习实例57", "analysis": "无。", "output": ""}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "title": "画图，学用circle画圆形。　　　", "name": "Python 练习实例56", "analysis": "无。", "output": ""}
{"demo": "", "title": "学习使用按位取反~。", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; ", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n"}
{"demo": "", "title": "学习使用按位异或 ^ 。", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n"}
{"demo": "", "title": "学习使用按位或 | 。", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n"}
{"demo": "", "title": "学习使用按位与 & 。", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "title": "输出一个随机数。", "name": "Python 练习实例50", "analysis": "使用 random 模块。", "output": "\r\n14.4012371357\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "title": "使用lambda来创建匿名函数。", "name": "Python 练习实例49", "analysis": "无", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "title": "两个变量值互换。", "name": "Python 练习实例47", "analysis": "无", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "name": "Python 练习实例46", "analysis": "无", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "title": "统计 1 到 100 之和。", "name": "Python 练习实例45", "analysis": "无", "output": "\r\nThe sum is 5050\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n"}
{"demo": "", "title": "模仿静态变量(static)另一案例。", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n"}
{"demo": "", "title": "学习使用auto定义变量的用法。", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "title": "数字比较。", "name": "Python 练习实例48", "analysis": "无", "output": "\r\n10 小于 20\r\n"}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "output": "", "demo": "", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "output": "\r\n[1, 2, 3]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "output": "\r\n1 a\r\n2 b\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例84", "title": "连接字符串。", "output": "\r\nBrazil,Russia,India,China\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "output": "\r\n{'a': 'b', 1: 2}\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\r\n123456\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\r\n3121\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。"}
{"name": "Python 练习实例79", "title": "字符串排序。", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\r\nwang,50\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。"}
{"name": "Python 练习实例77", "title": "循环输出列表", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "output": "\r\n67\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "output": "\r\n6\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "demo": "", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例57", "title": "画图，学用line画直线。", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "analysis": "无。"}
{"name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "analysis": "无。"}
{"name": "Python 练习实例55", "title": "学习使用按位取反~。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "demo": "", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "demo": "", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例52", "title": "学习使用按位或 | 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "demo": "", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例51", "title": "学习使用按位与 & 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "demo": "", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例50", "title": "输出一个随机数。", "output": "\r\n14.4012371357\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "analysis": "无"}
{"name": "Python 练习实例48", "title": "数字比较。", "output": "\r\n10 小于 20\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "analysis": "无"}
{"name": "Python 练习实例47", "title": "两个变量值互换。", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "analysis": "无"}
{"name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "analysis": "无"}
{"name": "Python 练习实例45", "title": "统计 1 到 100 之和。", "output": "\r\nThe sum is 5050\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "demo": "", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "demo": "", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例41", "title": "模仿静态变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例40", "title": "将一个数组逆序输出。", "output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。", "output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例37", "title": "对10个数进行排序。", "output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例36", "title": "求100之内的素数。", "output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "analysis": "无。"}
{"name": "Python 练习实例35", "title": "文本颜色设置。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例34", "title": "练习函数调用。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例33", "title": "按逗号分隔列表。", "output": "\r\n1,2,3,4,5\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "analysis": "无。"}
{"name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。", "output": "\r\nthree\r\ntwo\r\none\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "analysis": "无。"}
{"name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "output": "\r\n18\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "analysis": "无。"}
{"name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。", "output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "output": "\r\n32.6602607986\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "analysis": "无。"}
{"name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例26", "title": "利用递归方法求5!。", "output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "output": "\r\n1534\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "analysis": "无"}
{"name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "analysis": "请参照程序"}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例23", "title": "打印出如下图案（菱形）:", "output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"demo": "", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "output": "", "name": "Python 100例"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "name": "Python 练习实例1"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "name": "Python 练习实例8"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "name": "Python 练习实例5"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "name": "Python 练习实例6"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "name": "Python 练习实例4"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "name": "Python 练习实例3"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 ", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "name": "Python 练习实例10"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 ", "output": "\r\n1 a\r\n2 b\r\n", "name": "Python 练习实例9"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "output": "\r\n[1, 2, 3]\r\n", "name": "Python 练习实例7"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "name": "Python 练习实例2"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。", "title": "列表转换为字典。 ", "output": "\r\n{'a': 'b', 1: 2}\r\n", "name": "Python 练习实例100"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "analysis": "请参照程序", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n", "name": "Python 练习实例19"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "name": "Python 练习实例18"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "name": "Python 练习实例17"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "name": "Python 练习实例16"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "name": "Python 练习实例15"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "name": "Python 练习实例14"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\r\n123456\r\n", "name": "Python 练习实例99"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "name": "Python 练习实例98"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "name": "Python 练习实例97"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。", "title": "计算字符串中子串出现的次数。", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "name": "Python 练习实例96"}
{"demo": "", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "name": "Python 练习实例95"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "name": "Python 练习实例94"}
{"demo": "", "analysis": "无。", "title": "时间函数举例3。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "name": "Python 练习实例93"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。", "title": "时间函数举例2。", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "name": "Python 练习实例92"}
{"demo": "", "analysis": "无。", "title": "时间函数举例1。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "name": "Python 练习实例91"}
{"demo": "", "analysis": "无。", "title": "列表使用实例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "name": "Python 练习实例90"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "name": "Python 练习实例89"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "name": "Python 练习实例88"}
{"demo": "", "analysis": "无。", "title": "回答结果（结构体变量传递）。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "name": "Python 练习实例87"}
{"demo": "", "analysis": "无。", "title": "两个字符串连接程序。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "name": "Python 练习实例86"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "name": "Python 练习实例85"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。", "title": "连接字符串。", "output": "\r\nBrazil,Russia,India,China\r\n", "name": "Python 练习实例84"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "name": "Python 练习实例83"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。", "title": "八进制转换为十进制", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "name": "Python 练习实例82"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "name": "Python 练习实例81"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\r\n3121\r\n", "name": "Python 练习实例80"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。", "title": "字符串排序。", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "name": "Python 练习实例79"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\r\nwang,50\r\n", "name": "Python 练习实例78"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。", "title": "循环输出列表", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "name": "Python 练习实例77"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "name": "Python 练习实例76"}
{"demo": "", "analysis": "无。", "title": "反向输出一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "name": "Python 练习实例73"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。", "title": "放松一下，算一道简单的题目。", "output": "\r\n67\r\n", "name": "Python 练习实例75"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 ", "title": "列表排序及连接。", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "name": "Python 练习实例74"}
{"demo": "", "analysis": "无。", "title": "创建一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "name": "Python 练习实例72"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "name": "Python 练习实例71"}
{"demo": "", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "name": "Python 练习实例70"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "name": "Python 练习实例69"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "name": "Python 练习实例68"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "name": "Python 练习实例67"}
{"demo": "", "analysis": "无。", "title": "一个最优美的图案。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "name": "Python 练习实例65"}
{"demo": "", "analysis": "无。", "title": "查找字符串。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "name": "Python 练习实例62"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "name": "Python 练习实例66"}
{"demo": "", "analysis": "无。", "title": "利用ellipse 和 rectangle 画图。。　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "name": "Python 练习实例64"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。", "title": "画椭圆。　", "output": "", "name": "Python 练习实例63"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "name": "Python 练习实例61"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。", "title": "计算字符串长度。　　", "output": "\r\n6\r\n", "name": "Python 练习实例60"}
{"demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "title": "画图，综合例子。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "name": "Python 练习实例59"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "analysis": "无。", "title": "画图，学用line画直线。", "output": "", "name": "Python 练习实例57"}
{"demo": "", "analysis": "\n\t\t\t\t\t", "title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "name": "Python 练习实例58"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "analysis": "无。", "title": "画图，学用circle画圆形。　　　", "output": "", "name": "Python 练习实例56"}
{"demo": "", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "title": "学习使用按位与 & 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "name": "Python 练习实例51"}
{"demo": "", "analysis": "~0=1; ~1=0; ", "title": "学习使用按位取反~。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "name": "Python 练习实例55"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "analysis": "使用 random 模块。", "title": "输出一个随机数。", "output": "\r\n14.4012371357\r\n", "name": "Python 练习实例50"}
{"demo": "", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "title": "学习使用按位异或 ^ 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "name": "Python 练习实例53"}
{"demo": "", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "title": "学习使用按位或 | 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "name": "Python 练习实例52"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "analysis": "无", "title": "数字比较。", "output": "\r\n10 小于 20\r\n", "name": "Python 练习实例48"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "analysis": "无", "title": "使用lambda来创建匿名函数。", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "name": "Python 练习实例49"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "analysis": "无", "title": "两个变量值互换。", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "name": "Python 练习实例47"}
{"demo": "", "analysis": "演示一个python作用域使用方法", "title": "模仿静态变量(static)另一案例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "name": "Python 练习实例43"}
{"demo": "", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "title": "学习使用auto定义变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "name": "Python 练习实例42"}
{"demo": "", "analysis": "无。", "title": "模仿静态变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "name": "Python 练习实例41"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "analysis": "用第一个与最后一个交换。", "title": "将一个数组逆序输出。", "output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n", "name": "Python 练习实例40"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "analysis": "无", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "name": "Python 练习实例46"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "analysis": "无", "title": "统计 1 到 100 之和。", "output": "\r\nThe sum is 5050\r\n", "name": "Python 练习实例45"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "name": "Python 练习实例44 - Python 两个矩阵相加"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n", "name": "Python 练习实例39"}
{"demo": "", "analysis": "无。", "title": "文本颜色设置。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n", "name": "Python 练习实例35"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "title": "求一个3*3矩阵对角线元素之和。", "output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n", "name": "Python 练习实例38"}
{"demo": "", "analysis": "无。", "title": "练习函数调用。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n", "name": "Python 练习实例34"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "analysis": "无。", "title": "求100之内的素数。", "output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n", "name": "Python 练习实例36"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "analysis": "无。", "title": "按相反的顺序输出列表的值。", "output": "\r\nthree\r\ntwo\r\none\r\n", "name": "Python 练习实例32"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "analysis": "无。", "title": "按逗号分隔列表。", "output": "\r\n1,2,3,4,5\r\n", "name": "Python 练习实例33"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "title": "对10个数进行排序。", "output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n", "name": "Python 练习实例37"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "analysis": "无。", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n", "name": "Python 练习实例27"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "analysis": "无。", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n", "name": "Python 练习实例30"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n", "name": "Python 练习实例31"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "output": "\r\n18\r\n", "name": "Python 练习实例28"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "analysis": "此程序只是把累加变成了累乘。  ", "title": "求1+2!+3!+...+20!的和。", "output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n", "name": "Python 练习实例25"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "analysis": "递归公式：fn=fn_1*4! ", "title": "利用递归方法求5!。", "output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n", "name": "Python 练习实例26"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "analysis": "学会分解出每一位数。", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n", "name": "Python 练习实例29"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "analysis": "请抓住分子与分母的变化规律。 ", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "output": "\r\n32.6602607986\r\n", "name": "Python 练习实例24"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:", "output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n", "name": "Python 练习实例23"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "output": "\r\n1534\r\n", "name": "Python 练习实例21"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n", "name": "Python 练习实例20"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "name": "Python 练习实例13"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "name": "Python 练习实例12"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "name": "Python 练习实例11"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "demo": "", "output": "", "title": "\n\t\t\t\t\t"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "output": "\r\n1 a\r\n2 b\r\n", "title": "暂停一秒输出。 "}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "title": "输出 9*9 乘法口诀表。"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "title": "斐波那契数列。 "}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "output": "\r\n[1, 2, 3]\r\n", "title": "将一个列表的数据复制到另一个列表中。"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "name": "Python 练习实例15", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"analysis": "使用 datetime 模块。", "name": "Python 练习实例16", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "title": "输出指定格式的日期。"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "name": "Python 练习实例14", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "name": "Python 练习实例12", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"analysis": "无。", "name": "Python 练习实例10", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "title": "暂停一秒输出，并格式化当前时间。 "}
{"analysis": "无。", "name": "Python 练习实例100", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "output": "\r\n{'a': 'b', 1: 2}\r\n", "title": "列表转换为字典。 "}
{"analysis": "无。", "name": "Python 练习实例99", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "output": "\r\n123456\r\n", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"analysis": "无。", "name": "Python 练习实例98", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"analysis": "无。", "name": "Python 练习实例97", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"analysis": "无。", "name": "Python 练习实例96", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "title": "计算字符串中子串出现的次数。"}
{"analysis": "无。", "name": "Python 练习实例95", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "title": "字符串日期转换为易读的日期格式。"}
{"analysis": "无。", "name": "Python 练习实例94", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"analysis": "无。", "name": "Python 练习实例93", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "title": "时间函数举例3。"}
{"analysis": "无。", "name": "Python 练习实例92", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "title": "时间函数举例2。"}
{"analysis": "无。", "name": "Python 练习实例91", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "title": "时间函数举例1。"}
{"analysis": "无。", "name": "Python 练习实例90", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "title": "列表使用实例。"}
{"analysis": "无。", "name": "Python 练习实例89", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"analysis": "无。", "name": "Python 练习实例88", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"analysis": "无。", "name": "Python 练习实例87", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "title": "回答结果（结构体变量传递）。"}
{"analysis": "无。", "name": "Python 练习实例86", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "title": "两个字符串连接程序。"}
{"analysis": "999999 / 13 = 76923。", "name": "Python 练习实例85", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"analysis": "无。", "name": "Python 练习实例84", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "output": "\r\nBrazil,Russia,India,China\r\n", "title": "连接字符串。"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例83", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "title": "求0―7所能组成的奇数个数。"}
{"analysis": "无。", "name": "Python 练习实例82", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "title": "八进制转换为十进制"}
{"analysis": "无。", "name": "Python 练习实例81", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"analysis": "无。", "name": "Python 练习实例80", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "output": "\r\n3121\r\n", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"analysis": "无。", "name": "Python 练习实例79", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "title": "字符串排序。"}
{"analysis": "无。", "name": "Python 练习实例78", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "output": "\r\nwang,50\r\n", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"analysis": "无。", "name": "Python 练习实例77", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "title": "循环输出列表"}
{"analysis": "无。", "name": "Python 练习实例76", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"analysis": "无。", "name": "Python 练习实例75", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "output": "\r\n67\r\n", "title": "放松一下，算一道简单的题目。"}
{"analysis": "排序可使用 ", "name": "Python 练习实例74", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "title": "列表排序及连接。"}
{"analysis": "无。", "name": "Python 练习实例73", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "title": "反向输出一个链表。"}
{"analysis": "无。", "name": "Python 练习实例72", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "title": "创建一个链表。"}
{"analysis": "无。", "name": "Python 练习实例71", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"analysis": "无。", "name": "Python 练习实例70", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"analysis": "无。", "name": "Python 练习实例69", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"analysis": "无。", "name": "Python 练习实例68", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"analysis": "无。", "name": "Python 练习实例67", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"analysis": "使用 Tkinter。", "name": "Python 练习实例63", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "output": "", "title": "画椭圆。　"}
{"analysis": "无。", "name": "Python 练习实例62", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "title": "查找字符串。　　"}
{"analysis": "无。", "name": "Python 练习实例61", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"analysis": "无。", "name": "Python 练习实例66", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"analysis": "无。", "name": "Python 练习实例60", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "output": "\r\n6\r\n", "title": "计算字符串长度。　　"}
{"analysis": "无。", "name": "Python 练习实例65", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "title": "一个最优美的图案。　　"}
{"analysis": "无。", "name": "Python 练习实例64", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "title": "利用ellipse 和 rectangle 画图。。　"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "name": "Python 练习实例59", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "title": "画图，综合例子。　　"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例58", "demo": "", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "title": "画图，学用rectangle画方形。　　　"}
{"analysis": "无。", "name": "Python 练习实例57", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "output": "", "title": "画图，学用line画直线。"}
{"analysis": "无。", "name": "Python 练习实例56", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "output": "", "title": "画图，学用circle画圆形。　　　"}
{"analysis": "~0=1; ~1=0; ", "name": "Python 练习实例55", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "title": "学习使用按位取反~。"}
{"analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "name": "Python 练习实例53", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "title": "学习使用按位异或 ^ 。"}
{"analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "name": "Python 练习实例52", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "title": "学习使用按位或 | 。"}
{"analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "name": "Python 练习实例51", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "title": "学习使用按位与 & 。"}
{"analysis": "使用 random 模块。", "name": "Python 练习实例50", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "output": "\r\n14.4012371357\r\n", "title": "输出一个随机数。"}
{"analysis": "无", "name": "Python 练习实例49", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "title": "使用lambda来创建匿名函数。"}
{"analysis": "无", "name": "Python 练习实例48", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "output": "\r\n10 小于 20\r\n", "title": "数字比较。"}
{"analysis": "无", "name": "Python 练习实例47", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "title": "两个变量值互换。"}
{"analysis": "无", "name": "Python 练习实例46", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"analysis": "无", "name": "Python 练习实例45", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "output": "\r\nThe sum is 5050\r\n", "title": "统计 1 到 100 之和。"}
{"analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "name": "Python 练习实例44 - Python 两个矩阵相加", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"analysis": "演示一个python作用域使用方法", "name": "Python 练习实例43", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "title": "模仿静态变量(static)另一案例。"}
{"analysis": "没有auto关键字，使用变量作用域来举例吧。", "name": "Python 练习实例42", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "title": "学习使用auto定义变量的用法。"}
{"analysis": "无。", "name": "Python 练习实例41", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "title": "模仿静态变量的用法。"}
{"analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "name": "Python 练习实例38", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n", "title": "求一个3*3矩阵对角线元素之和。"}
{"analysis": "用第一个与最后一个交换。", "name": "Python 练习实例40", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n", "title": "将一个数组逆序输出。"}
{"analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "name": "Python 练习实例39", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。"}
{"analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "name": "Python 练习实例37", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n", "title": "对10个数进行排序。"}
{"analysis": "无。", "name": "Python 练习实例36", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n", "title": "求100之内的素数。"}
{"analysis": "无。", "name": "Python 练习实例35", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n", "title": "文本颜色设置。"}
{"analysis": "无。", "name": "Python 练习实例34", "demo": "", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n", "title": "练习函数调用。"}
{"analysis": "无。", "name": "Python 练习实例33", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "output": "\r\n1,2,3,4,5\r\n", "title": "按逗号分隔列表。"}
{"analysis": "无。", "name": "Python 练习实例27", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。"}
{"analysis": "递归公式：fn=fn_1*4! ", "name": "Python 练习实例26", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n", "title": "利用递归方法求5!。"}
{"analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "name": "Python 练习实例31", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。"}
{"analysis": "无。", "name": "Python 练习实例30", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。"}
{"analysis": "无。", "name": "Python 练习实例32", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "output": "\r\nthree\r\ntwo\r\none\r\n", "title": "按相反的顺序输出列表的值。"}
{"analysis": "学会分解出每一位数。", "name": "Python 练习实例29", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。"}
{"analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "name": "Python 练习实例28", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "output": "\r\n18\r\n", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？"}
{"analysis": "此程序只是把累加变成了累乘。  ", "name": "Python 练习实例25", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n", "title": "求1+2!+3!+...+20!的和。"}
{"analysis": "请抓住分子与分母的变化规律。 ", "name": "Python 练习实例24", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "output": "\r\n32.6602607986\r\n", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。"}
{"analysis": "采取逆向思维的方法，从后往前推断。", "name": "Python 练习实例21", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "output": "\r\n1534\r\n", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"analysis": "无", "name": "Python 练习实例20", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"analysis": "请参照程序", "name": "Python 练习实例19", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"analysis": "关键是计算出每一项的值。", "name": "Python 练习实例18", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"analysis": "利用while语句,条件为输入的字符不为'\\n'。", "name": "Python 练习实例17", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "name": "Python 练习实例23", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n", "title": "打印出如下图案（菱形）:"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "demo": "", "title": "\n\t\t\t\t\t", "output": ""}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n"}
{"analysis": "关键是计算出每一项的值。", "name": "Python 练习实例18", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n"}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "title": "输出 9*9 乘法口诀表。", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n"}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n"}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n"}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "title": "将一个列表的数据复制到另一个列表中。", "output": "\r\n[1, 2, 3]\r\n"}
{"analysis": "利用while语句,条件为输入的字符不为'\\n'。", "name": "Python 练习实例17", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "title": "斐波那契数列。 ", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n"}
{"analysis": "使用 datetime 模块。", "name": "Python 练习实例16", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "title": "输出指定格式的日期。", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "name": "Python 练习实例15", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "name": "Python 练习实例14", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\r\n153\r\n370\r\n371\r\n407\r\n"}
{"analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "name": "Python 练习实例12", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n"}
{"analysis": "无。", "name": "Python 练习实例10", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "title": "暂停一秒输出，并格式化当前时间。 ", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n"}
{"analysis": "无。", "name": "Python 练习实例66", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n"}
{"analysis": "无。", "name": "Python 练习实例92", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "title": "时间函数举例2。", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n"}
{"analysis": "无。", "name": "Python 练习实例91", "demo": "", "title": "时间函数举例1。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n"}
{"analysis": "无。", "name": "Python 练习实例90", "demo": "", "title": "列表使用实例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n"}
{"analysis": "无。", "name": "Python 练习实例89", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n"}
{"analysis": "无。", "name": "Python 练习实例88", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n"}
{"analysis": "无。", "name": "Python 练习实例97", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n"}
{"analysis": "无。", "name": "Python 练习实例96", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "title": "计算字符串中子串出现的次数。", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n"}
{"analysis": "无。", "name": "Python 练习实例95", "demo": "", "title": "字符串日期转换为易读的日期格式。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n"}
{"analysis": "无。", "name": "Python 练习实例99", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\r\n123456\r\n"}
{"analysis": "无。", "name": "Python 练习实例98", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n"}
{"analysis": "无。", "name": "Python 练习实例94", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n"}
{"analysis": "无。", "name": "Python 练习实例93", "demo": "", "title": "时间函数举例3。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n"}
{"analysis": "无。", "name": "Python 练习实例100", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "title": "列表转换为字典。 ", "output": "\r\n{'a': 'b', 1: 2}\r\n"}
{"analysis": "无。", "name": "Python 练习实例87", "demo": "", "title": "回答结果（结构体变量传递）。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n"}
{"analysis": "无。", "name": "Python 练习实例86", "demo": "", "title": "两个字符串连接程序。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n"}
{"analysis": "999999 / 13 = 76923。", "name": "Python 练习实例85", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n"}
{"analysis": "无。", "name": "Python 练习实例84", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "title": "连接字符串。", "output": "\r\nBrazil,Russia,India,China\r\n"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例83", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "title": "求0―7所能组成的奇数个数。", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n"}
{"analysis": "无。", "name": "Python 练习实例82", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "title": "八进制转换为十进制", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n"}
{"analysis": "无。", "name": "Python 练习实例81", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n"}
{"analysis": "无。", "name": "Python 练习实例80", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\r\n3121\r\n"}
{"analysis": "无。", "name": "Python 练习实例79", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "title": "字符串排序。", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n"}
{"analysis": "无。", "name": "Python 练习实例78", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\r\nwang,50\r\n"}
{"analysis": "无。", "name": "Python 练习实例77", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "title": "循环输出列表", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n"}
{"analysis": "无。", "name": "Python 练习实例76", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n"}
{"analysis": "无。", "name": "Python 练习实例72", "demo": "", "title": "创建一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n"}
{"analysis": "无。", "name": "Python 练习实例71", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n"}
{"analysis": "无。", "name": "Python 练习实例70", "demo": "", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n"}
{"analysis": "无。", "name": "Python 练习实例69", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n"}
{"analysis": "无。", "name": "Python 练习实例75", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "title": "放松一下，算一道简单的题目。", "output": "\r\n67\r\n"}
{"analysis": "排序可使用 ", "name": "Python 练习实例74", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "title": "列表排序及连接。", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n"}
{"analysis": "无。", "name": "Python 练习实例73", "demo": "", "title": "反向输出一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n"}
{"analysis": "无。", "name": "Python 练习实例68", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n"}
{"analysis": "无。", "name": "Python 练习实例67", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n"}
{"analysis": "无。", "name": "Python 练习实例65", "demo": "", "title": "一个最优美的图案。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n"}
{"analysis": "无。", "name": "Python 练习实例64", "demo": "", "title": "利用ellipse 和 rectangle 画图。。　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n"}
{"analysis": "使用 Tkinter。", "name": "Python 练习实例63", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "title": "画椭圆。　", "output": ""}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "name": "Python 练习实例59", "demo": "", "title": "画图，综合例子。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n"}
{"analysis": "无。", "name": "Python 练习实例62", "demo": "", "title": "查找字符串。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n"}
{"analysis": "无。", "name": "Python 练习实例61", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n"}
{"analysis": "无。", "name": "Python 练习实例60", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "title": "计算字符串长度。　　", "output": "\r\n6\r\n"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例58", "demo": "", "title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n"}
{"analysis": "无。", "name": "Python 练习实例57", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "title": "画图，学用line画直线。", "output": ""}
{"analysis": "无。", "name": "Python 练习实例56", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "title": "画图，学用circle画圆形。　　　", "output": ""}
{"analysis": "~0=1; ~1=0; ", "name": "Python 练习实例55", "demo": "", "title": "学习使用按位取反~。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n"}
{"analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "name": "Python 练习实例53", "demo": "", "title": "学习使用按位异或 ^ 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n"}
{"analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "name": "Python 练习实例52", "demo": "", "title": "学习使用按位或 | 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n"}
{"analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "name": "Python 练习实例51", "demo": "", "title": "学习使用按位与 & 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n"}
{"analysis": "使用 random 模块。", "name": "Python 练习实例50", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "title": "输出一个随机数。", "output": "\r\n14.4012371357\r\n"}
{"analysis": "无", "name": "Python 练习实例49", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "title": "使用lambda来创建匿名函数。", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n"}
{"analysis": "无", "name": "Python 练习实例48", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "title": "数字比较。", "output": "\r\n10 小于 20\r\n"}
{"analysis": "无", "name": "Python 练习实例47", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "title": "两个变量值互换。", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n"}
{"analysis": "无", "name": "Python 练习实例46", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n"}
{"analysis": "无", "name": "Python 练习实例45", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "title": "统计 1 到 100 之和。", "output": "\r\nThe sum is 5050\r\n"}
{"analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "name": "Python 练习实例44 - Python 两个矩阵相加", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n"}
{"analysis": "演示一个python作用域使用方法", "name": "Python 练习实例43", "demo": "", "title": "模仿静态变量(static)另一案例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n"}
{"analysis": "没有auto关键字，使用变量作用域来举例吧。", "name": "Python 练习实例42", "demo": "", "title": "学习使用auto定义变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n"}
{"analysis": "无。", "name": "Python 练习实例41", "demo": "", "title": "模仿静态变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n"}
{"analysis": "用第一个与最后一个交换。", "name": "Python 练习实例40", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "title": "将一个数组逆序输出。", "output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n"}
{"analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "name": "Python 练习实例39", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n"}
{"analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "name": "Python 练习实例38", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "title": "求一个3*3矩阵对角线元素之和。", "output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n"}
{"analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "name": "Python 练习实例37", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "title": "对10个数进行排序。", "output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n"}
{"analysis": "无。", "name": "Python 练习实例36", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "title": "求100之内的素数。", "output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n"}
{"analysis": "无。", "name": "Python 练习实例35", "demo": "", "title": "文本颜色设置。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n"}
{"analysis": "无。", "name": "Python 练习实例34", "demo": "", "title": "练习函数调用。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n"}
{"analysis": "无。", "name": "Python 练习实例33", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "title": "按逗号分隔列表。", "output": "\r\n1,2,3,4,5\r\n"}
{"analysis": "无。", "name": "Python 练习实例32", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "title": "按相反的顺序输出列表的值。", "output": "\r\nthree\r\ntwo\r\none\r\n"}
{"analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "name": "Python 练习实例31", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n"}
{"analysis": "无。", "name": "Python 练习实例30", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n"}
{"analysis": "学会分解出每一位数。", "name": "Python 练习实例29", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n"}
{"analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "name": "Python 练习实例28", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "output": "\r\n18\r\n"}
{"analysis": "无。", "name": "Python 练习实例27", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n"}
{"analysis": "递归公式：fn=fn_1*4! ", "name": "Python 练习实例26", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "title": "利用递归方法求5!。", "output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n"}
{"analysis": "此程序只是把累加变成了累乘。  ", "name": "Python 练习实例25", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "title": "求1+2!+3!+...+20!的和。", "output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n"}
{"analysis": "请抓住分子与分母的变化规律。 ", "name": "Python 练习实例24", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "output": "\r\n32.6602607986\r\n"}
{"analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "name": "Python 练习实例23", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "title": "打印出如下图案（菱形）:", "output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n"}
{"analysis": "采取逆向思维的方法，从后往前推断。", "name": "Python 练习实例21", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "output": "\r\n1534\r\n"}
{"analysis": "无", "name": "Python 练习实例20", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n"}
{"analysis": "请参照程序", "name": "Python 练习实例19", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n"}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "title": "暂停一秒输出。 ", "output": "\r\n1 a\r\n2 b\r\n"}
{"name": "Python 100例", "output": "", "demo": "", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"name": "Python 练习实例7", "output": "\r\n[1, 2, 3]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。"}
{"name": "Python 练习实例8", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。"}
{"name": "Python 练习实例5", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"name": "Python 练习实例6", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 "}
{"name": "Python 练习实例4", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"name": "Python 练习实例10", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 "}
{"name": "Python 练习实例9", "output": "\r\n1 a\r\n2 b\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 "}
{"name": "Python 练习实例3", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"name": "Python 练习实例2", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"name": "Python 练习实例21", "output": "\r\n1534\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"name": "Python 练习实例20", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"name": "Python 练习实例19", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "analysis": "请参照程序", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"name": "Python 练习实例35", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n", "demo": "", "analysis": "无。", "title": "文本颜色设置。"}
{"name": "Python 练习实例18", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"name": "Python 练习实例17", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"name": "Python 练习实例16", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。"}
{"name": "Python 练习实例100", "output": "\r\n{'a': 'b', 1: 2}\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。", "title": "列表转换为字典。 "}
{"name": "Python 练习实例99", "output": "\r\n123456\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"name": "Python 练习实例98", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"name": "Python 练习实例97", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"name": "Python 练习实例96", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。", "title": "计算字符串中子串出现的次数。"}
{"name": "Python 练习实例95", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "demo": "", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。"}
{"name": "Python 练习实例94", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"name": "Python 练习实例93", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "demo": "", "analysis": "无。", "title": "时间函数举例3。"}
{"name": "Python 练习实例92", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。", "title": "时间函数举例2。"}
{"name": "Python 练习实例84", "output": "\r\nBrazil,Russia,India,China\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。", "title": "连接字符串。"}
{"name": "Python 练习实例91", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "demo": "", "analysis": "无。", "title": "时间函数举例1。"}
{"name": "Python 练习实例90", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "demo": "", "analysis": "无。", "title": "列表使用实例。"}
{"name": "Python 练习实例89", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"name": "Python 练习实例88", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"name": "Python 练习实例87", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "demo": "", "analysis": "无。", "title": "回答结果（结构体变量传递）。"}
{"name": "Python 练习实例86", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "demo": "", "analysis": "无。", "title": "两个字符串连接程序。"}
{"name": "Python 练习实例85", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"name": "Python 练习实例83", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。"}
{"name": "Python 练习实例82", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。", "title": "八进制转换为十进制"}
{"name": "Python 练习实例81", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"name": "Python 练习实例80", "output": "\r\n3121\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"name": "Python 练习实例79", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。", "title": "字符串排序。"}
{"name": "Python 练习实例78", "output": "\r\nwang,50\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"name": "Python 练习实例77", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。", "title": "循环输出列表"}
{"name": "Python 练习实例76", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"name": "Python 练习实例75", "output": "\r\n67\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。", "title": "放松一下，算一道简单的题目。"}
{"name": "Python 练习实例67", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"name": "Python 练习实例74", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 ", "title": "列表排序及连接。"}
{"name": "Python 练习实例73", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "demo": "", "analysis": "无。", "title": "反向输出一个链表。"}
{"name": "Python 练习实例72", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "demo": "", "analysis": "无。", "title": "创建一个链表。"}
{"name": "Python 练习实例71", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"name": "Python 练习实例70", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "demo": "", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"name": "Python 练习实例69", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"name": "Python 练习实例68", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"name": "Python 练习实例66", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"name": "Python 练习实例65", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "demo": "", "analysis": "无。", "title": "一个最优美的图案。　　"}
{"name": "Python 练习实例64", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "demo": "", "analysis": "无。", "title": "利用ellipse 和 rectangle 画图。。　"}
{"name": "Python 练习实例63", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。", "title": "画椭圆。　"}
{"name": "Python 练习实例62", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "demo": "", "analysis": "无。", "title": "查找字符串。　　"}
{"name": "Python 练习实例61", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"name": "Python 练习实例60", "output": "\r\n6\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。", "title": "计算字符串长度。　　"}
{"name": "Python 练习实例59", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "title": "画图，综合例子。　　"}
{"name": "Python 练习实例58", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "demo": "", "analysis": "\n\t\t\t\t\t", "title": "画图，学用rectangle画方形。　　　"}
{"name": "Python 练习实例57", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "analysis": "无。", "title": "画图，学用line画直线。"}
{"name": "Python 练习实例55", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "demo": "", "analysis": "~0=1; ~1=0; ", "title": "学习使用按位取反~。"}
{"name": "Python 练习实例53", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "demo": "", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "title": "学习使用按位异或 ^ 。"}
{"name": "Python 练习实例52", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "demo": "", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "title": "学习使用按位或 | 。"}
{"name": "Python 练习实例51", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "demo": "", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "title": "学习使用按位与 & 。"}
{"name": "Python 练习实例56", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "analysis": "无。", "title": "画图，学用circle画圆形。　　　"}
{"name": "Python 练习实例50", "output": "\r\n14.4012371357\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "analysis": "使用 random 模块。", "title": "输出一个随机数。"}
{"name": "Python 练习实例49", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "analysis": "无", "title": "使用lambda来创建匿名函数。"}
{"name": "Python 练习实例43", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "demo": "", "analysis": "演示一个python作用域使用方法", "title": "模仿静态变量(static)另一案例。"}
{"name": "Python 练习实例48", "output": "\r\n10 小于 20\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "analysis": "无", "title": "数字比较。"}
{"name": "Python 练习实例47", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "analysis": "无", "title": "两个变量值互换。"}
{"name": "Python 练习实例46", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "analysis": "无", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"name": "Python 练习实例45", "output": "\r\nThe sum is 5050\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "analysis": "无", "title": "统计 1 到 100 之和。"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"name": "Python 练习实例42", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "demo": "", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "title": "学习使用auto定义变量的用法。"}
{"name": "Python 练习实例41", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "demo": "", "analysis": "无。", "title": "模仿静态变量的用法。"}
{"name": "Python 练习实例40", "output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "analysis": "用第一个与最后一个交换。", "title": "将一个数组逆序输出。"}
{"name": "Python 练习实例39", "output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。"}
{"name": "Python 练习实例38", "output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "title": "求一个3*3矩阵对角线元素之和。"}
{"name": "Python 练习实例37", "output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "title": "对10个数进行排序。"}
{"name": "Python 练习实例36", "output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "analysis": "无。", "title": "求100之内的素数。"}
{"name": "Python 练习实例34", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n", "demo": "", "analysis": "无。", "title": "练习函数调用。"}
{"name": "Python 练习实例33", "output": "\r\n1,2,3,4,5\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "analysis": "无。", "title": "按逗号分隔列表。"}
{"name": "Python 练习实例32", "output": "\r\nthree\r\ntwo\r\none\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "analysis": "无。", "title": "按相反的顺序输出列表的值。"}
{"name": "Python 练习实例31", "output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。"}
{"name": "Python 练习实例30", "output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "analysis": "无。", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。"}
{"name": "Python 练习实例29", "output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "analysis": "学会分解出每一位数。", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。"}
{"name": "Python 练习实例28", "output": "\r\n18\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？"}
{"name": "Python 练习实例27", "output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "analysis": "无。", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。"}
{"name": "Python 练习实例26", "output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "analysis": "递归公式：fn=fn_1*4! ", "title": "利用递归方法求5!。"}
{"name": "Python 练习实例25", "output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "analysis": "此程序只是把累加变成了累乘。  ", "title": "求1+2!+3!+...+20!的和。"}
{"name": "Python 练习实例24", "output": "\r\n32.6602607986\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "analysis": "请抓住分子与分母的变化规律。 ", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。"}
{"name": "Python 练习实例23", "output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:"}
{"name": "Python 练习实例15", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"name": "Python 练习实例14", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"name": "Python 练习实例13", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"name": "Python 练习实例12", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"name": "Python 练习实例11", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"output": "", "name": "Python 100例", "analysis": "\n\t\t\t\t\t", "demo": "", "title": "\n\t\t\t\t\t"}
{"output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"output": "\r\n1 a\r\n2 b\r\n", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "title": "暂停一秒输出。 "}
{"output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "title": "输出 9*9 乘法口诀表。"}
{"output": "\r\n153\r\n370\r\n371\r\n407\r\n", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "title": "斐波那契数列。 "}
{"output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"output": "\r\n[1, 2, 3]\r\n", "name": "Python 练习实例7", "analysis": "使用列表[:]。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "title": "将一个列表的数据复制到另一个列表中。"}
{"output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "name": "Python 练习实例10", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "title": "暂停一秒输出，并格式化当前时间。 "}
{"output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"output": "\r\n1534\r\n", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n", "name": "Python 练习实例20", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n", "name": "Python 练习实例34", "analysis": "无。", "demo": "", "title": "练习函数调用。"}
{"output": "\r\n{'a': 'b', 1: 2}\r\n", "name": "Python 练习实例100", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "title": "列表转换为字典。 "}
{"output": "\r\n123456\r\n", "name": "Python 练习实例99", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "name": "Python 练习实例98", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "name": "Python 练习实例97", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "name": "Python 练习实例96", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "title": "计算字符串中子串出现的次数。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "name": "Python 练习实例95", "analysis": "无。", "demo": "", "title": "字符串日期转换为易读的日期格式。"}
{"output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "name": "Python 练习实例94", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "name": "Python 练习实例93", "analysis": "无。", "demo": "", "title": "时间函数举例3。"}
{"output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "name": "Python 练习实例92", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "title": "时间函数举例2。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "name": "Python 练习实例91", "analysis": "无。", "demo": "", "title": "时间函数举例1。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "name": "Python 练习实例90", "analysis": "无。", "demo": "", "title": "列表使用实例。"}
{"output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "name": "Python 练习实例89", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "name": "Python 练习实例88", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "name": "Python 练习实例87", "analysis": "无。", "demo": "", "title": "回答结果（结构体变量传递）。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "name": "Python 练习实例86", "analysis": "无。", "demo": "", "title": "两个字符串连接程序。"}
{"output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"output": "\r\nBrazil,Russia,India,China\r\n", "name": "Python 练习实例84", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "title": "连接字符串。"}
{"output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "name": "Python 练习实例76", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "title": "求0―7所能组成的奇数个数。"}
{"output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "name": "Python 练习实例82", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "title": "八进制转换为十进制"}
{"output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "name": "Python 练习实例81", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"output": "\r\n3121\r\n", "name": "Python 练习实例80", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "name": "Python 练习实例79", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "title": "字符串排序。"}
{"output": "\r\nwang,50\r\n", "name": "Python 练习实例78", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "name": "Python 练习实例77", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "title": "循环输出列表"}
{"output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "name": "Python 练习实例74", "analysis": "排序可使用 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "title": "列表排序及连接。"}
{"output": "\r\n67\r\n", "name": "Python 练习实例75", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "title": "放松一下，算一道简单的题目。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "name": "Python 练习实例73", "analysis": "无。", "demo": "", "title": "反向输出一个链表。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "name": "Python 练习实例72", "analysis": "无。", "demo": "", "title": "创建一个链表。"}
{"output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "name": "Python 练习实例71", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "name": "Python 练习实例70", "analysis": "无。", "demo": "", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "name": "Python 练习实例69", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "name": "Python 练习实例68", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "name": "Python 练习实例67", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "name": "Python 练习实例66", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "name": "Python 练习实例65", "analysis": "无。", "demo": "", "title": "一个最优美的图案。　　"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "name": "Python 练习实例64", "analysis": "无。", "demo": "", "title": "利用ellipse 和 rectangle 画图。。　"}
{"output": "", "name": "Python 练习实例63", "analysis": "使用 Tkinter。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "title": "画椭圆。　"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "name": "Python 练习实例62", "analysis": "无。", "demo": "", "title": "查找字符串。　　"}
{"output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "name": "Python 练习实例61", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"output": "\r\n6\r\n", "name": "Python 练习实例60", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "title": "计算字符串长度。　　"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "demo": "", "title": "画图，综合例子。　　"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; ", "demo": "", "title": "学习使用按位取反~。"}
{"output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t", "demo": "", "title": "画图，学用rectangle画方形。　　　"}
{"output": "", "name": "Python 练习实例57", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "title": "画图，学用line画直线。"}
{"output": "", "name": "Python 练习实例56", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "title": "画图，学用circle画圆形。　　　"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "demo": "", "title": "学习使用按位异或 ^ 。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "demo": "", "title": "学习使用按位或 | 。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "demo": "", "title": "学习使用按位与 & 。"}
{"output": "\r\n14.4012371357\r\n", "name": "Python 练习实例50", "analysis": "使用 random 模块。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "title": "输出一个随机数。"}
{"output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "name": "Python 练习实例46", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "name": "Python 练习实例49", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "title": "使用lambda来创建匿名函数。"}
{"output": "\r\n10 小于 20\r\n", "name": "Python 练习实例48", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "title": "数字比较。"}
{"output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "name": "Python 练习实例47", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "title": "两个变量值互换。"}
{"output": "\r\nThe sum is 5050\r\n", "name": "Python 练习实例45", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "title": "统计 1 到 100 之和。"}
{"output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法", "demo": "", "title": "模仿静态变量(static)另一案例。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "demo": "", "title": "学习使用auto定义变量的用法。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "name": "Python 练习实例41", "analysis": "无。", "demo": "", "title": "模仿静态变量的用法。"}
{"output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "title": "将一个数组逆序输出。"}
{"output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "title": "求一个3*3矩阵对角线元素之和。"}
{"output": "\r\n1,2,3,4,5\r\n", "name": "Python 练习实例33", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "title": "按逗号分隔列表。"}
{"output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n", "name": "Python 练习实例35", "analysis": "无。", "demo": "", "title": "文本颜色设置。"}
{"output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n", "name": "Python 练习实例36", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "title": "求100之内的素数。"}
{"output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。"}
{"output": "\r\nthree\r\ntwo\r\none\r\n", "name": "Python 练习实例32", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "title": "按相反的顺序输出列表的值。"}
{"output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "title": "对10个数进行排序。"}
{"output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。"}
{"output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n", "name": "Python 练习实例30", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。"}
{"output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n", "name": "Python 练习实例29", "analysis": "学会分解出每一位数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。"}
{"output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n", "name": "Python 练习实例27", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。"}
{"output": "\r\n18\r\n", "name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？"}
{"output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n", "name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "title": "利用递归方法求5!。"}
{"output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n", "name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "title": "求1+2!+3!+...+20!的和。"}
{"output": "\r\n32.6602607986\r\n", "name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。"}
{"output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "title": "打印出如下图案（菱形）:"}
{"output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "title": "输出指定格式的日期。"}
{"output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n", "name": "Python 练习实例19", "analysis": "请参照程序", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"title": "\n\t\t\t\t\t", "output": "", "name": "Python 100例", "analysis": "\n\t\t\t\t\t", "demo": ""}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)"}
{"title": "输出 9*9 乘法口诀表。", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),"}
{"title": "将一个列表的数据复制到另一个列表中。", "output": "\r\n[1, 2, 3]\r\n", "name": "Python 练习实例7", "analysis": "使用列表[:]。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b"}
{"title": "斐波那契数列。 ", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h"}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n"}
{"title": "计算字符串长度。　　", "output": "\r\n6\r\n", "name": "Python 练习实例60", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2"}
{"title": "暂停一秒输出，并格式化当前时间。 ", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "name": "Python 练习实例10", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))"}
{"title": "回答结果（结构体变量传递）。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "name": "Python 练习实例87", "analysis": "无。", "demo": ""}
{"title": "暂停一秒输出。 ", "output": "\r\n1 a\r\n2 b\r\n", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒"}
{"title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "output": "\r\n6\r\n1 2 3\r\n28\r\n1 2 4 7 14\r\n496\r\n1 2 4 8 16 31 62 124 248\r\n", "name": "Python 练习实例19", "analysis": "请参照程序", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]"}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn"}
{"title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)"}
{"title": "列表转换为字典。 ", "output": "\r\n{'a': 'b', 1: 2}\r\n", "name": "Python 练习实例100", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\r\n123456\r\n", "name": "Python 练习实例99", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "name": "Python 练习实例98", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "name": "Python 练习实例97", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()"}
{"title": "计算字符串中子串出现的次数。", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "name": "Python 练习实例96", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount"}
{"title": "字符串日期转换为易读的日期格式。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "name": "Python 练习实例95", "analysis": "无。", "demo": ""}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "name": "Python 练习实例94", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')"}
{"title": "时间函数举例3。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "name": "Python 练习实例93", "analysis": "无。", "demo": ""}
{"title": "时间函数举例2。", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "name": "Python 练习实例92", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start"}
{"title": "时间函数举例1。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "name": "Python 练习实例91", "analysis": "无。", "demo": ""}
{"title": "列表使用实例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "name": "Python 练习实例90", "analysis": "无。", "demo": ""}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "name": "Python 练习实例89", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "name": "Python 练习实例88", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1"}
{"title": "两个字符串连接程序。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "name": "Python 练习实例86", "analysis": "无。", "demo": ""}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)"}
{"title": "连接字符串。", "output": "\r\nBrazil,Russia,India,China\r\n", "name": "Python 练习实例84", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)"}
{"title": "求0―7所能组成的奇数个数。", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum"}
{"title": "八进制转换为十进制", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "name": "Python 练习实例82", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "name": "Python 练习实例81", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\r\n3121\r\n", "name": "Python 练习实例80", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x"}
{"title": "字符串排序。", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "name": "Python 练习实例79", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\r\nwang,50\r\n", "name": "Python 练习实例78", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])"}
{"title": "循环输出列表", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "name": "Python 练习实例77", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "name": "Python 练习实例76", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum"}
{"title": "放松一下，算一道简单的题目。", "output": "\r\n67\r\n", "name": "Python 练习实例75", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i"}
{"title": "反向输出一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "name": "Python 练习实例73", "analysis": "无。", "demo": ""}
{"title": "创建一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "name": "Python 练习实例72", "analysis": "无。", "demo": ""}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "name": "Python 练习实例71", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "name": "Python 练习实例70", "analysis": "无。", "demo": ""}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "name": "Python 练习实例69", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "name": "Python 练习实例68", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number"}
{"title": "列表排序及连接。", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "name": "Python 练习实例74", "analysis": "排序可使用 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a"}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "name": "Python 练习实例67", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)"}
{"title": "画图，综合例子。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "demo": ""}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "name": "Python 练习实例66", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3"}
{"title": "一个最优美的图案。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "name": "Python 练习实例65", "analysis": "无。", "demo": ""}
{"title": "利用ellipse 和 rectangle 画图。。　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "name": "Python 练习实例64", "analysis": "无。", "demo": ""}
{"title": "画椭圆。　", "output": "", "name": "Python 练习实例63", "analysis": "使用 Tkinter。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()"}
{"title": "查找字符串。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "name": "Python 练习实例62", "analysis": "无。", "demo": ""}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "name": "Python 练习实例61", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print"}
{"title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t", "demo": ""}
{"title": "画图，学用line画直线。", "output": "", "name": "Python 练习实例57", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()"}
{"title": "画图，学用circle画圆形。　　　", "output": "", "name": "Python 练习实例56", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()"}
{"title": "学习使用按位取反~。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; ", "demo": ""}
{"title": "学习使用按位异或 ^ 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "demo": ""}
{"title": "学习使用按位或 | 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "demo": ""}
{"title": "学习使用按位与 & 。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "demo": ""}
{"title": "输出一个随机数。", "output": "\r\n14.4012371357\r\n", "name": "Python 练习实例50", "analysis": "使用 random 模块。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)"}
{"title": "使用lambda来创建匿名函数。", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "name": "Python 练习实例49", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)"}
{"title": "两个变量值互换。", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "name": "Python 练习实例47", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)"}
{"title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "name": "Python 练习实例46", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE"}
{"title": "统计 1 到 100 之和。", "output": "\r\nThe sum is 5050\r\n", "name": "Python 练习实例45", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp"}
{"title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)"}
{"title": "模仿静态变量(static)另一案例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法", "demo": ""}
{"title": "学习使用auto定义变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "demo": ""}
{"title": "数字比较。", "output": "\r\n10 小于 20\r\n", "name": "Python 练习实例48", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'"}
{"title": "模仿静态变量的用法。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "name": "Python 练习实例41", "analysis": "无。", "demo": ""}
{"title": "文本颜色设置。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass bcolors:\r\n    HEADER = '\\033[95m'\r\n    OKBLUE = '\\033[94m'\r\n    OKGREEN = '\\033[92m'\r\n    WARNING = '\\033[93m'\r\n    FAIL = '\\033[91m'\r\n    ENDC = '\\033[0m'\r\n    BOLD = '\\033[1m'\r\n    UNDERLINE = '\\033[4m'\r\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\r\n\r\n警告的颜色字体?    # 浅黄色\r\n", "name": "Python 练习实例35", "analysis": "无。", "demo": ""}
{"title": "按逗号分隔列表。", "output": "\r\n1,2,3,4,5\r\n", "name": "Python 练习实例33", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1"}
{"title": "练习函数调用。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef hello_world():\r\n    print 'hello world'\r\n\r\ndef three_hellos():\r\n    for i in range(3):\r\n        hello_world()\r\nif __name__ == '__main__':\r\n    three_hellos()\r\n\r\nhello world\r\nhello world\r\nhello world\r\n", "name": "Python 练习实例34", "analysis": "无。", "demo": ""}
{"title": "将一个数组逆序输出。", "output": "\r\n[9, 6, 5, 4, 1]\r\n[1, 4, 5, 6, 9]\r\n", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a"}
{"title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "output": "\r\n原始列表:\r\n1 4 6 9 13 16 19 28 40 100 0 \r\n插入一个数字:\r\n7\r\n排序后列表:\r\n1 4 6 7 9 13 16 19 28 40 100\r\n", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],"}
{"title": "求一个3*3矩阵对角线元素之和。", "output": "\r\ninput num:\r\n78\r\ninput num:\r\n34\r\ninput num:\r\n23\r\ninput num:\r\n34\r\ninput num:\r\n56\r\ninput num:\r\n33\r\ninput num:\r\n12\r\ninput num:\r\n21\r\ninput num:\r\n2\r\n136.0\r\n", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum"}
{"title": "对10个数进行排序。", "output": "\r\n请输入10个数字:\r\n\r\n输入一个数字:\r\n5\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n23\r\n输入一个数字:\r\n67\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n56\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n98\r\n输入一个数字:\r\n239\r\n输入一个数字:\r\n9\r\n\r\n5\r\n3\r\n23\r\n67\r\n2\r\n56\r\n45\r\n98\r\n239\r\n9\r\n\r\n排列之后：\r\n2\r\n3\r\n5\r\n9\r\n23\r\n45\r\n56\r\n67\r\n98\r\n239\r\n", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]"}
{"title": "求100之内的素数。", "output": "\r\n输入区间最小值: 1\r\n输入区间最大值: 100\r\n2\r\n3\r\n5\r\n7\r\n11\r\n13\r\n17\r\n19\r\n23\r\n29\r\n31\r\n37\r\n41\r\n43\r\n47\r\n53\r\n59\r\n61\r\n67\r\n71\r\n73\r\n79\r\n83\r\n89\r\n97\r\n", "name": "Python 练习实例36", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)"}
{"title": "按相反的顺序输出列表的值。", "output": "\r\nthree\r\ntwo\r\none\r\n", "name": "Python 练习实例32", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i"}
{"title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "output": "\r\nplease input:S\r\nplease input second letter:\r\nplease input:a\r\nSaturday\r\n", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')"}
{"title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "output": "\r\n请输入一个数字:\r\n12321\r\n12321 是一个回文数!\r\n", "name": "Python 练习实例30", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a"}
{"title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "output": "\r\n请输入一个数:\r\n23459\r\n5 位数： 9 5 4 3 2\r\n\r\n请输入一个数:\r\n3472\r\n4 位数： 2 7 4 3\r\n", "name": "Python 练习实例29", "analysis": "学会分解出每一位数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e"}
{"title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "output": "\r\n18\r\n", "name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)"}
{"title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "output": "\r\nInput a string:abcde\r\ne\r\nd\r\nc\r\nb\r\na\r\n", "name": "Python 练习实例27", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)"}
{"title": "利用递归方法求5!。", "output": "\r\n0! = 1\r\n1! = 1\r\n2! = 2\r\n3! = 6\r\n4! = 24\r\n", "name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))"}
{"title": "求1+2!+3!+...+20!的和。", "output": "\r\n1! + 2! + 3! + ... + 20! = 2561327494111820313\r\n", "name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s"}
{"title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "output": "\r\n32.6602607986\r\n", "name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)"}
{"title": "打印出如下图案（菱形）:", "output": "\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n\r\n   *\r\n  ***\r\n *****\r\n*******\r\n *****\r\n  ***\r\n   *\r\n", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print"}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "output": "\r\n1534\r\n", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1"}
{"title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "output": "\r\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n", "name": "Python 练习实例20", "analysis": "无", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))"}
{"title": "输出指定格式的日期。", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 100例", "output": "", "demo": "", "title": "\n\t\t\t\t\t"}
{"analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "output": "\r\n1 a\r\n2 b\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "title": "暂停一秒输出。 "}
{"analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "title": "输出 9*9 乘法口诀表。"}
{"analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "output": "\r\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"analysis": "使用列表[:]。", "name": "Python 练习实例7", "output": "\r\n[1, 2, 3]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "title": "将一个列表的数据复制到另一个列表中。"}
{"analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "title": "斐波那契数列。 "}
{"analysis": "无。", "name": "Python 练习实例10", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "title": "暂停一秒输出，并格式化当前时间。 "}
{"analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"analysis": "关键是计算出每一项的值。", "name": "Python 练习实例18", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"analysis": "利用while语句,条件为输入的字符不为'\\n'。", "name": "Python 练习实例17", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"analysis": "使用 datetime 模块。", "name": "Python 练习实例16", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "title": "输出指定格式的日期。"}
{"analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "name": "Python 练习实例15", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "name": "Python 练习实例14", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"analysis": "无。", "name": "Python 练习实例100", "output": "\r\n{'a': 'b', 1: 2}\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "title": "列表转换为字典。 "}
{"analysis": "无。", "name": "Python 练习实例99", "output": "\r\n123456\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"analysis": "无。", "name": "Python 练习实例98", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"analysis": "无。", "name": "Python 练习实例97", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"analysis": "无。", "name": "Python 练习实例96", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "title": "计算字符串中子串出现的次数。"}
{"analysis": "无。", "name": "Python 练习实例95", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "demo": "", "title": "字符串日期转换为易读的日期格式。"}
{"analysis": "无。", "name": "Python 练习实例94", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"analysis": "无。", "name": "Python 练习实例93", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "demo": "", "title": "时间函数举例3。"}
{"analysis": "无。", "name": "Python 练习实例92", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "title": "时间函数举例2。"}
{"analysis": "无。", "name": "Python 练习实例91", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "demo": "", "title": "时间函数举例1。"}
{"analysis": "无。", "name": "Python 练习实例90", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "demo": "", "title": "列表使用实例。"}
{"analysis": "无。", "name": "Python 练习实例89", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"analysis": "无。", "name": "Python 练习实例88", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"analysis": "无。", "name": "Python 练习实例87", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "demo": "", "title": "回答结果（结构体变量传递）。"}
{"analysis": "无。", "name": "Python 练习实例86", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "demo": "", "title": "两个字符串连接程序。"}
{"analysis": "999999 / 13 = 76923。", "name": "Python 练习实例85", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"analysis": "无。", "name": "Python 练习实例84", "output": "\r\nBrazil,Russia,India,China\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "title": "连接字符串。"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例83", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "title": "求0―7所能组成的奇数个数。"}
{"analysis": "无。", "name": "Python 练习实例82", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "title": "八进制转换为十进制"}
{"analysis": "无。", "name": "Python 练习实例81", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"analysis": "无。", "name": "Python 练习实例80", "output": "\r\n3121\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"analysis": "无。", "name": "Python 练习实例79", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "title": "字符串排序。"}
{"analysis": "无。", "name": "Python 练习实例78", "output": "\r\nwang,50\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"analysis": "无。", "name": "Python 练习实例77", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "title": "循环输出列表"}
{"analysis": "无。", "name": "Python 练习实例76", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"analysis": "无。", "name": "Python 练习实例75", "output": "\r\n67\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "title": "放松一下，算一道简单的题目。"}
{"analysis": "排序可使用 ", "name": "Python 练习实例74", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "title": "列表排序及连接。"}
{"analysis": "无。", "name": "Python 练习实例73", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "demo": "", "title": "反向输出一个链表。"}
{"analysis": "无。", "name": "Python 练习实例72", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "demo": "", "title": "创建一个链表。"}
{"analysis": "无。", "name": "Python 练习实例71", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"analysis": "无。", "name": "Python 练习实例70", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "demo": "", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"analysis": "无。", "name": "Python 练习实例69", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"analysis": "无。", "name": "Python 练习实例68", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"analysis": "无。", "name": "Python 练习实例67", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"analysis": "无。", "name": "Python 练习实例66", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"analysis": "无。", "name": "Python 练习实例65", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "demo": "", "title": "一个最优美的图案。　　"}
{"analysis": "无。", "name": "Python 练习实例64", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "demo": "", "title": "利用ellipse 和 rectangle 画图。。　"}
{"analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "name": "Python 练习实例59", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "demo": "", "title": "画图，综合例子。　　"}
{"analysis": "\n\t\t\t\t\t", "name": "Python 练习实例58", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "demo": "", "title": "画图，学用rectangle画方形。　　　"}
{"analysis": "使用 Tkinter。", "name": "Python 练习实例63", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "title": "画椭圆。　"}
{"analysis": "无。", "name": "Python 练习实例57", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "title": "画图，学用line画直线。"}
{"analysis": "无。", "name": "Python 练习实例62", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "demo": "", "title": "查找字符串。　　"}
{"analysis": "无。", "name": "Python 练习实例61", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"analysis": "无。", "name": "Python 练习实例60", "output": "\r\n6\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "title": "计算字符串长度。　　"}
{"analysis": "无。", "name": "Python 练习实例56", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "title": "画图，学用circle画圆形。　　　"}
{"analysis": "~0=1; ~1=0; ", "name": "Python 练习实例55", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 234\r\n    b = ~a\r\n    print 'The a\\'s 1 complement is %d' % b\r\n    a = ~a\r\n    print 'The a\\'s 2 complement is %d' % a\r\n\r\nThe a's 1 complement is -235\r\nThe a's 2 complement is -235\r\n", "demo": "", "title": "学习使用按位取反~。"}
{"analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "name": "Python 练习实例53", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a ^ 3\r\n    print 'The a ^ 3 = %d' % b\r\n    b ^= 7\r\n    print 'The a ^ b = %d' % b\r\n\r\nThe a ^ 3 = 60\r\nThe a ^ b = 59\r\n", "demo": "", "title": "学习使用按位异或 ^ 。"}
{"analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "name": "Python 练习实例52", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a | 3\r\n    print 'a | b is %d' % b\r\n    b |= 7\r\n    print 'a | b is %d' % b\r\n\r\na | b is 63\r\na | b is 63\r\n", "demo": "", "title": "学习使用按位或 | 。"}
{"analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "name": "Python 练习实例51", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = 077\r\n    b = a & 3\r\n    print 'a & b = %d' % b\r\n    b &= 7\r\n    print 'a & b = %d' % b\r\n\r\na & b = 3\r\na & b = 3\r\n", "demo": "", "title": "学习使用按位与 & 。"}
{"analysis": "使用 random 模块。", "name": "Python 练习实例50", "output": "\r\n14.4012371357\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "title": "输出一个随机数。"}
{"analysis": "无", "name": "Python 练习实例49", "output": "\r\nThe largar one is 20\r\nThe lower one is 10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "title": "使用lambda来创建匿名函数。"}
{"analysis": "无", "name": "Python 练习实例48", "output": "\r\n10 小于 20\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "title": "数字比较。"}
{"analysis": "无", "name": "Python 练习实例47", "output": "\r\nx = 10,y = 20\r\nx = 20,y = 10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "title": "两个变量值互换。"}
{"analysis": "无", "name": "Python 练习实例45", "output": "\r\nThe sum is 5050\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "title": "统计 1 到 100 之和。"}
{"analysis": "演示一个python作用域使用方法", "name": "Python 练习实例43", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nclass Num:\r\n    nNum = 1\r\n    def inc(self):\r\n        self.nNum += 1\r\n        print 'nNum = %d' % self.nNum\r\n\r\nif __name__ == '__main__':\r\n    nNum = 2\r\n    inst = Num()\r\n    for i in range(3):\r\n        nNum += 1\r\n        print 'The num = %d' % nNum\r\n        inst.inc()\r\n\r\nThe num = 3\r\nnNum = 2\r\nThe num = 4\r\nnNum = 3\r\nThe num = 5\r\nnNum = 4\r\n", "demo": "", "title": "模仿静态变量(static)另一案例。"}
{"analysis": "没有auto关键字，使用变量作用域来举例吧。", "name": "Python 练习实例42", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nnum = 2\r\ndef autofunc():\r\n    num = 1\r\n    print 'internal block num = %d' % num\r\n    num += 1\r\nfor i in range(3):\r\n    print 'The num = %d' % num\r\n    num += 1\r\n    autofunc()\r\n\r\nThe num = 2\r\ninternal block num = 1\r\nThe num = 3\r\ninternal block num = 1\r\nThe num = 4\r\ninternal block num = 1\r\n", "demo": "", "title": "学习使用auto定义变量的用法。"}
{"analysis": "无", "name": "Python 练习实例46", "output": "\r\n如果输入的数字小于 50，程序将停止运行。\r\n请输入一个数字：12\r\n运算结果为: 144\r\n请输入一个数字：14\r\n运算结果为: 196\r\n请输入一个数字：1\r\n运算结果为: 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"analysis": "无。", "name": "Python 练习实例41", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\ndef varfunc():\r\n    var = 0\r\n    print 'var = %d' % var\r\n    var += 1\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        varfunc()\r\n\r\n# 类的属性\r\n# 作为类的一个属性吧\r\nclass Static:\r\n    StaticVar = 5\r\n    def varfunc(self):\r\n        self.StaticVar += 1\r\n        print self.StaticVar\r\n\r\nprint Static.StaticVar\r\na = Static()\r\nfor i in range(3):\r\n    a.varfunc()\r\n\r\nvar = 0\r\nvar = 0\r\nvar = 0\r\n5\r\n6\r\n7\r\n8\r\n", "demo": "", "title": "模仿静态变量的用法。"}
{"analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "name": "Python 练习实例44 - Python 两个矩阵相加", "output": "\r\nX = [[12,7,3],\r\n    [4 ,5,6],\r\n    [7 ,8,9]]\r\n\r\nY = [[5,8,1],\r\n    [6,7,3],\r\n    [4,5,9]]\r\n\r\n[17, 15, 4]\r\n[10, 12, 9]\r\n[11, 13, 18]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"name": "Python 100例", "title": "\n\t\t\t\t\t", "output": "", "demo": "", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\r\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例9", "title": "暂停一秒输出。 ", "output": "\r\n1 a\r\n2 b\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。", "output": "\r\n[1, 2, 3]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 ", "output": "\r\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。"}
{"name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\r\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\r\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例6", "title": "斐波那契数列。 ", "output": "\r\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\r\n55\r\n\r\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\r\n-99\r\n21\r\n261\r\n1581\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\r\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。", "output": "\r\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\r\ninput a string:\r\nrunoob\r\nchar = 6,space = 0,digit = 0,others = 0\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\r\nn = 4\r\na = 4\r\n4\r\n44\r\n444\r\n4444\r\n计算和为： 4936\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例93", "title": "时间函数举例3。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\r\n输入分数:\r\n89\r\n89 属于 B\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\r\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\r\n153\r\n370\r\n371\r\n407\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例16", "title": "输出指定格式的日期。", "output": "\r\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\r\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例100", "title": "列表转换为字典。 ", "output": "\r\n{'a': 'b', 1: 2}\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。"}
{"name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\r\n123456\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\r\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\r\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\r\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。", "output": "\r\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。"}
{"name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\r\n2015-08-28 00:00:00\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\r\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。"}
{"name": "Python 练习实例91", "title": "时间函数举例1。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例92", "title": "时间函数举例2。", "output": "\r\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。"}
{"name": "Python 练习实例90", "title": "列表使用实例。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\r\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\r\n输入四个数字:\r\n1234\r\n9876\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。"}
{"name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\r\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。"}
{"name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\r\n20 c\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例86", "title": "两个字符串连接程序。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\r\nacegikmbdfhjlnpq\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\r\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "title": "连接字符串。", "output": "\r\nBrazil,Russia,India,China\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。"}
{"name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。", "output": "\r\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例82", "title": "八进制转换为十进制", "output": "\r\ninput a octal number:\r\n122\r\n82\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。"}
{"name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\r\n9708  = 800 *  12  + 9 *  12\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。"}
{"name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\r\n3121\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。"}
{"name": "Python 练习实例79", "title": "字符串排序。", "output": "\r\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。"}
{"name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\r\nwang,50\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。"}
{"name": "Python 练习实例77", "title": "循环输出列表", "output": "\r\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。"}
{"name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\r\ninput a number:\r\n6\r\n0.916666666667\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。"}
{"name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。", "output": "\r\n67\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。"}
{"name": "Python 练习实例74", "title": "列表排序及连接。", "output": "\r\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "title": "反向输出一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\r\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例72", "title": "创建一个链表。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\r\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\r\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。"}
{"name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\r\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\r\n$ python test.py \r\n请输入总人数:34\r\n10\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。"}
{"name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\r\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。"}
{"name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。"}
{"name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\r\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。"}
{"name": "Python 练习实例65", "title": "一个最优美的图案。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例63", "title": "画椭圆。　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "title": "查找字符串。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\r\n2\r\n", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\r\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。"}
{"name": "Python 练习实例60", "title": "计算字符串长度。　　", "output": "\r\n6\r\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。"}
{"name": "Python 练习实例59", "title": "画图，综合例子。　　", "output": "\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__  == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\r\n    canvas.pack(expand = YES,fill = BOTH)\r\n    x0 = 150\r\n    y0 = 100\r\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\r\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\r\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\r\n    import math\r\n    B = 0.809\r\n    for i in range(16):\r\n        a = 2 * math.pi / 16 * i\r\n        x = math.ceil(x0 + 48 * math.cos(a))\r\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n        canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\r\n    \r\n\r\n    for k in range(501):\r\n        for i in range(17):\r\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n        for j in range(51):\r\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\r\n            x = math.ceil(x0 + 48 * math.cos(a))\r\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\r\n            canvas.create_line(x0,y0,x,y,fill = 'red')\r\n    mainloop()\r\n", "demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\r\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    root = Tk()\r\n    root.title('Canvas')\r\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\r\n    x0 = 263\r\n    y0 = 263\r\n    y1 = 275\r\n    x1 = 275\r\n    for i in range(19):\r\n        canvas.create_rectangle(x0,y0,x1,y1)\r\n        x0 -= 5\r\n        y0 -= 5\r\n        x1 += 5\r\n        y1 += 5\r\n        \r\n    canvas.pack()\r\n    root.mainloop()\r\n", "demo": "", "analysis": "\n\t\t\t\t\t"}
{"demo": "", "title": "\n\t\t\t\t\t", "name": "Python 100例", "analysis": "\n\t\t\t\t\t", "output": ""}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "output": "\n1 2 3\r\n1 2 4\r\n1 3 2\r\n1 3 4\r\n1 4 2\r\n1 4 3\r\n2 1 3\r\n2 1 4\r\n2 3 1\r\n2 3 4\r\n2 4 1\r\n2 4 3\r\n3 1 2\r\n3 1 4\r\n3 2 1\r\n3 2 4\r\n3 4 1\r\n3 4 2\r\n4 1 2\r\n4 1 3\r\n4 2 1\r\n4 2 3\r\n4 3 1\r\n4 3 2\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "output": "\n净利润:120000\r\n1500.0\r\n10000.0\r\n11500.0"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "output": "\ninteger:\r\n8\r\ninteger:\r\n5\r\ninteger:\r\n6\r\n[5, 6, 8]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "output": "\n1*1=1\r\n2*1=2 2*2=4\r\n3*1=3 3*2=6 3*3=9\r\n4*1=4 4*2=8 4*3=12 4*4=16\r\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\r\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\r\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\r\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\r\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "analysis": "无。", "output": "\n2015-10-21 17:48:40\r\n2015-10-21 17:48:41\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "output": "\nyear:\r\n2015\r\nmonth:\r\n6\r\nday:\r\n7\r\nit is the 158th day.\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "title": "暂停一秒输出。 ", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "output": "\n1 a\r\n2 b\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "output": "\n-99\r\n21\r\n261\r\n1581\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "title": "斐波那契数列。 ", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "output": "\nF0 = 0     (n=0)\r\nF1 = 1    (n=1)\r\nFn = F[n-1]+ F[n-2](n=>2)\r\n\n55\r\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "analysis": "使用列表[:]。", "output": "\n[1, 2, 3]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "name": "Python 练习实例20", "analysis": "无", "output": "\n总高度：tour = 299.609375\r\n第10次反弹高度：height = 0.09765625\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "title": "输出指定格式的日期。", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。", "output": "\n21/10/2015\r\n05/01/1941\r\n06/01/1941\r\n05/01/1942\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "output": "\n输入分数:\r\n89\r\n89 属于 B\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "output": "\n90 =  2 * 3 * 3 * 5\r\n100 =  2 * 2 * 5 * 5\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "output": "\n153\r\n370\r\n371\r\n407\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "output": "\n101 \r\n103 \r\n107 \r\n109 \r\n113 \r\n127 \r\n131 \r\n137 \r\n139 \r\n149 \r\n\r\n151 \r\n157 \r\n163 \r\n167 \r\n173 \r\n179 \r\n181 \r\n191 \r\n193 \r\n197 \r\n\r\n199 \r\nThe total is 21\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "output": "\n           1           1            2           3            5           8 \r\n          13          21           34          55           89         144 \r\n         233         377          610         987         1597        2584 \r\n        4181        6765        10946       17711        28657       46368 \r\n       75025      121393       196418      317811       514229      832040 \r\n     1346269     2178309      3524578     5702887      9227465    14930352 \r\n    24157817    39088169     63245986   102334155    165580141   267914296 \r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "title": "八进制转换为十进制", "name": "Python 练习实例82", "analysis": "无。", "output": "\ninput a octal number:\r\n122\r\n82\r\n"}
{"demo": "", "title": "列表使用实例。", "name": "Python 练习实例90", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\n#list  \r\n#新建列表  \r\ntestList=[10086,'中国移动',[1,2,4,5]]  \r\n  \r\n#访问列表长度  \r\nprint len(testList)  \r\n#到列表结尾  \r\nprint testList[1:]  \r\n#向列表添加元素  \r\ntestList.append('i\\'m new here!')  \r\n  \r\nprint len(testList)  \r\nprint testList[-1]  \r\n#弹出列表的最后一个元素  \r\nprint testList.pop(1)  \r\nprint len(testList)  \r\nprint testList  \r\n#list comprehension  \r\n#后面有介绍，暂时掠过  \r\nmatrix = [[1, 2, 3],  \r\n[4, 5, 6],  \r\n[7, 8, 9]]  \r\nprint matrix  \r\nprint matrix[1]  \r\ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \r\nprint col2  \r\ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \r\nprint col2even  \r\n\n3\r\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\r\n4\r\ni'm new here!\r\n中国移动\r\n3\r\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\r\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n[4, 5, 6]\r\n[2, 5, 8]\r\n[2, 8]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "analysis": "无。", "output": "\n输入四个数字:\r\n1234\r\n9876\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "analysis": "无。", "output": "\ninput a number:\r\n9\r\n*********\r\ninput a number:\r\n5\r\n*****\r\ninput a number:\r\n6\r\n******\r\ninput a number:\r\n"}
{"demo": "", "title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    class student:\r\n        x = 0\r\n        c = 0\r\n    def f(stu):\r\n        stu.x = 20\r\n        stu.c = 'c'\r\n    a= student()\r\n    a.x = 3\r\n    a.c = 'a'\r\n    f(a)\r\n    print a.x,a.c\r\n\n20 c\r\n"}
{"demo": "", "title": "两个字符串连接程序。", "name": "Python 练习实例86", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    a = \"acegikm\"\r\n    b = \"bdfhjlnpq\"\r\n\r\n    # 连接字符串\r\n    c = a + b\r\n    print c\r\n\nacegikmbdfhjlnpq\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "analysis": "无。", "output": "\n123456\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "output": "\n输入一个数字:\r\n13\r\n6 个 9 可以被 13 整除 : 999999\r\n999999 / 13 = 76923\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "title": "列表转换为字典。 ", "name": "Python 练习实例100", "analysis": "无。", "output": "\n{'a': 'b', 1: 2}\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "analysis": "无。", "output": "\nplease input a string:\r\nrunoob.com\r\nRUNOOB.COM\r\n"}
{"demo": "", "title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nfrom dateutil import parser\r\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\r\nprint dt\r\n\n2015-08-28 00:00:00\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "analysis": "无。", "output": "\n输入文件名:\r\nrunoobfile.txt\r\n输入字符串:\r\nrunoob   \r\nrunoob\r\ngoogle\r\ngoogle#\r\n\n$ cat runoobfile.txt \r\nrunoobgoogle\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "analysis": "无。", "output": "\n请输入一个字符串:\r\nwww.runoob.com\r\n请输入一个子字符串:\r\nrunoob\r\n1\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "analysis": "无。", "output": "\ndo you want to play it.('y' or 'n')y\r\ninput a character:\r\n5\r\nplease input number you guess:\r\n\r\ninput your guess:\r\n60\r\n……\r\nplease input a little bigger\r\ninput your guess:\r\n29\r\nplease input a little smaller\r\ninput your guess:\r\n28\r\n3.81868131868e-05\r\nyou are very clever!\r\nCongradulations\r\nThe number you guess is 28\r\ndo you want to play it.\r\n"}
{"demo": "", "title": "时间函数举例3。", "name": "Python 练习实例93", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    start = time.clock()\r\n    for i in range(10000):\r\n        print i\r\n    end = time.clock()\r\n    print 'different is %6.3f' % (end - start)\r\n\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\ndifferent is  0.014\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "title": "时间函数举例2。", "name": "Python 练习实例92", "analysis": "无。", "output": "\n0\r\n1\r\n2\r\n3\r\n4\r\n……\r\n"}
{"demo": "", "title": "时间函数举例1。", "name": "Python 练习实例91", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    import time\r\n    print time.ctime(time.time())\r\n    print time.asctime(time.localtime(time.time()))\r\n    print time.asctime(time.gmtime(time.time()))\r\n\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 17:08:51 2015\r\nWed Oct 21 09:08:51 2015\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "title": "连接字符串。", "name": "Python 练习实例84", "analysis": "无。", "output": "\nBrazil,Russia,India,China\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "output": "\n4\r\n32\r\n256\r\n2048\r\n16384\r\n131072\r\n1048576\r\nsum = 8388608\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "analysis": "无。", "output": "\n9708  = 800 *  12  + 9 *  12\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "analysis": "无。", "output": "\n3121\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "title": "列表排序及连接。", "name": "Python 练习实例74", "analysis": "排序可使用 ", "output": "\n[1, 2, 3]\r\n[1, 2, 3, 3, 4, 5]\r\n[1, 2, 3, 3, 4, 5]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "title": "字符串排序。", "name": "Python 练习实例79", "analysis": "无。", "output": "\ninput string:\r\nabcde\r\ninput string:\r\nefdis\r\ninput string:\r\nadk\r\nabcde efdis adk\r\nafter being sorted.\r\nabcde adk efdis\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "analysis": "无。", "output": "\nwang,50\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "title": "循环输出列表", "name": "Python 练习实例77", "analysis": "无。", "output": "\nman\r\nwoman\r\ngirl\r\nboy\r\nsister\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "analysis": "无。", "output": "\ninput a number:\r\n6\r\n0.916666666667\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "analysis": "无。", "output": "\n67\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "name": "Python 练习实例66", "analysis": "无。", "output": "\nn1 = :\r\n123\r\nn2 = :\r\n456\r\nn3 = :\r\n789\r\n123 456 789\r\n"}
{"demo": "", "title": "反向输出一个链表。", "name": "Python 练习实例73", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n    ptr.reverse()\r\n    print ptr\r\n\nplease input a number:\r\n6\r\nplease input a number:\r\n5\r\nplease input a number:\r\n3\r\nplease input a number:\r\n4\r\nplease input a number:\r\n8\r\n[6, 5, 3, 4, 8]\r\n[8, 4, 3, 5, 6]\r\n"}
{"demo": "", "title": "创建一个链表。", "name": "Python 练习实例72", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    ptr = []\r\n    for i in range(5):\r\n        num = int(raw_input('please input a number:\\n'))\r\n        ptr.append(num)\r\n    print ptr\r\n\nplease input a number:\r\n3\r\nplease input a number:\r\n5\r\nplease input a number:\r\n7\r\nplease input a number:\r\n8\r\nplease input a number:\r\n2\r\n[3, 5, 7, 8, 2]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "analysis": "无。", "output": "\ninput student num:\r\n2\r\ninput student name:\r\naaa\r\nscore:\r\n89\r\nscore:\r\n98\r\nscore:\r\n67\r\ninput student num:\r\nbbb\r\ninput student name:\r\nccc\r\nscore:\r\n87\r\nscore:\r\n45\r\nscore:\r\n68\r\ninput student num:\r\nddd\r\ninput student name:\r\neee\r\nscore:\r\n56\r\nscore:\r\n78\r\nscore:\r\n56\r\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\r\n2     aaa       \r\n89      \r\n98      \r\n67      \r\nbbb   ccc       \r\n87      \r\n45      \r\n68      \r\nddd   eee       \r\n56      \r\n78      \r\n56    \r\n"}
{"demo": "", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    s = raw_input('please input a string:\\n')\r\n    print 'the string has %d characters.' % len(s)\r\n\nplease input a string:\r\nabc\r\nthe string has 3 characters.\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "analysis": "无。", "output": "\n$ python test.py \r\n请输入总人数:34\r\n10\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "analysis": "无。", "output": "\n整数 n 为:\r\n8\r\n向后移 m 个位置为:\r\n5\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n8\r\n输入一个数字:\r\n6\r\n输入一个数字:\r\n1\r\n输入一个数字:\r\n78\r\n输入一个数字:\r\n45\r\n输入一个数字:\r\n34\r\n输入一个数字:\r\n2\r\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\r\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "name": "Python 练习实例67", "analysis": "无。", "output": "\n输入一个数字:\r\n1\r\n输入一个数字:\r\n2\r\n输入一个数字:\r\n3\r\n输入一个数字:\r\n7\r\n输入一个数字:\r\n9\r\n输入一个数字:\r\n8\r\n计算结果：\r\n9\r\n2\r\n3\r\n7\r\n8\r\n1\r\n"}
{"demo": "", "title": "一个最优美的图案。　　", "name": "Python 练习实例65", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport math\r\nclass PTS:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\npoints = []\r\n\r\ndef LineToDemo():\r\n    from Tkinter import *\r\n    screenx = 400\r\n    screeny = 400\r\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\r\n\r\n    AspectRatio = 0.85\r\n    MAXPTS = 15\r\n    h = screeny\r\n    w = screenx\r\n    xcenter = w / 2\r\n    ycenter = h / 2\r\n    radius = (h - 30) / (AspectRatio * 2) - 20\r\n    step = 360 / MAXPTS\r\n    angle = 0.0\r\n    for i in range(MAXPTS):\r\n        rads = angle * math.pi / 180.0\r\n        p = PTS()\r\n        p.x = xcenter + int(math.cos(rads) * radius)\r\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\r\n        angle += step\r\n        points.append(p)\r\n    canvas.create_oval(xcenter - radius,ycenter - radius,\r\n                       xcenter + radius,ycenter + radius)\r\n    for i in range(MAXPTS):\r\n        for j in range(i,MAXPTS):\r\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\r\n\r\n    canvas.pack()\r\n    mainloop()\r\nif __name__ == '__main__':\r\n    LineToDemo()\r\n"}
{"demo": "", "title": "利用ellipse 和 rectangle 画图。。　", "name": "Python 练习实例64", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nif __name__ == '__main__':\r\n    from Tkinter import *\r\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\r\n    left = 20\r\n    right = 50\r\n    top = 50\r\n    num = 15\r\n    for i in range(num):\r\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\r\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\r\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\r\n        right += 5\r\n        left += 5\r\n        top += 10\r\n\r\n    canvas.pack()\r\n    mainloop()\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "title": "画椭圆。　", "name": "Python 练习实例63", "analysis": "使用 Tkinter。", "output": ""}
{"demo": "", "title": "查找字符串。　　", "name": "Python 练习实例62", "analysis": "无。", "output": "\n#!/usr/bin/python\r\n# -*- coding: UTF-8 -*-\r\n\r\nsStr1 = 'abcdefg'\r\nsStr2 = 'cde'\r\nprint sStr1.find(sStr2)\r\n\n2\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "name": "Python 练习实例61", "analysis": "无。", "output": "\n1 \r\n1 1 \r\n1 2 1 \r\n1 3 3 1 \r\n1 4 6 4 1 \r\n1 5 10 10 5 1 \r\n1 6 15 20 15 6 1 \r\n1 7 21 35 35 21 7 1 \r\n1 8 28 56 70 56 28 8 1 \r\n1 9 36 84 126 126 84 36 9 1\r\n"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "title": "计算字符串长度。　　", "name": "Python 练习实例60", "analysis": "无。", "output": "\n6\r\n"}
{"title": "\n\t\t\t\t\t", "name": "Python 100例", "output": "", "analysis": "\n\t\t\t\t\t", "demo": ""}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "name": "Python 练习实例1", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "name": "Python 练习实例3", "output": "\n-99\n21\n261\n1581\n", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)"}
{"title": "斐波那契数列。 ", "name": "Python 练习实例6", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "name": "Python 练习实例5", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l"}
{"title": "暂停一秒输出。 ", "name": "Python 练习实例9", "output": "\n1 a\n2 b\n", "analysis": "使用 time 模块的 sleep() 函数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "name": "Python 练习实例4", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum"}
{"title": "暂停一秒输出，并格式化当前时间。 ", "name": "Python 练习实例10", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "name": "Python 练习实例2", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "name": "Python 练习实例11", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2"}
{"title": "输出 9*9 乘法口诀表。", "name": "Python 练习实例8", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),"}
{"title": "将一个列表的数据复制到另一个列表中。", "name": "Python 练习实例7", "output": "\n[1, 2, 3]\n", "analysis": "使用列表[:]。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b"}
{"title": "输出指定格式的日期。", "name": "Python 练习实例16", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "analysis": "使用 datetime 模块。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "name": "Python 练习实例15", "output": "\n输入分数:\n89\n89 属于 B\n", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "name": "Python 练习实例14", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)"}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "name": "Python 练习实例13", "output": "\n153\n370\n371\n407\n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "name": "Python 练习实例12", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h"}
{"title": "列表转换为字典。 ", "name": "Python 练习实例100", "output": "\n{'a': 'b', 1: 2}\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "name": "Python 练习实例99", "output": "\n123456\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "name": "Python 练习实例98", "output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "name": "Python 练习实例97", "output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()"}
{"title": "计算字符串中子串出现的次数。", "name": "Python 练习实例96", "output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount"}
{"title": "字符串日期转换为易读的日期格式。", "name": "Python 练习实例95", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "analysis": "无。", "demo": ""}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "name": "Python 练习实例94", "output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')"}
{"title": "时间函数举例3。", "name": "Python 练习实例93", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "analysis": "无。", "demo": ""}
{"title": "时间函数举例2。", "name": "Python 练习实例92", "output": "\n0\n1\n2\n3\n4\n……\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start"}
{"title": "时间函数举例1。", "name": "Python 练习实例91", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "analysis": "无。", "demo": ""}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "name": "Python 练习实例85", "output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "analysis": "999999 / 13 = 76923。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)"}
{"title": "列表使用实例。", "name": "Python 练习实例90", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "analysis": "无。", "demo": ""}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "name": "Python 练习实例89", "output": "\n输入四个数字:\n1234\n9876\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "name": "Python 练习实例88", "output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1"}
{"title": "回答结果（结构体变量传递）。", "name": "Python 练习实例87", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "analysis": "无。", "demo": ""}
{"title": "两个字符串连接程序。", "name": "Python 练习实例86", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "analysis": "无。", "demo": ""}
{"title": "连接字符串。", "name": "Python 练习实例84", "output": "\nBrazil,Russia,India,China\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "name": "Python 练习实例76", "output": "\ninput a number:\n6\n0.916666666667\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum"}
{"title": "求0―7所能组成的奇数个数。", "name": "Python 练习实例83", "output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "analysis": "\n\t\t\t\t\t", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum"}
{"title": "八进制转换为十进制", "name": "Python 练习实例82", "output": "\ninput a octal number:\n122\n82\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "name": "Python 练习实例81", "output": "\n9708  = 800 *  12  + 9 *  12\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "name": "Python 练习实例80", "output": "\n3121\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x"}
{"title": "字符串排序。", "name": "Python 练习实例79", "output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "name": "Python 练习实例78", "output": "\nwang,50\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])"}
{"title": "循环输出列表", "name": "Python 练习实例77", "output": "\nman\nwoman\ngirl\nboy\nsister\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]"}
{"title": "放松一下，算一道简单的题目。", "name": "Python 练习实例75", "output": "\n67\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i"}
{"title": "列表排序及连接。", "name": "Python 练习实例74", "output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "analysis": "排序可使用 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a"}
{"title": "反向输出一个链表。", "name": "Python 练习实例73", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "analysis": "无。", "demo": ""}
{"title": "创建一个链表。", "name": "Python 练习实例72", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "analysis": "无。", "demo": ""}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "name": "Python 练习实例71", "output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "name": "Python 练习实例70", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "analysis": "无。", "demo": ""}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "name": "Python 练习实例69", "output": "\n$ python test.py \n请输入总人数:34\n10\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "name": "Python 练习实例68", "output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "analysis": "无。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number"}
{"name": "Python 100例", "demo": "", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t", "output": ""}
{"name": "Python 练习实例1", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n"}
{"name": "Python 练习实例2", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0"}
{"name": "Python 练习实例7", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。", "output": "\n[1, 2, 3]\n"}
{"name": "Python 练习实例9", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。", "output": "\n1 a\n2 b\n"}
{"name": "Python 练习实例5", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n"}
{"name": "Python 练习实例3", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "output": "\n-99\n21\n261\n1581\n"}
{"name": "Python 练习实例6", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n"}
{"name": "Python 练习实例4", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n"}
{"name": "Python 练习实例8", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n"}
{"name": "Python 练习实例15", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "output": "\n输入分数:\n89\n89 属于 B\n"}
{"name": "Python 练习实例16", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n"}
{"name": "Python 练习实例14", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n"}
{"name": "Python 练习实例76", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。", "output": "\ninput a number:\n6\n0.916666666667\n"}
{"name": "Python 练习实例13", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "output": "\n153\n370\n371\n407\n"}
{"name": "Python 练习实例100", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "title": "列表转换为字典。 ", "analysis": "无。", "output": "\n{'a': 'b', 1: 2}\n"}
{"name": "Python 练习实例12", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n"}
{"name": "Python 练习实例11", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n"}
{"name": "Python 练习实例10", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n"}
{"name": "Python 练习实例21", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。", "output": "\n1534\n"}
{"title": "\n\t\t\t\t\t", "output": "", "demo": "", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "输出指定格式的日期。", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。"}
{"title": "输出 9*9 乘法口诀表。", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "将一个列表的数据复制到另一个列表中。", "output": "\n[1, 2, 3]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "斐波那契数列。 ", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\n输入分数:\n89\n89 属于 B\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\n-99\n21\n261\n1581\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\n153\n370\n371\n407\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "暂停一秒输出，并格式化当前时间。 ", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "暂停一秒输出。 ", "output": "\n1 a\n2 b\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "打印出如下图案（菱形）:", "output": "\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"title": "模仿静态变量(static)另一案例。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass Num:\n    nNum = 1\n    def inc(self):\n        self.nNum += 1\n        print 'nNum = %d' % self.nNum\n\nif __name__ == '__main__':\n    nNum = 2\n    inst = Num()\n    for i in range(3):\n        nNum += 1\n        print 'The num = %d' % nNum\n        inst.inc()\n\nThe num = 3\nnNum = 2\nThe num = 4\nnNum = 3\nThe num = 5\nnNum = 4\n", "demo": "", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法"}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "name": "Python 练习实例71", "analysis": "无。"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "demo": "", "name": "Python 练习实例70", "analysis": "无。"}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\n$ python test.py \n请输入总人数:34\n10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "name": "Python 练习实例69", "analysis": "无。"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "name": "Python 练习实例68", "analysis": "无。"}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\n输入一个数字:\n1\n输入一个数字:\n2\n输入一个数字:\n3\n输入一个数字:\n7\n输入一个数字:\n9\n输入一个数字:\n8\n计算结果：\n9\n2\n3\n7\n8\n1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "name": "Python 练习实例67", "analysis": "无。"}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\nn1 = :\n123\nn2 = :\n456\nn3 = :\n789\n123 456 789\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "name": "Python 练习实例66", "analysis": "无。"}
{"title": "一个最优美的图案。　　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport math\nclass PTS:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\npoints = []\n\ndef LineToDemo():\n    from Tkinter import *\n    screenx = 400\n    screeny = 400\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\n\n    AspectRatio = 0.85\n    MAXPTS = 15\n    h = screeny\n    w = screenx\n    xcenter = w / 2\n    ycenter = h / 2\n    radius = (h - 30) / (AspectRatio * 2) - 20\n    step = 360 / MAXPTS\n    angle = 0.0\n    for i in range(MAXPTS):\n        rads = angle * math.pi / 180.0\n        p = PTS()\n        p.x = xcenter + int(math.cos(rads) * radius)\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\n        angle += step\n        points.append(p)\n    canvas.create_oval(xcenter - radius,ycenter - radius,\n                       xcenter + radius,ycenter + radius)\n    for i in range(MAXPTS):\n        for j in range(i,MAXPTS):\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\n\n    canvas.pack()\n    mainloop()\nif __name__ == '__main__':\n    LineToDemo()\n", "demo": "", "name": "Python 练习实例65", "analysis": "无。"}
{"title": "利用ellipse 和 rectangle 画图。。　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    left = 20\n    right = 50\n    top = 50\n    num = 15\n    for i in range(num):\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\n        right += 5\n        left += 5\n        top += 10\n\n    canvas.pack()\n    mainloop()\n", "demo": "", "name": "Python 练习实例64", "analysis": "无。"}
{"title": "时间函数举例2。", "output": "\n0\n1\n2\n3\n4\n……\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "name": "Python 练习实例92", "analysis": "无。"}
{"title": "时间函数举例1。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "demo": "", "name": "Python 练习实例91", "analysis": "无。"}
{"title": "列表使用实例。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "demo": "", "name": "Python 练习实例90", "analysis": "无。"}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\n输入四个数字:\n1234\n9876\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "name": "Python 练习实例89", "analysis": "无。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "回答结果（结构体变量传递）。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "demo": "", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "两个字符串连接程序。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "demo": "", "name": "Python 练习实例86", "analysis": "无。"}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。"}
{"title": "列表转换为字典。 ", "output": "\n{'a': 'b', 1: 2}\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\n123456\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "name": "Python 练习实例99", "analysis": "无。"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "name": "Python 练习实例98", "analysis": "无。"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "name": "Python 练习实例97", "analysis": "无。"}
{"title": "计算字符串中子串出现的次数。", "output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "name": "Python 练习实例96", "analysis": "无。"}
{"title": "字符串日期转换为易读的日期格式。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "demo": "", "name": "Python 练习实例95", "analysis": "无。"}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "name": "Python 练习实例94", "analysis": "无。"}
{"title": "时间函数举例3。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "demo": "", "name": "Python 练习实例93", "analysis": "无。"}
{"title": "连接字符串。", "output": "\nBrazil,Russia,India,China\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "name": "Python 练习实例84", "analysis": "无。"}
{"title": "求0―7所能组成的奇数个数。", "output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t"}
{"title": "八进制转换为十进制", "output": "\ninput a octal number:\n122\n82\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "name": "Python 练习实例82", "analysis": "无。"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\n9708  = 800 *  12  + 9 *  12\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "name": "Python 练习实例81", "analysis": "无。"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\n3121\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "name": "Python 练习实例80", "analysis": "无。"}
{"title": "字符串排序。", "output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "name": "Python 练习实例79", "analysis": "无。"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\nwang,50\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "name": "Python 练习实例78", "analysis": "无。"}
{"title": "循环输出列表", "output": "\nman\nwoman\ngirl\nboy\nsister\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "name": "Python 练习实例77", "analysis": "无。"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\ninput a number:\n6\n0.916666666667\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "name": "Python 练习实例76", "analysis": "无。"}
{"title": "放松一下，算一道简单的题目。", "output": "\n67\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "name": "Python 练习实例75", "analysis": "无。"}
{"title": "列表排序及连接。", "output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "name": "Python 练习实例74", "analysis": "排序可使用 "}
{"title": "反向输出一个链表。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "demo": "", "name": "Python 练习实例73", "analysis": "无。"}
{"title": "创建一个链表。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "demo": "", "name": "Python 练习实例72", "analysis": "无。"}
{"title": "画椭圆。　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "name": "Python 练习实例63", "analysis": "使用 Tkinter。"}
{"title": "查找字符串。　　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nsStr1 = 'abcdefg'\nsStr2 = 'cde'\nprint sStr1.find(sStr2)\n\n2\n", "demo": "", "name": "Python 练习实例62", "analysis": "无。"}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\n1 \n1 1 \n1 2 1 \n1 3 3 1 \n1 4 6 4 1 \n1 5 10 10 5 1 \n1 6 15 20 15 6 1 \n1 7 21 35 35 21 7 1 \n1 8 28 56 70 56 28 8 1 \n1 9 36 84 126 126 84 36 9 1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "name": "Python 练习实例61", "analysis": "无。"}
{"title": "计算字符串长度。　　", "output": "\n6\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "name": "Python 练习实例60", "analysis": "无。"}
{"title": "画图，综合例子。　　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__  == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\n    canvas.pack(expand = YES,fill = BOTH)\n    x0 = 150\n    y0 = 100\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\n    import math\n    B = 0.809\n    for i in range(16):\n        a = 2 * math.pi / 16 * i\n        x = math.ceil(x0 + 48 * math.cos(a))\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\n        canvas.create_line(x0,y0,x,y,fill = 'red')\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\n    \n\n    for k in range(501):\n        for i in range(17):\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n        for j in range(51):\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n    mainloop()\n", "demo": "", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    root = Tk()\n    root.title('Canvas')\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_rectangle(x0,y0,x1,y1)\n        x0 -= 5\n        y0 -= 5\n        x1 += 5\n        y1 += 5\n        \n    canvas.pack()\n    root.mainloop()\n", "demo": "", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t"}
{"title": "学习使用按位取反~。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 234\n    b = ~a\n    print 'The a\\'s 1 complement is %d' % b\n    a = ~a\n    print 'The a\\'s 2 complement is %d' % a\n\nThe a's 1 complement is -235\nThe a's 2 complement is -235\n", "demo": "", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; "}
{"title": "学习使用按位异或 ^ 。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a ^ 3\n    print 'The a ^ 3 = %d' % b\n    b ^= 7\n    print 'The a ^ b = %d' % b\n\nThe a ^ 3 = 60\nThe a ^ b = 59\n", "demo": "", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"title": "画图，学用line画直线。", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "name": "Python 练习实例57", "analysis": "无。"}
{"title": "画图，学用circle画圆形。　　　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "name": "Python 练习实例56", "analysis": "无。"}
{"title": "学习使用按位或 | 。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a | 3\n    print 'a | b is %d' % b\n    b |= 7\n    print 'a | b is %d' % b\n\na | b is 63\na | b is 63\n", "demo": "", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"title": "学习使用按位与 & 。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a & 3\n    print 'a & b = %d' % b\n    b &= 7\n    print 'a & b = %d' % b\n\na & b = 3\na & b = 3\n", "demo": "", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"title": "输出一个随机数。", "output": "\n14.4012371357\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "name": "Python 练习实例50", "analysis": "使用 random 模块。"}
{"title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "output": "\n如果输入的数字小于 50，程序将停止运行。\n请输入一个数字：12\n运算结果为: 144\n请输入一个数字：14\n运算结果为: 196\n请输入一个数字：1\n运算结果为: 1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "name": "Python 练习实例46", "analysis": "无"}
{"title": "统计 1 到 100 之和。", "output": "\nThe sum is 5050\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "name": "Python 练习实例45", "analysis": "无"}
{"title": "使用lambda来创建匿名函数。", "output": "\nThe largar one is 20\nThe lower one is 10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "name": "Python 练习实例49", "analysis": "无"}
{"title": "数字比较。", "output": "\n10 小于 20\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "name": "Python 练习实例48", "analysis": "无"}
{"title": "两个变量值互换。", "output": "\nx = 10,y = 20\nx = 20,y = 10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "name": "Python 练习实例47", "analysis": "无"}
{"title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "output": "\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\n[17, 15, 4]\n[10, 12, 9]\n[11, 13, 18]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"title": "学习使用auto定义变量的用法。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nnum = 2\ndef autofunc():\n    num = 1\n    print 'internal block num = %d' % num\n    num += 1\nfor i in range(3):\n    print 'The num = %d' % num\n    num += 1\n    autofunc()\n\nThe num = 2\ninternal block num = 1\nThe num = 3\ninternal block num = 1\nThe num = 4\ninternal block num = 1\n", "demo": "", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"title": "模仿静态变量的用法。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef varfunc():\n    var = 0\n    print 'var = %d' % var\n    var += 1\nif __name__ == '__main__':\n    for i in range(3):\n        varfunc()\n\n# 类的属性\n# 作为类的一个属性吧\nclass Static:\n    StaticVar = 5\n    def varfunc(self):\n        self.StaticVar += 1\n        print self.StaticVar\n\nprint Static.StaticVar\na = Static()\nfor i in range(3):\n    a.varfunc()\n\nvar = 0\nvar = 0\nvar = 0\n5\n6\n7\n8\n", "demo": "", "name": "Python 练习实例41", "analysis": "无。"}
{"title": "将一个数组逆序输出。", "output": "\n[9, 6, 5, 4, 1]\n[1, 4, 5, 6, 9]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。"}
{"title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "output": "\n原始列表:\n1 4 6 9 13 16 19 28 40 100 0 \n插入一个数字:\n7\n排序后列表:\n1 4 6 7 9 13 16 19 28 40 100\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"title": "求一个3*3矩阵对角线元素之和。", "output": "\ninput num:\n78\ninput num:\n34\ninput num:\n23\ninput num:\n34\ninput num:\n56\ninput num:\n33\ninput num:\n12\ninput num:\n21\ninput num:\n2\n136.0\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"title": "对10个数进行排序。", "output": "\n请输入10个数字:\n\n输入一个数字:\n5\n输入一个数字:\n3\n输入一个数字:\n23\n输入一个数字:\n67\n输入一个数字:\n2\n输入一个数字:\n56\n输入一个数字:\n45\n输入一个数字:\n98\n输入一个数字:\n239\n输入一个数字:\n9\n\n5\n3\n23\n67\n2\n56\n45\n98\n239\n9\n\n排列之后：\n2\n3\n5\n9\n23\n45\n56\n67\n98\n239\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"title": "求100之内的素数。", "output": "\n输入区间最小值: 1\n输入区间最大值: 100\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "name": "Python 练习实例36", "analysis": "无。"}
{"title": "文本颜色设置。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\n\n警告的颜色字体?    # 浅黄色\n", "demo": "", "name": "Python 练习实例35", "analysis": "无。"}
{"title": "练习函数调用。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef hello_world():\n    print 'hello world'\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\nif __name__ == '__main__':\n    three_hellos()\n\nhello world\nhello world\nhello world\n", "demo": "", "name": "Python 练习实例34", "analysis": "无。"}
{"title": "按逗号分隔列表。", "output": "\n1,2,3,4,5\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "name": "Python 练习实例33", "analysis": "无。"}
{"title": "按相反的顺序输出列表的值。", "output": "\nthree\ntwo\none\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "name": "Python 练习实例32", "analysis": "无。"}
{"title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "output": "\nplease input:S\nplease input second letter:\nplease input:a\nSaturday\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "output": "\n请输入一个数字:\n12321\n12321 是一个回文数!\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "name": "Python 练习实例30", "analysis": "无。"}
{"title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "output": "\n请输入一个数:\n23459\n5 位数： 9 5 4 3 2\n\n请输入一个数:\n3472\n4 位数： 2 7 4 3\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "name": "Python 练习实例29", "analysis": "学会分解出每一位数。"}
{"title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "output": "\n18\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "output": "\nInput a string:abcde\ne\nd\nc\nb\na\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "name": "Python 练习实例27", "analysis": "无。"}
{"title": "利用递归方法求5!。", "output": "\n0! = 1\n1! = 1\n2! = 2\n3! = 6\n4! = 24\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! "}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\nn = 4\na = 4\n4\n44\n444\n4444\n计算和为： 4936\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。"}
{"title": "求1+2!+3!+...+20!的和。", "output": "\n1! + 2! + 3! + ... + 20! = 2561327494111820313\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  "}
{"title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "output": "\n32.6602607986\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 "}
{"title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "output": "\n1534\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "output": "\n总高度：tour = 299.609375\n第10次反弹高度：height = 0.09765625\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "name": "Python 练习实例20", "analysis": "无"}
{"title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "output": "\n6\n1 2 3\n28\n1 2 4 7 14\n496\n1 2 4 8 16 31 62 124 248\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "name": "Python 练习实例19", "analysis": "请参照程序"}
{"title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\ninput a string:\nrunoob\nchar = 6,space = 0,digit = 0,others = 0\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 100例", "output": "", "title": "\n\t\t\t\t\t", "demo": "", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例7", "output": "\n[1, 2, 3]\n", "title": "将一个列表的数据复制到另一个列表中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。"}
{"name": "Python 练习实例5", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"name": "Python 练习实例24", "output": "\n32.6602607986\n", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "analysis": "请抓住分子与分母的变化规律。 "}
{"name": "Python 练习实例4", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"name": "Python 练习实例23", "output": "\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n", "title": "打印出如下图案（菱形）:", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"name": "Python 练习实例3", "output": "\n-99\n21\n261\n1581\n", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"name": "Python 练习实例2", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"name": "Python 练习实例6", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "title": "斐波那契数列。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"name": "Python 练习实例1", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"name": "Python 练习实例21", "output": "\n1534\n", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"name": "Python 练习实例20", "output": "\n总高度：tour = 299.609375\n第10次反弹高度：height = 0.09765625\n", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "analysis": "无"}
{"name": "Python 练习实例19", "output": "\n6\n1 2 3\n28\n1 2 4 7 14\n496\n1 2 4 8 16 31 62 124 248\n", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "analysis": "请参照程序"}
{"name": "Python 练习实例18", "output": "\nn = 4\na = 4\n4\n44\n444\n4444\n计算和为： 4936\n", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。"}
{"name": "Python 练习实例17", "output": "\ninput a string:\nrunoob\nchar = 6,space = 0,digit = 0,others = 0\n", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"name": "Python 练习实例16", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "title": "输出指定格式的日期。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。"}
{"name": "Python 练习实例100", "output": "\n{'a': 'b', 1: 2}\n", "title": "列表转换为字典。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。"}
{"name": "Python 练习实例99", "output": "\n123456\n", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例98", "output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例97", "output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。"}
{"name": "Python 练习实例96", "output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "title": "计算字符串中子串出现的次数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。"}
{"name": "Python 练习实例95", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "title": "字符串日期转换为易读的日期格式。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例94", "output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。"}
{"name": "Python 练习实例93", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "title": "时间函数举例3。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例92", "output": "\n0\n1\n2\n3\n4\n……\n", "title": "时间函数举例2。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。"}
{"name": "Python 练习实例91", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "title": "时间函数举例1。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例85", "output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。"}
{"name": "Python 练习实例84", "output": "\nBrazil,Russia,India,China\n", "title": "连接字符串。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。"}
{"name": "Python 练习实例90", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "title": "列表使用实例。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例89", "output": "\n输入四个数字:\n1234\n9876\n", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。"}
{"name": "Python 练习实例88", "output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。"}
{"name": "Python 练习实例87", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "title": "回答结果（结构体变量传递）。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例86", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "title": "两个字符串连接程序。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例83", "output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "title": "求0―7所能组成的奇数个数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例82", "output": "\ninput a octal number:\n122\n82\n", "title": "八进制转换为十进制", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。"}
{"name": "Python 练习实例81", "output": "\n9708  = 800 *  12  + 9 *  12\n", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。"}
{"name": "Python 练习实例75", "output": "\n67\n", "title": "放松一下，算一道简单的题目。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。"}
{"name": "Python 练习实例80", "output": "\n3121\n", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。"}
{"name": "Python 练习实例79", "output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "title": "字符串排序。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。"}
{"name": "Python 练习实例78", "output": "\nwang,50\n", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。"}
{"name": "Python 练习实例77", "output": "\nman\nwoman\ngirl\nboy\nsister\n", "title": "循环输出列表", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。"}
{"name": "Python 练习实例76", "output": "\ninput a number:\n6\n0.916666666667\n", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。"}
{"name": "Python 练习实例74", "output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "title": "列表排序及连接。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 "}
{"name": "Python 练习实例73", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "title": "反向输出一个链表。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例72", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "title": "创建一个链表。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例71", "output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。"}
{"name": "Python 练习实例70", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例69", "output": "\n$ python test.py \n请输入总人数:34\n10\n", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。"}
{"name": "Python 练习实例68", "output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。"}
{"name": "Python 练习实例67", "output": "\n输入一个数字:\n1\n输入一个数字:\n2\n输入一个数字:\n3\n输入一个数字:\n7\n输入一个数字:\n9\n输入一个数字:\n8\n计算结果：\n9\n2\n3\n7\n8\n1\n", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。"}
{"name": "Python 练习实例66", "output": "\nn1 = :\n123\nn2 = :\n456\nn3 = :\n789\n123 456 789\n", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。"}
{"name": "Python 练习实例65", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport math\nclass PTS:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\npoints = []\n\ndef LineToDemo():\n    from Tkinter import *\n    screenx = 400\n    screeny = 400\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\n\n    AspectRatio = 0.85\n    MAXPTS = 15\n    h = screeny\n    w = screenx\n    xcenter = w / 2\n    ycenter = h / 2\n    radius = (h - 30) / (AspectRatio * 2) - 20\n    step = 360 / MAXPTS\n    angle = 0.0\n    for i in range(MAXPTS):\n        rads = angle * math.pi / 180.0\n        p = PTS()\n        p.x = xcenter + int(math.cos(rads) * radius)\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\n        angle += step\n        points.append(p)\n    canvas.create_oval(xcenter - radius,ycenter - radius,\n                       xcenter + radius,ycenter + radius)\n    for i in range(MAXPTS):\n        for j in range(i,MAXPTS):\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\n\n    canvas.pack()\n    mainloop()\nif __name__ == '__main__':\n    LineToDemo()\n", "title": "一个最优美的图案。　　", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例64", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    left = 20\n    right = 50\n    top = 50\n    num = 15\n    for i in range(num):\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\n        right += 5\n        left += 5\n        top += 10\n\n    canvas.pack()\n    mainloop()\n", "title": "利用ellipse 和 rectangle 画图。。　", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例63", "output": "", "title": "画椭圆。　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。"}
{"name": "Python 练习实例62", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nsStr1 = 'abcdefg'\nsStr2 = 'cde'\nprint sStr1.find(sStr2)\n\n2\n", "title": "查找字符串。　　", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例61", "output": "\n1 \n1 1 \n1 2 1 \n1 3 3 1 \n1 4 6 4 1 \n1 5 10 10 5 1 \n1 6 15 20 15 6 1 \n1 7 21 35 35 21 7 1 \n1 8 28 56 70 56 28 8 1 \n1 9 36 84 126 126 84 36 9 1\n", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。"}
{"name": "Python 练习实例60", "output": "\n6\n", "title": "计算字符串长度。　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。"}
{"name": "Python 练习实例59", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__  == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\n    canvas.pack(expand = YES,fill = BOTH)\n    x0 = 150\n    y0 = 100\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\n    import math\n    B = 0.809\n    for i in range(16):\n        a = 2 * math.pi / 16 * i\n        x = math.ceil(x0 + 48 * math.cos(a))\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\n        canvas.create_line(x0,y0,x,y,fill = 'red')\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\n    \n\n    for k in range(501):\n        for i in range(17):\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n        for j in range(51):\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n    mainloop()\n", "title": "画图，综合例子。　　", "demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"name": "Python 练习实例58", "output": "rectangle(int left, int top, int right, int bottom)\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    root = Tk()\n    root.title('Canvas')\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_rectangle(x0,y0,x1,y1)\n        x0 -= 5\n        y0 -= 5\n        x1 += 5\n        y1 += 5\n        \n    canvas.pack()\n    root.mainloop()\n", "title": "画图，学用rectangle画方形。　　　", "demo": "", "analysis": "\n\t\t\t\t\t"}
{"name": "Python 练习实例57", "output": "", "title": "画图，学用line画直线。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "analysis": "无。"}
{"name": "Python 练习实例56", "output": "", "title": "画图，学用circle画圆形。　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "analysis": "无。"}
{"name": "Python 练习实例55", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 234\n    b = ~a\n    print 'The a\\'s 1 complement is %d' % b\n    a = ~a\n    print 'The a\\'s 2 complement is %d' % a\n\nThe a's 1 complement is -235\nThe a's 2 complement is -235\n", "title": "学习使用按位取反~。", "demo": "", "analysis": "~0=1; ~1=0; "}
{"name": "Python 练习实例53", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a ^ 3\n    print 'The a ^ 3 = %d' % b\n    b ^= 7\n    print 'The a ^ b = %d' % b\n\nThe a ^ 3 = 60\nThe a ^ b = 59\n", "title": "学习使用按位异或 ^ 。", "demo": "", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"name": "Python 练习实例52", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a | 3\n    print 'a | b is %d' % b\n    b |= 7\n    print 'a | b is %d' % b\n\na | b is 63\na | b is 63\n", "title": "学习使用按位或 | 。", "demo": "", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"name": "Python 练习实例51", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a & 3\n    print 'a & b = %d' % b\n    b &= 7\n    print 'a & b = %d' % b\n\na & b = 3\na & b = 3\n", "title": "学习使用按位与 & 。", "demo": "", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"name": "Python 练习实例50", "output": "\n14.4012371357\n", "title": "输出一个随机数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "analysis": "使用 random 模块。"}
{"name": "Python 练习实例48", "output": "\n10 小于 20\n", "title": "数字比较。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "analysis": "无"}
{"name": "Python 练习实例49", "output": "\nThe largar one is 20\nThe lower one is 10\n", "title": "使用lambda来创建匿名函数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "analysis": "无"}
{"name": "Python 练习实例47", "output": "\nx = 10,y = 20\nx = 20,y = 10\n", "title": "两个变量值互换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "analysis": "无"}
{"name": "Python 练习实例46", "output": "\n如果输入的数字小于 50，程序将停止运行。\n请输入一个数字：12\n运算结果为: 144\n请输入一个数字：14\n运算结果为: 196\n请输入一个数字：1\n运算结果为: 1\n", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "analysis": "无"}
{"name": "Python 练习实例45", "output": "\nThe sum is 5050\n", "title": "统计 1 到 100 之和。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "analysis": "无"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "output": "\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\n[17, 15, 4]\n[10, 12, 9]\n[11, 13, 18]\n", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"name": "Python 练习实例43", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass Num:\n    nNum = 1\n    def inc(self):\n        self.nNum += 1\n        print 'nNum = %d' % self.nNum\n\nif __name__ == '__main__':\n    nNum = 2\n    inst = Num()\n    for i in range(3):\n        nNum += 1\n        print 'The num = %d' % nNum\n        inst.inc()\n\nThe num = 3\nnNum = 2\nThe num = 4\nnNum = 3\nThe num = 5\nnNum = 4\n", "title": "模仿静态变量(static)另一案例。", "demo": "", "analysis": "演示一个python作用域使用方法"}
{"name": "Python 练习实例41", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef varfunc():\n    var = 0\n    print 'var = %d' % var\n    var += 1\nif __name__ == '__main__':\n    for i in range(3):\n        varfunc()\n\n# 类的属性\n# 作为类的一个属性吧\nclass Static:\n    StaticVar = 5\n    def varfunc(self):\n        self.StaticVar += 1\n        print self.StaticVar\n\nprint Static.StaticVar\na = Static()\nfor i in range(3):\n    a.varfunc()\n\nvar = 0\nvar = 0\nvar = 0\n5\n6\n7\n8\n", "title": "模仿静态变量的用法。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例42", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nnum = 2\ndef autofunc():\n    num = 1\n    print 'internal block num = %d' % num\n    num += 1\nfor i in range(3):\n    print 'The num = %d' % num\n    num += 1\n    autofunc()\n\nThe num = 2\ninternal block num = 1\nThe num = 3\ninternal block num = 1\nThe num = 4\ninternal block num = 1\n", "title": "学习使用auto定义变量的用法。", "demo": "", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"name": "Python 练习实例40", "output": "\n[9, 6, 5, 4, 1]\n[1, 4, 5, 6, 9]\n", "title": "将一个数组逆序输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "analysis": "用第一个与最后一个交换。"}
{"name": "Python 练习实例39", "output": "\n原始列表:\n1 4 6 9 13 16 19 28 40 100 0 \n插入一个数字:\n7\n排序后列表:\n1 4 6 7 9 13 16 19 28 40 100\n", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"name": "Python 练习实例38", "output": "\ninput num:\n78\ninput num:\n34\ninput num:\n23\ninput num:\n34\ninput num:\n56\ninput num:\n33\ninput num:\n12\ninput num:\n21\ninput num:\n2\n136.0\n", "title": "求一个3*3矩阵对角线元素之和。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"name": "Python 练习实例37", "output": "\n请输入10个数字:\n\n输入一个数字:\n5\n输入一个数字:\n3\n输入一个数字:\n23\n输入一个数字:\n67\n输入一个数字:\n2\n输入一个数字:\n56\n输入一个数字:\n45\n输入一个数字:\n98\n输入一个数字:\n239\n输入一个数字:\n9\n\n5\n3\n23\n67\n2\n56\n45\n98\n239\n9\n\n排列之后：\n2\n3\n5\n9\n23\n45\n56\n67\n98\n239\n", "title": "对10个数进行排序。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"name": "Python 练习实例36", "output": "\n输入区间最小值: 1\n输入区间最大值: 100\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n", "title": "求100之内的素数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "analysis": "无。"}
{"name": "Python 练习实例35", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\n\n警告的颜色字体?    # 浅黄色\n", "title": "文本颜色设置。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例34", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef hello_world():\n    print 'hello world'\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\nif __name__ == '__main__':\n    three_hellos()\n\nhello world\nhello world\nhello world\n", "title": "练习函数调用。", "demo": "", "analysis": "无。"}
{"name": "Python 练习实例33", "output": "\n1,2,3,4,5\n", "title": "按逗号分隔列表。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "analysis": "无。"}
{"name": "Python 练习实例32", "output": "\nthree\ntwo\none\n", "title": "按相反的顺序输出列表的值。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "analysis": "无。"}
{"name": "Python 练习实例31", "output": "\nplease input:S\nplease input second letter:\nplease input:a\nSaturday\n", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"name": "Python 练习实例30", "output": "\n请输入一个数字:\n12321\n12321 是一个回文数!\n", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "analysis": "无。"}
{"name": "Python 练习实例29", "output": "\n请输入一个数:\n23459\n5 位数： 9 5 4 3 2\n\n请输入一个数:\n3472\n4 位数： 2 7 4 3\n", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "analysis": "学会分解出每一位数。"}
{"name": "Python 练习实例28", "output": "\n18\n", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"name": "Python 练习实例27", "output": "\nInput a string:abcde\ne\nd\nc\nb\na\n", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "analysis": "无。"}
{"name": "Python 练习实例26", "output": "\n0! = 1\n1! = 1\n2! = 2\n3! = 6\n4! = 24\n", "title": "利用递归方法求5!。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "analysis": "递归公式：fn=fn_1*4! "}
{"name": "Python 练习实例25", "output": "\n1! + 2! + 3! + ... + 20! = 2561327494111820313\n", "title": "求1+2!+3!+...+20!的和。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "analysis": "此程序只是把累加变成了累乘。  "}
{"name": "Python 练习实例15", "output": "\n输入分数:\n89\n89 属于 B\n", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"name": "Python 练习实例14", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"name": "Python 练习实例13", "output": "\n153\n370\n371\n407\n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"name": "Python 练习实例12", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "title": "判断101-200之间有多少个素数，并输出所有素数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"name": "Python 练习实例11", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"name": "Python 练习实例10", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "title": "暂停一秒输出，并格式化当前时间。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。"}
{"name": "Python 练习实例9", "output": "\n1 a\n2 b\n", "title": "暂停一秒输出。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。"}
{"name": "Python 练习实例8", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "title": "输出 9*9 乘法口诀表。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "\n\t\t\t\t\t", "demo": "", "output": "", "name": "Python 100例", "analysis": "\n\t\t\t\t\t"}
{"title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "output": "\n-99\n21\n261\n1581\n", "name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"title": "斐波那契数列。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"title": "暂停一秒输出，并格式化当前时间。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "name": "Python 练习实例10", "analysis": "无。"}
{"title": "输入某年某月某日，判断这一天是这一年的第几天？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"title": "将一个列表的数据复制到另一个列表中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "output": "\n[1, 2, 3]\n", "name": "Python 练习实例7", "analysis": "使用列表[:]。"}
{"title": "暂停一秒输出。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "output": "\n1 a\n2 b\n", "name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。"}
{"title": "输出 9*9 乘法口诀表。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"title": "判断101-200之间有多少个素数，并输出所有素数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "output": "\nn = 4\na = 4\n4\n44\n444\n4444\n计算和为： 4936\n", "name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。"}
{"title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "output": "\ninput a string:\nrunoob\nchar = 6,space = 0,digit = 0,others = 0\n", "name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"title": "输出指定格式的日期。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "name": "Python 练习实例16", "analysis": "使用 datetime 模块。"}
{"title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "output": "\n输入分数:\n89\n89 属于 B\n", "name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "output": "\nplease input:S\nplease input second letter:\nplease input:a\nSaturday\n", "name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"title": "模仿静态变量(static)另一案例。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass Num:\n    nNum = 1\n    def inc(self):\n        self.nNum += 1\n        print 'nNum = %d' % self.nNum\n\nif __name__ == '__main__':\n    nNum = 2\n    inst = Num()\n    for i in range(3):\n        nNum += 1\n        print 'The num = %d' % nNum\n        inst.inc()\n\nThe num = 3\nnNum = 2\nThe num = 4\nnNum = 3\nThe num = 5\nnNum = 4\n", "name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法"}
{"title": "学习使用auto定义变量的用法。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nnum = 2\ndef autofunc():\n    num = 1\n    print 'internal block num = %d' % num\n    num += 1\nfor i in range(3):\n    print 'The num = %d' % num\n    num += 1\n    autofunc()\n\nThe num = 2\ninternal block num = 1\nThe num = 3\ninternal block num = 1\nThe num = 4\ninternal block num = 1\n", "name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"title": "模仿静态变量的用法。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef varfunc():\n    var = 0\n    print 'var = %d' % var\n    var += 1\nif __name__ == '__main__':\n    for i in range(3):\n        varfunc()\n\n# 类的属性\n# 作为类的一个属性吧\nclass Static:\n    StaticVar = 5\n    def varfunc(self):\n        self.StaticVar += 1\n        print self.StaticVar\n\nprint Static.StaticVar\na = Static()\nfor i in range(3):\n    a.varfunc()\n\nvar = 0\nvar = 0\nvar = 0\n5\n6\n7\n8\n", "name": "Python 练习实例41", "analysis": "无。"}
{"title": "将一个数组逆序输出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "output": "\n[9, 6, 5, 4, 1]\n[1, 4, 5, 6, 9]\n", "name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。"}
{"title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "output": "\n原始列表:\n1 4 6 9 13 16 19 28 40 100 0 \n插入一个数字:\n7\n排序后列表:\n1 4 6 7 9 13 16 19 28 40 100\n", "name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"title": "两个变量值互换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "output": "\nx = 10,y = 20\nx = 20,y = 10\n", "name": "Python 练习实例47", "analysis": "无"}
{"title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "output": "\n如果输入的数字小于 50，程序将停止运行。\n请输入一个数字：12\n运算结果为: 144\n请输入一个数字：14\n运算结果为: 196\n请输入一个数字：1\n运算结果为: 1\n", "name": "Python 练习实例46", "analysis": "无"}
{"title": "统计 1 到 100 之和。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "output": "\nThe sum is 5050\n", "name": "Python 练习实例45", "analysis": "无"}
{"title": "学习使用按位或 | 。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a | 3\n    print 'a | b is %d' % b\n    b |= 7\n    print 'a | b is %d' % b\n\na | b is 63\na | b is 63\n", "name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"title": "学习使用按位与 & 。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a & 3\n    print 'a & b = %d' % b\n    b &= 7\n    print 'a & b = %d' % b\n\na & b = 3\na & b = 3\n", "name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"title": "输出一个随机数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "output": "\n14.4012371357\n", "name": "Python 练习实例50", "analysis": "使用 random 模块。"}
{"title": "使用lambda来创建匿名函数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "output": "\nThe largar one is 20\nThe lower one is 10\n", "name": "Python 练习实例49", "analysis": "无"}
{"title": "数字比较。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "output": "\n10 小于 20\n", "name": "Python 练习实例48", "analysis": "无"}
{"title": "输入3个数a,b,c，按大小顺序输出。　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "output": "\nn1 = :\n123\nn2 = :\n456\nn3 = :\n789\n123 456 789\n", "name": "Python 练习实例66", "analysis": "无。"}
{"title": "一个最优美的图案。　　", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport math\nclass PTS:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\npoints = []\n\ndef LineToDemo():\n    from Tkinter import *\n    screenx = 400\n    screeny = 400\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\n\n    AspectRatio = 0.85\n    MAXPTS = 15\n    h = screeny\n    w = screenx\n    xcenter = w / 2\n    ycenter = h / 2\n    radius = (h - 30) / (AspectRatio * 2) - 20\n    step = 360 / MAXPTS\n    angle = 0.0\n    for i in range(MAXPTS):\n        rads = angle * math.pi / 180.0\n        p = PTS()\n        p.x = xcenter + int(math.cos(rads) * radius)\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\n        angle += step\n        points.append(p)\n    canvas.create_oval(xcenter - radius,ycenter - radius,\n                       xcenter + radius,ycenter + radius)\n    for i in range(MAXPTS):\n        for j in range(i,MAXPTS):\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\n\n    canvas.pack()\n    mainloop()\nif __name__ == '__main__':\n    LineToDemo()\n", "name": "Python 练习实例65", "analysis": "无。"}
{"title": "利用ellipse 和 rectangle 画图。。　", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    left = 20\n    right = 50\n    top = 50\n    num = 15\n    for i in range(num):\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\n        right += 5\n        left += 5\n        top += 10\n\n    canvas.pack()\n    mainloop()\n", "name": "Python 练习实例64", "analysis": "无。"}
{"title": "字符串排序。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "name": "Python 练习实例79", "analysis": "无。"}
{"title": "创建一个链表。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "name": "Python 练习实例72", "analysis": "无。"}
{"title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "output": "\nwang,50\n", "name": "Python 练习实例78", "analysis": "无。"}
{"title": "循环输出列表", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "output": "\nman\nwoman\ngirl\nboy\nsister\n", "name": "Python 练习实例77", "analysis": "无。"}
{"title": "编写input()和output()函数输入，输出5个学生的数据记录。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "name": "Python 练习实例71", "analysis": "无。"}
{"title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "name": "Python 练习实例70", "analysis": "无。"}
{"title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "output": "\n$ python test.py \n请输入总人数:34\n10\n", "name": "Python 练习实例69", "analysis": "无。"}
{"title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "name": "Python 练习实例68", "analysis": "无。"}
{"title": "时间函数举例3。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "name": "Python 练习实例93", "analysis": "无。"}
{"title": "时间函数举例2。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "output": "\n0\n1\n2\n3\n4\n……\n", "name": "Python 练习实例92", "analysis": "无。"}
{"title": "时间函数举例1。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "name": "Python 练习实例91", "analysis": "无。"}
{"title": "列表使用实例。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "name": "Python 练习实例90", "analysis": "无。"}
{"title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "output": "\n输入四个数字:\n1234\n9876\n", "name": "Python 练习实例89", "analysis": "无。"}
{"title": "列表转换为字典。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "output": "\n{'a': 'b', 1: 2}\n", "name": "Python 练习实例100", "analysis": "无。"}
{"title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "output": "\n123456\n", "name": "Python 练习实例99", "analysis": "无。"}
{"title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "name": "Python 练习实例98", "analysis": "无。"}
{"title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "name": "Python 练习实例97", "analysis": "无。"}
{"title": "计算字符串中子串出现的次数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "name": "Python 练习实例96", "analysis": "无。"}
{"title": "字符串日期转换为易读的日期格式。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "name": "Python 练习实例95", "analysis": "无。"}
{"title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "name": "Python 练习实例94", "analysis": "无。"}
{"title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "name": "Python 练习实例88", "analysis": "无。"}
{"title": "回答结果（结构体变量传递）。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "name": "Python 练习实例87", "analysis": "无。"}
{"title": "两个字符串连接程序。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "name": "Python 练习实例86", "analysis": "无。"}
{"title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。"}
{"title": "连接字符串。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "output": "\nBrazil,Russia,India,China\n", "name": "Python 练习实例84", "analysis": "无。"}
{"title": "反向输出一个链表。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "name": "Python 练习实例73", "analysis": "无。"}
{"title": "求0―7所能组成的奇数个数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t"}
{"title": "八进制转换为十进制", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "output": "\ninput a octal number:\n122\n82\n", "name": "Python 练习实例82", "analysis": "无。"}
{"title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "output": "\n9708  = 800 *  12  + 9 *  12\n", "name": "Python 练习实例81", "analysis": "无。"}
{"title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "output": "\n3121\n", "name": "Python 练习实例80", "analysis": "无。"}
{"title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "output": "\ninput a number:\n6\n0.916666666667\n", "name": "Python 练习实例76", "analysis": "无。"}
{"title": "放松一下，算一道简单的题目。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "output": "\n67\n", "name": "Python 练习实例75", "analysis": "无。"}
{"title": "列表排序及连接。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "name": "Python 练习实例74", "analysis": "排序可使用 "}
{"title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "output": "\n输入一个数字:\n1\n输入一个数字:\n2\n输入一个数字:\n3\n输入一个数字:\n7\n输入一个数字:\n9\n输入一个数字:\n8\n计算结果：\n9\n2\n3\n7\n8\n1\n", "name": "Python 练习实例67", "analysis": "无。"}
{"title": "画椭圆。　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "output": "", "name": "Python 练习实例63", "analysis": "使用 Tkinter。"}
{"title": "查找字符串。　　", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nsStr1 = 'abcdefg'\nsStr2 = 'cde'\nprint sStr1.find(sStr2)\n\n2\n", "name": "Python 练习实例62", "analysis": "无。"}
{"title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "output": "\n1 \n1 1 \n1 2 1 \n1 3 3 1 \n1 4 6 4 1 \n1 5 10 10 5 1 \n1 6 15 20 15 6 1 \n1 7 21 35 35 21 7 1 \n1 8 28 56 70 56 28 8 1 \n1 9 36 84 126 126 84 36 9 1\n", "name": "Python 练习实例61", "analysis": "无。"}
{"title": "计算字符串长度。　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "output": "\n6\n", "name": "Python 练习实例60", "analysis": "无。"}
{"title": "画图，综合例子。　　", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__  == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\n    canvas.pack(expand = YES,fill = BOTH)\n    x0 = 150\n    y0 = 100\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\n    import math\n    B = 0.809\n    for i in range(16):\n        a = 2 * math.pi / 16 * i\n        x = math.ceil(x0 + 48 * math.cos(a))\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\n        canvas.create_line(x0,y0,x,y,fill = 'red')\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\n    \n\n    for k in range(501):\n        for i in range(17):\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n        for j in range(51):\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n    mainloop()\n", "name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"title": "画图，学用rectangle画方形。　　　", "demo": "", "output": "rectangle(int left, int top, int right, int bottom)\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    root = Tk()\n    root.title('Canvas')\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_rectangle(x0,y0,x1,y1)\n        x0 -= 5\n        y0 -= 5\n        x1 += 5\n        y1 += 5\n        \n    canvas.pack()\n    root.mainloop()\n", "name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t"}
{"title": "画图，学用line画直线。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "output": "", "name": "Python 练习实例57", "analysis": "无。"}
{"title": "画图，学用circle画圆形。　　　", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "output": "", "name": "Python 练习实例56", "analysis": "无。"}
{"title": "学习使用按位取反~。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 234\n    b = ~a\n    print 'The a\\'s 1 complement is %d' % b\n    a = ~a\n    print 'The a\\'s 2 complement is %d' % a\n\nThe a's 1 complement is -235\nThe a's 2 complement is -235\n", "name": "Python 练习实例55", "analysis": "~0=1; ~1=0; "}
{"title": "学习使用按位异或 ^ 。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a ^ 3\n    print 'The a ^ 3 = %d' % b\n    b ^= 7\n    print 'The a ^ b = %d' % b\n\nThe a ^ 3 = 60\nThe a ^ b = 59\n", "name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "output": "\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\n[17, 15, 4]\n[10, 12, 9]\n[11, 13, 18]\n", "name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"title": "求一个3*3矩阵对角线元素之和。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "output": "\ninput num:\n78\ninput num:\n34\ninput num:\n23\ninput num:\n34\ninput num:\n56\ninput num:\n33\ninput num:\n12\ninput num:\n21\ninput num:\n2\n136.0\n", "name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"title": "对10个数进行排序。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "output": "\n请输入10个数字:\n\n输入一个数字:\n5\n输入一个数字:\n3\n输入一个数字:\n23\n输入一个数字:\n67\n输入一个数字:\n2\n输入一个数字:\n56\n输入一个数字:\n45\n输入一个数字:\n98\n输入一个数字:\n239\n输入一个数字:\n9\n\n5\n3\n23\n67\n2\n56\n45\n98\n239\n9\n\n排列之后：\n2\n3\n5\n9\n23\n45\n56\n67\n98\n239\n", "name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"title": "求100之内的素数。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "output": "\n输入区间最小值: 1\n输入区间最大值: 100\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n", "name": "Python 练习实例36", "analysis": "无。"}
{"title": "文本颜色设置。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\n\n警告的颜色字体?    # 浅黄色\n", "name": "Python 练习实例35", "analysis": "无。"}
{"title": "练习函数调用。", "demo": "", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef hello_world():\n    print 'hello world'\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\nif __name__ == '__main__':\n    three_hellos()\n\nhello world\nhello world\nhello world\n", "name": "Python 练习实例34", "analysis": "无。"}
{"title": "按逗号分隔列表。", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "output": "\n1,2,3,4,5\n", "name": "Python 练习实例33", "analysis": "无。"}
{"output": "", "demo": "", "analysis": "\n\t\t\t\t\t", "name": "Python 100例", "title": "\n\t\t\t\t\t"}
{"output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "name": "Python 练习实例1", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？"}
{"output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "name": "Python 练习实例5", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。"}
{"output": "\n[1, 2, 3]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "analysis": "使用列表[:]。", "name": "Python 练习实例7", "title": "将一个列表的数据复制到另一个列表中。"}
{"output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "name": "Python 练习实例2", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？"}
{"output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "name": "Python 练习实例8", "title": "输出 9*9 乘法口诀表。"}
{"output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "name": "Python 练习实例11", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ "}
{"output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "name": "Python 练习实例6", "title": "斐波那契数列。 "}
{"output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "name": "Python 练习实例4", "title": "输入某年某月某日，判断这一天是这一年的第几天？"}
{"output": "\n-99\n21\n261\n1581\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "name": "Python 练习实例3", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？"}
{"output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "name": "Python 练习实例12", "title": "判断101-200之间有多少个素数，并输出所有素数。"}
{"output": "\n6\n1 2 3\n28\n1 2 4 7 14\n496\n1 2 4 8 16 31 62 124 248\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "analysis": "请参照程序", "name": "Python 练习实例19", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。"}
{"output": "\nn = 4\na = 4\n4\n44\n444\n4444\n计算和为： 4936\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "analysis": "关键是计算出每一项的值。", "name": "Python 练习实例18", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。"}
{"output": "\ninput a string:\nrunoob\nchar = 6,space = 0,digit = 0,others = 0\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "name": "Python 练习实例17", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。"}
{"output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "analysis": "使用 datetime 模块。", "name": "Python 练习实例16", "title": "输出指定格式的日期。"}
{"output": "\n输入分数:\n89\n89 属于 B\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "name": "Python 练习实例15", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。"}
{"output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "analysis": "排序可使用 ", "name": "Python 练习实例74", "title": "列表排序及连接。"}
{"output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "analysis": "无。", "name": "Python 练习实例10", "title": "暂停一秒输出，并格式化当前时间。 "}
{"output": "\n1 a\n2 b\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "analysis": "使用 time 模块的 sleep() 函数。", "name": "Python 练习实例9", "title": "暂停一秒输出。 "}
{"output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "analysis": "999999 / 13 = 76923。", "name": "Python 练习实例85", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。"}
{"output": "\nBrazil,Russia,India,China\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "analysis": "无。", "name": "Python 练习实例84", "title": "连接字符串。"}
{"output": "\n0\n1\n2\n3\n4\n……\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "analysis": "无。", "name": "Python 练习实例92", "title": "时间函数举例2。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "demo": "", "analysis": "无。", "name": "Python 练习实例91", "title": "时间函数举例1。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "demo": "", "analysis": "无。", "name": "Python 练习实例90", "title": "列表使用实例。"}
{"output": "\n输入四个数字:\n1234\n9876\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "analysis": "无。", "name": "Python 练习实例89", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。"}
{"output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "analysis": "无。", "name": "Python 练习实例88", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "demo": "", "analysis": "无。", "name": "Python 练习实例87", "title": "回答结果（结构体变量传递）。"}
{"output": "\n{'a': 'b', 1: 2}\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "analysis": "无。", "name": "Python 练习实例100", "title": "列表转换为字典。 "}
{"output": "\n123456\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "analysis": "无。", "name": "Python 练习实例99", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 "}
{"output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "analysis": "无。", "name": "Python 练习实例98", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 "}
{"output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "analysis": "无。", "name": "Python 练习实例97", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 "}
{"output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "analysis": "无。", "name": "Python 练习实例96", "title": "计算字符串中子串出现的次数。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "demo": "", "analysis": "无。", "name": "Python 练习实例95", "title": "字符串日期转换为易读的日期格式。"}
{"output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "analysis": "无。", "name": "Python 练习实例94", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "demo": "", "analysis": "无。", "name": "Python 练习实例93", "title": "时间函数举例3。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "demo": "", "analysis": "无。", "name": "Python 练习实例86", "title": "两个字符串连接程序。"}
{"output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "analysis": "\n\t\t\t\t\t", "name": "Python 练习实例83", "title": "求0―7所能组成的奇数个数。"}
{"output": "\ninput a octal number:\n122\n82\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "analysis": "无。", "name": "Python 练习实例82", "title": "八进制转换为十进制"}
{"output": "\n9708  = 800 *  12  + 9 *  12\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "analysis": "无。", "name": "Python 练习实例81", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。"}
{"output": "\n3121\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "analysis": "无。", "name": "Python 练习实例80", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？"}
{"output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "analysis": "无。", "name": "Python 练习实例79", "title": "字符串排序。"}
{"output": "\nwang,50\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "analysis": "无。", "name": "Python 练习实例78", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。"}
{"output": "\nman\nwoman\ngirl\nboy\nsister\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "analysis": "无。", "name": "Python 练习实例77", "title": "循环输出列表"}
{"output": "\ninput a number:\n6\n0.916666666667\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "analysis": "无。", "name": "Python 练习实例76", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n"}
{"output": "\n67\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "analysis": "无。", "name": "Python 练习实例75", "title": "放松一下，算一道简单的题目。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "demo": "", "analysis": "无。", "name": "Python 练习实例73", "title": "反向输出一个链表。"}
{"output": "\n输入一个数字:\n1\n输入一个数字:\n2\n输入一个数字:\n3\n输入一个数字:\n7\n输入一个数字:\n9\n输入一个数字:\n8\n计算结果：\n9\n2\n3\n7\n8\n1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "analysis": "无。", "name": "Python 练习实例67", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "demo": "", "analysis": "无。", "name": "Python 练习实例72", "title": "创建一个链表。"}
{"output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "analysis": "无。", "name": "Python 练习实例71", "title": "编写input()和output()函数输入，输出5个学生的数据记录。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "demo": "", "analysis": "无。", "name": "Python 练习实例70", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。"}
{"output": "\n$ python test.py \n请输入总人数:34\n10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "analysis": "无。", "name": "Python 练习实例69", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。"}
{"output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "analysis": "无。", "name": "Python 练习实例68", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    left = 20\n    right = 50\n    top = 50\n    num = 15\n    for i in range(num):\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\n        right += 5\n        left += 5\n        top += 10\n\n    canvas.pack()\n    mainloop()\n", "demo": "", "analysis": "无。", "name": "Python 练习实例64", "title": "利用ellipse 和 rectangle 画图。。　"}
{"output": "\nn1 = :\n123\nn2 = :\n456\nn3 = :\n789\n123 456 789\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "analysis": "无。", "name": "Python 练习实例66", "title": "输入3个数a,b,c，按大小顺序输出。　　　"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport math\nclass PTS:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\npoints = []\n\ndef LineToDemo():\n    from Tkinter import *\n    screenx = 400\n    screeny = 400\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\n\n    AspectRatio = 0.85\n    MAXPTS = 15\n    h = screeny\n    w = screenx\n    xcenter = w / 2\n    ycenter = h / 2\n    radius = (h - 30) / (AspectRatio * 2) - 20\n    step = 360 / MAXPTS\n    angle = 0.0\n    for i in range(MAXPTS):\n        rads = angle * math.pi / 180.0\n        p = PTS()\n        p.x = xcenter + int(math.cos(rads) * radius)\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\n        angle += step\n        points.append(p)\n    canvas.create_oval(xcenter - radius,ycenter - radius,\n                       xcenter + radius,ycenter + radius)\n    for i in range(MAXPTS):\n        for j in range(i,MAXPTS):\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\n\n    canvas.pack()\n    mainloop()\nif __name__ == '__main__':\n    LineToDemo()\n", "demo": "", "analysis": "无。", "name": "Python 练习实例65", "title": "一个最优美的图案。　　"}
{"output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "analysis": "使用 Tkinter。", "name": "Python 练习实例63", "title": "画椭圆。　"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nsStr1 = 'abcdefg'\nsStr2 = 'cde'\nprint sStr1.find(sStr2)\n\n2\n", "demo": "", "analysis": "无。", "name": "Python 练习实例62", "title": "查找字符串。　　"}
{"output": "\n1 \n1 1 \n1 2 1 \n1 3 3 1 \n1 4 6 4 1 \n1 5 10 10 5 1 \n1 6 15 20 15 6 1 \n1 7 21 35 35 21 7 1 \n1 8 28 56 70 56 28 8 1 \n1 9 36 84 126 126 84 36 9 1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "analysis": "无。", "name": "Python 练习实例61", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　"}
{"output": "\n6\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "analysis": "无。", "name": "Python 练习实例60", "title": "计算字符串长度。　　"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__  == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\n    canvas.pack(expand = YES,fill = BOTH)\n    x0 = 150\n    y0 = 100\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\n    import math\n    B = 0.809\n    for i in range(16):\n        a = 2 * math.pi / 16 * i\n        x = math.ceil(x0 + 48 * math.cos(a))\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\n        canvas.create_line(x0,y0,x,y,fill = 'red')\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\n    \n\n    for k in range(501):\n        for i in range(17):\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n        for j in range(51):\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n    mainloop()\n", "demo": "", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "name": "Python 练习实例59", "title": "画图，综合例子。　　"}
{"output": "rectangle(int left, int top, int right, int bottom)\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    root = Tk()\n    root.title('Canvas')\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_rectangle(x0,y0,x1,y1)\n        x0 -= 5\n        y0 -= 5\n        x1 += 5\n        y1 += 5\n        \n    canvas.pack()\n    root.mainloop()\n", "demo": "", "analysis": "\n\t\t\t\t\t", "name": "Python 练习实例58", "title": "画图，学用rectangle画方形。　　　"}
{"output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "analysis": "无。", "name": "Python 练习实例57", "title": "画图，学用line画直线。"}
{"output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "analysis": "无。", "name": "Python 练习实例56", "title": "画图，学用circle画圆形。　　　"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 234\n    b = ~a\n    print 'The a\\'s 1 complement is %d' % b\n    a = ~a\n    print 'The a\\'s 2 complement is %d' % a\n\nThe a's 1 complement is -235\nThe a's 2 complement is -235\n", "demo": "", "analysis": "~0=1; ~1=0; ", "name": "Python 练习实例55", "title": "学习使用按位取反~。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a ^ 3\n    print 'The a ^ 3 = %d' % b\n    b ^= 7\n    print 'The a ^ b = %d' % b\n\nThe a ^ 3 = 60\nThe a ^ b = 59\n", "demo": "", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "name": "Python 练习实例53", "title": "学习使用按位异或 ^ 。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a | 3\n    print 'a | b is %d' % b\n    b |= 7\n    print 'a | b is %d' % b\n\na | b is 63\na | b is 63\n", "demo": "", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "name": "Python 练习实例52", "title": "学习使用按位或 | 。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a & 3\n    print 'a & b = %d' % b\n    b &= 7\n    print 'a & b = %d' % b\n\na & b = 3\na & b = 3\n", "demo": "", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "name": "Python 练习实例51", "title": "学习使用按位与 & 。"}
{"output": "\n14.4012371357\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "analysis": "使用 random 模块。", "name": "Python 练习实例50", "title": "输出一个随机数。"}
{"output": "\nThe largar one is 20\nThe lower one is 10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "analysis": "无", "name": "Python 练习实例49", "title": "使用lambda来创建匿名函数。"}
{"output": "\n10 小于 20\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "analysis": "无", "name": "Python 练习实例48", "title": "数字比较。"}
{"output": "\nx = 10,y = 20\nx = 20,y = 10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "analysis": "无", "name": "Python 练习实例47", "title": "两个变量值互换。"}
{"output": "\n如果输入的数字小于 50，程序将停止运行。\n请输入一个数字：12\n运算结果为: 144\n请输入一个数字：14\n运算结果为: 196\n请输入一个数字：1\n运算结果为: 1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "analysis": "无", "name": "Python 练习实例46", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。"}
{"output": "\nThe sum is 5050\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "analysis": "无", "name": "Python 练习实例45", "title": "统计 1 到 100 之和。"}
{"output": "\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\n[17, 15, 4]\n[10, 12, 9]\n[11, 13, 18]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "name": "Python 练习实例44 - Python 两个矩阵相加", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵："}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass Num:\n    nNum = 1\n    def inc(self):\n        self.nNum += 1\n        print 'nNum = %d' % self.nNum\n\nif __name__ == '__main__':\n    nNum = 2\n    inst = Num()\n    for i in range(3):\n        nNum += 1\n        print 'The num = %d' % nNum\n        inst.inc()\n\nThe num = 3\nnNum = 2\nThe num = 4\nnNum = 3\nThe num = 5\nnNum = 4\n", "demo": "", "analysis": "演示一个python作用域使用方法", "name": "Python 练习实例43", "title": "模仿静态变量(static)另一案例。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nnum = 2\ndef autofunc():\n    num = 1\n    print 'internal block num = %d' % num\n    num += 1\nfor i in range(3):\n    print 'The num = %d' % num\n    num += 1\n    autofunc()\n\nThe num = 2\ninternal block num = 1\nThe num = 3\ninternal block num = 1\nThe num = 4\ninternal block num = 1\n", "demo": "", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "name": "Python 练习实例42", "title": "学习使用auto定义变量的用法。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef varfunc():\n    var = 0\n    print 'var = %d' % var\n    var += 1\nif __name__ == '__main__':\n    for i in range(3):\n        varfunc()\n\n# 类的属性\n# 作为类的一个属性吧\nclass Static:\n    StaticVar = 5\n    def varfunc(self):\n        self.StaticVar += 1\n        print self.StaticVar\n\nprint Static.StaticVar\na = Static()\nfor i in range(3):\n    a.varfunc()\n\nvar = 0\nvar = 0\nvar = 0\n5\n6\n7\n8\n", "demo": "", "analysis": "无。", "name": "Python 练习实例41", "title": "模仿静态变量的用法。"}
{"output": "\n[9, 6, 5, 4, 1]\n[1, 4, 5, 6, 9]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "analysis": "用第一个与最后一个交换。", "name": "Python 练习实例40", "title": "将一个数组逆序输出。"}
{"output": "\n原始列表:\n1 4 6 9 13 16 19 28 40 100 0 \n插入一个数字:\n7\n排序后列表:\n1 4 6 7 9 13 16 19 28 40 100\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "name": "Python 练习实例39", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。"}
{"output": "\ninput num:\n78\ninput num:\n34\ninput num:\n23\ninput num:\n34\ninput num:\n56\ninput num:\n33\ninput num:\n12\ninput num:\n21\ninput num:\n2\n136.0\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "name": "Python 练习实例38", "title": "求一个3*3矩阵对角线元素之和。"}
{"output": "\n请输入10个数字:\n\n输入一个数字:\n5\n输入一个数字:\n3\n输入一个数字:\n23\n输入一个数字:\n67\n输入一个数字:\n2\n输入一个数字:\n56\n输入一个数字:\n45\n输入一个数字:\n98\n输入一个数字:\n239\n输入一个数字:\n9\n\n5\n3\n23\n67\n2\n56\n45\n98\n239\n9\n\n排列之后：\n2\n3\n5\n9\n23\n45\n56\n67\n98\n239\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "name": "Python 练习实例37", "title": "对10个数进行排序。"}
{"output": "\n输入区间最小值: 1\n输入区间最大值: 100\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "analysis": "无。", "name": "Python 练习实例36", "title": "求100之内的素数。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\n\n警告的颜色字体?    # 浅黄色\n", "demo": "", "analysis": "无。", "name": "Python 练习实例35", "title": "文本颜色设置。"}
{"output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef hello_world():\n    print 'hello world'\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\nif __name__ == '__main__':\n    three_hellos()\n\nhello world\nhello world\nhello world\n", "demo": "", "analysis": "无。", "name": "Python 练习实例34", "title": "练习函数调用。"}
{"output": "\n1,2,3,4,5\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "analysis": "无。", "name": "Python 练习实例33", "title": "按逗号分隔列表。"}
{"output": "\nplease input:S\nplease input second letter:\nplease input:a\nSaturday\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "name": "Python 练习实例31", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。"}
{"output": "\n请输入一个数字:\n12321\n12321 是一个回文数!\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "analysis": "无。", "name": "Python 练习实例30", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。"}
{"output": "\n请输入一个数:\n23459\n5 位数： 9 5 4 3 2\n\n请输入一个数:\n3472\n4 位数： 2 7 4 3\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "analysis": "学会分解出每一位数。", "name": "Python 练习实例29", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。"}
{"output": "\n18\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "name": "Python 练习实例28", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？"}
{"output": "\nInput a string:abcde\ne\nd\nc\nb\na\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "analysis": "无。", "name": "Python 练习实例27", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。"}
{"output": "\n0! = 1\n1! = 1\n2! = 2\n3! = 6\n4! = 24\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "analysis": "递归公式：fn=fn_1*4! ", "name": "Python 练习实例26", "title": "利用递归方法求5!。"}
{"output": "\nthree\ntwo\none\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "analysis": "无。", "name": "Python 练习实例32", "title": "按相反的顺序输出列表的值。"}
{"output": "\n1! + 2! + 3! + ... + 20! = 2561327494111820313\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "analysis": "此程序只是把累加变成了累乘。  ", "name": "Python 练习实例25", "title": "求1+2!+3!+...+20!的和。"}
{"output": "\n32.6602607986\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "analysis": "请抓住分子与分母的变化规律。 ", "name": "Python 练习实例24", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。"}
{"output": "\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "name": "Python 练习实例23", "title": "打印出如下图案（菱形）:"}
{"output": "\n1534\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "analysis": "采取逆向思维的方法，从后往前推断。", "name": "Python 练习实例21", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。"}
{"output": "\n总高度：tour = 299.609375\n第10次反弹高度：height = 0.09765625\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "analysis": "无", "name": "Python 练习实例20", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？"}
{"output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "name": "Python 练习实例14", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。"}
{"output": "\n153\n370\n371\n407\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "name": "Python 练习实例13", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。"}
{"demo": "", "name": "Python 100例", "output": "", "title": "\n\t\t\t\t\t", "analysis": "\n\t\t\t\t\t"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k", "name": "Python 练习实例1", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)", "name": "Python 练习实例15", "output": "\n输入分数:\n89\n89 属于 B\n", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),", "name": "Python 练习实例8", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "title": "输出 9*9 乘法口诀表。", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b", "name": "Python 练习实例7", "output": "\n[1, 2, 3]\n", "title": "将一个列表的数据复制到另一个列表中。", "analysis": "使用列表[:]。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)", "name": "Python 练习实例6", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "title": "斐波那契数列。 ", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)", "name": "Python 练习实例14", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成："}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l", "name": "Python 练习实例5", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum", "name": "Python 练习实例4", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天："}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r", "name": "Python 练习实例2", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)", "name": "Python 练习实例3", "output": "\n-99\n21\n261\n1581\n", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n", "name": "Python 练习实例13", "output": "\n153\n370\n371\n407\n", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h", "name": "Python 练习实例12", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "title": "判断101-200之间有多少个素数，并输出所有素数。", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2", "name": "Python 练习实例11", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21...."}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))", "name": "Python 练习实例10", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "title": "暂停一秒输出，并格式化当前时间。 ", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒", "name": "Python 练习实例9", "output": "\n1 a\n2 b\n", "title": "暂停一秒输出。 ", "analysis": "使用 time 模块的 sleep() 函数。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))", "name": "Python 练习实例20", "output": "\n总高度：tour = 299.609375\n第10次反弹高度：height = 0.09765625\n", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "analysis": "无"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]", "name": "Python 练习实例19", "output": "\n6\n1 2 3\n28\n1 2 4 7 14\n496\n1 2 4 8 16 31 62 124 248\n", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "analysis": "请参照程序"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x", "name": "Python 练习实例80", "output": "\n3121\n", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])", "name": "Python 练习实例100", "output": "\n{'a': 'b', 1: 2}\n", "title": "列表转换为字典。 ", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()", "name": "Python 练习实例99", "output": "\n123456\n", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()", "name": "Python 练习实例98", "output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()", "name": "Python 练习实例97", "output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount", "name": "Python 练习实例96", "output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "title": "计算字符串中子串出现的次数。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例95", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "title": "字符串日期转换为易读的日期格式。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')", "name": "Python 练习实例94", "output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例93", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "title": "时间函数举例3。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start", "name": "Python 练习实例92", "output": "\n0\n1\n2\n3\n4\n……\n", "title": "时间函数举例2。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例91", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "title": "时间函数举例1。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例90", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "title": "列表使用实例。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))", "name": "Python 练习实例89", "output": "\n输入四个数字:\n1234\n9876\n", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1", "name": "Python 练习实例88", "output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例87", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "title": "回答结果（结构体变量传递）。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例86", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "title": "两个字符串连接程序。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)", "name": "Python 练习实例85", "output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "analysis": "999999 / 13 = 76923。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)", "name": "Python 练习实例84", "output": "\nBrazil,Russia,India,China\n", "title": "连接字符串。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum", "name": "Python 练习实例83", "output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "title": "求0―7所能组成的奇数个数。", "analysis": "\n\t\t\t\t\t"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n", "name": "Python 练习实例82", "output": "\ninput a octal number:\n122\n82\n", "title": "八进制转换为十进制", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i", "name": "Python 练习实例81", "output": "\n9708  = 800 *  12  + 9 *  12\n", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3", "name": "Python 练习实例79", "output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "title": "字符串排序。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])", "name": "Python 练习实例78", "output": "\nwang,50\n", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]", "name": "Python 练习实例77", "output": "\nman\nwoman\ngirl\nboy\nsister\n", "title": "循环输出列表", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum", "name": "Python 练习实例76", "output": "\ninput a number:\n6\n0.916666666667\n", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i", "name": "Python 练习实例75", "output": "\n67\n", "title": "放松一下，算一道简单的题目。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a", "name": "Python 练习实例74", "output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "title": "列表排序及连接。", "analysis": "排序可使用 "}
{"demo": "", "name": "Python 练习实例73", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "title": "反向输出一个链表。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例72", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "title": "创建一个链表。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)", "name": "Python 练习实例71", "output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例70", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]", "name": "Python 练习实例69", "output": "\n$ python test.py \n请输入总人数:34\n10\n", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number", "name": "Python 练习实例68", "output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)", "name": "Python 练习实例67", "output": "\n输入一个数字:\n1\n输入一个数字:\n2\n输入一个数字:\n3\n输入一个数字:\n7\n输入一个数字:\n9\n输入一个数字:\n8\n计算结果：\n9\n2\n3\n7\n8\n1\n", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3", "name": "Python 练习实例66", "output": "\nn1 = :\n123\nn2 = :\n456\nn3 = :\n789\n123 456 789\n", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例65", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport math\nclass PTS:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\npoints = []\n\ndef LineToDemo():\n    from Tkinter import *\n    screenx = 400\n    screeny = 400\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\n\n    AspectRatio = 0.85\n    MAXPTS = 15\n    h = screeny\n    w = screenx\n    xcenter = w / 2\n    ycenter = h / 2\n    radius = (h - 30) / (AspectRatio * 2) - 20\n    step = 360 / MAXPTS\n    angle = 0.0\n    for i in range(MAXPTS):\n        rads = angle * math.pi / 180.0\n        p = PTS()\n        p.x = xcenter + int(math.cos(rads) * radius)\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\n        angle += step\n        points.append(p)\n    canvas.create_oval(xcenter - radius,ycenter - radius,\n                       xcenter + radius,ycenter + radius)\n    for i in range(MAXPTS):\n        for j in range(i,MAXPTS):\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\n\n    canvas.pack()\n    mainloop()\nif __name__ == '__main__':\n    LineToDemo()\n", "title": "一个最优美的图案。　　", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例64", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    left = 20\n    right = 50\n    top = 50\n    num = 15\n    for i in range(num):\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\n        right += 5\n        left += 5\n        top += 10\n\n    canvas.pack()\n    mainloop()\n", "title": "利用ellipse 和 rectangle 画图。。　", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()", "name": "Python 练习实例63", "output": "", "title": "画椭圆。　", "analysis": "使用 Tkinter。"}
{"demo": "", "name": "Python 练习实例62", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nsStr1 = 'abcdefg'\nsStr2 = 'cde'\nprint sStr1.find(sStr2)\n\n2\n", "title": "查找字符串。　　", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print", "name": "Python 练习实例61", "output": "\n1 \n1 1 \n1 2 1 \n1 3 3 1 \n1 4 6 4 1 \n1 5 10 10 5 1 \n1 6 15 20 15 6 1 \n1 7 21 35 35 21 7 1 \n1 8 28 56 70 56 28 8 1 \n1 9 36 84 126 126 84 36 9 1\n", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)", "name": "Python 练习实例60", "output": "\n6\n", "title": "计算字符串长度。　　", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例59", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__  == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\n    canvas.pack(expand = YES,fill = BOTH)\n    x0 = 150\n    y0 = 100\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\n    import math\n    B = 0.809\n    for i in range(16):\n        a = 2 * math.pi / 16 * i\n        x = math.ceil(x0 + 48 * math.cos(a))\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\n        canvas.create_line(x0,y0,x,y,fill = 'red')\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\n    \n\n    for k in range(501):\n        for i in range(17):\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n        for j in range(51):\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n    mainloop()\n", "title": "画图，综合例子。　　", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。"}
{"demo": "", "name": "Python 练习实例58", "output": "rectangle(int left, int top, int right, int bottom)\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    root = Tk()\n    root.title('Canvas')\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_rectangle(x0,y0,x1,y1)\n        x0 -= 5\n        y0 -= 5\n        x1 += 5\n        y1 += 5\n        \n    canvas.pack()\n    root.mainloop()\n", "title": "画图，学用rectangle画方形。　　　", "analysis": "\n\t\t\t\t\t"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()", "name": "Python 练习实例57", "output": "", "title": "画图，学用line画直线。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()", "name": "Python 练习实例56", "output": "", "title": "画图，学用circle画圆形。　　　", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例55", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 234\n    b = ~a\n    print 'The a\\'s 1 complement is %d' % b\n    a = ~a\n    print 'The a\\'s 2 complement is %d' % a\n\nThe a's 1 complement is -235\nThe a's 2 complement is -235\n", "title": "学习使用按位取反~。", "analysis": "~0=1; ~1=0; "}
{"demo": "", "name": "Python 练习实例53", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a ^ 3\n    print 'The a ^ 3 = %d' % b\n    b ^= 7\n    print 'The a ^ b = %d' % b\n\nThe a ^ 3 = 60\nThe a ^ b = 59\n", "title": "学习使用按位异或 ^ 。", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0"}
{"demo": "", "name": "Python 练习实例52", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a | 3\n    print 'a | b is %d' % b\n    b |= 7\n    print 'a | b is %d' % b\n\na | b is 63\na | b is 63\n", "title": "学习使用按位或 | 。", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1"}
{"demo": "", "name": "Python 练习实例51", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a & 3\n    print 'a & b = %d' % b\n    b &= 7\n    print 'a & b = %d' % b\n\na & b = 3\na & b = 3\n", "title": "学习使用按位与 & 。", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)", "name": "Python 练习实例50", "output": "\n14.4012371357\n", "title": "输出一个随机数。", "analysis": "使用 random 模块。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)", "name": "Python 练习实例49", "output": "\nThe largar one is 20\nThe lower one is 10\n", "title": "使用lambda来创建匿名函数。", "analysis": "无"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'", "name": "Python 练习实例48", "output": "\n10 小于 20\n", "title": "数字比较。", "analysis": "无"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)", "name": "Python 练习实例47", "output": "\nx = 10,y = 20\nx = 20,y = 10\n", "title": "两个变量值互换。", "analysis": "无"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE", "name": "Python 练习实例46", "output": "\n如果输入的数字小于 50，程序将停止运行。\n请输入一个数字：12\n运算结果为: 144\n请输入一个数字：14\n运算结果为: 196\n请输入一个数字：1\n运算结果为: 1\n", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "analysis": "无"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp", "name": "Python 练习实例45", "output": "\nThe sum is 5050\n", "title": "统计 1 到 100 之和。", "analysis": "无"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)", "name": "Python 练习实例44 - Python 两个矩阵相加", "output": "\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\n[17, 15, 4]\n[10, 12, 9]\n[11, 13, 18]\n", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。"}
{"demo": "", "name": "Python 练习实例43", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass Num:\n    nNum = 1\n    def inc(self):\n        self.nNum += 1\n        print 'nNum = %d' % self.nNum\n\nif __name__ == '__main__':\n    nNum = 2\n    inst = Num()\n    for i in range(3):\n        nNum += 1\n        print 'The num = %d' % nNum\n        inst.inc()\n\nThe num = 3\nnNum = 2\nThe num = 4\nnNum = 3\nThe num = 5\nnNum = 4\n", "title": "模仿静态变量(static)另一案例。", "analysis": "演示一个python作用域使用方法"}
{"demo": "", "name": "Python 练习实例42", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nnum = 2\ndef autofunc():\n    num = 1\n    print 'internal block num = %d' % num\n    num += 1\nfor i in range(3):\n    print 'The num = %d' % num\n    num += 1\n    autofunc()\n\nThe num = 2\ninternal block num = 1\nThe num = 3\ninternal block num = 1\nThe num = 4\ninternal block num = 1\n", "title": "学习使用auto定义变量的用法。", "analysis": "没有auto关键字，使用变量作用域来举例吧。"}
{"demo": "", "name": "Python 练习实例41", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef varfunc():\n    var = 0\n    print 'var = %d' % var\n    var += 1\nif __name__ == '__main__':\n    for i in range(3):\n        varfunc()\n\n# 类的属性\n# 作为类的一个属性吧\nclass Static:\n    StaticVar = 5\n    def varfunc(self):\n        self.StaticVar += 1\n        print self.StaticVar\n\nprint Static.StaticVar\na = Static()\nfor i in range(3):\n    a.varfunc()\n\nvar = 0\nvar = 0\nvar = 0\n5\n6\n7\n8\n", "title": "模仿静态变量的用法。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a", "name": "Python 练习实例40", "output": "\n[9, 6, 5, 4, 1]\n[1, 4, 5, 6, 9]\n", "title": "将一个数组逆序输出。", "analysis": "用第一个与最后一个交换。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],", "name": "Python 练习实例39", "output": "\n原始列表:\n1 4 6 9 13 16 19 28 40 100 0 \n插入一个数字:\n7\n排序后列表:\n1 4 6 7 9 13 16 19 28 40 100\n", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 "}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum", "name": "Python 练习实例38", "output": "\ninput num:\n78\ninput num:\n34\ninput num:\n23\ninput num:\n34\ninput num:\n56\ninput num:\n33\ninput num:\n12\ninput num:\n21\ninput num:\n2\n136.0\n", "title": "求一个3*3矩阵对角线元素之和。", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]", "name": "Python 练习实例37", "output": "\n请输入10个数字:\n\n输入一个数字:\n5\n输入一个数字:\n3\n输入一个数字:\n23\n输入一个数字:\n67\n输入一个数字:\n2\n输入一个数字:\n56\n输入一个数字:\n45\n输入一个数字:\n98\n输入一个数字:\n239\n输入一个数字:\n9\n\n5\n3\n23\n67\n2\n56\n45\n98\n239\n9\n\n排列之后：\n2\n3\n5\n9\n23\n45\n56\n67\n98\n239\n", "title": "对10个数进行排序。", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)", "name": "Python 练习实例36", "output": "\n输入区间最小值: 1\n输入区间最大值: 100\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n", "title": "求100之内的素数。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例35", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\n\n警告的颜色字体?    # 浅黄色\n", "title": "文本颜色设置。", "analysis": "无。"}
{"demo": "", "name": "Python 练习实例34", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef hello_world():\n    print 'hello world'\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\nif __name__ == '__main__':\n    three_hellos()\n\nhello world\nhello world\nhello world\n", "title": "练习函数调用。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1", "name": "Python 练习实例33", "output": "\n1,2,3,4,5\n", "title": "按逗号分隔列表。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i", "name": "Python 练习实例32", "output": "\nthree\ntwo\none\n", "title": "按相反的顺序输出列表的值。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')", "name": "Python 练习实例31", "output": "\nplease input:S\nplease input second letter:\nplease input:a\nSaturday\n", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a", "name": "Python 练习实例30", "output": "\n请输入一个数字:\n12321\n12321 是一个回文数!\n", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e", "name": "Python 练习实例29", "output": "\n请输入一个数:\n23459\n5 位数： 9 5 4 3 2\n\n请输入一个数:\n3472\n4 位数： 2 7 4 3\n", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "analysis": "学会分解出每一位数。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)", "name": "Python 练习实例28", "output": "\n18\n", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)", "name": "Python 练习实例27", "output": "\nInput a string:abcde\ne\nd\nc\nb\na\n", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "analysis": "无。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))", "name": "Python 练习实例26", "output": "\n0! = 1\n1! = 1\n2! = 2\n3! = 6\n4! = 24\n", "title": "利用递归方法求5!。", "analysis": "递归公式：fn=fn_1*4! "}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s", "name": "Python 练习实例25", "output": "\n1! + 2! + 3! + ... + 20! = 2561327494111820313\n", "title": "求1+2!+3!+...+20!的和。", "analysis": "此程序只是把累加变成了累乘。  "}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)", "name": "Python 练习实例24", "output": "\n32.6602607986\n", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "analysis": "请抓住分子与分母的变化规律。 "}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print", "name": "Python 练习实例23", "output": "\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n", "title": "打印出如下图案（菱形）:", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1", "name": "Python 练习实例21", "output": "\n1534\n", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "analysis": "采取逆向思维的方法，从后往前推断。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn", "name": "Python 练习实例18", "output": "\nn = 4\na = 4\n4\n44\n444\n4444\n计算和为： 4936\n", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "analysis": "关键是计算出每一项的值。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)", "name": "Python 练习实例17", "output": "\ninput a string:\nrunoob\nchar = 6,space = 0,digit = 0,others = 0\n", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "analysis": "利用while语句,条件为输入的字符不为'\\n'。"}
{"demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))", "name": "Python 练习实例16", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "title": "输出指定格式的日期。", "analysis": "使用 datetime 模块。"}
{"name": "Python 100例", "analysis": "\n\t\t\t\t\t", "title": "\n\t\t\t\t\t", "output": "", "demo": ""}
{"name": "Python 练习实例1", "analysis": "可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去\r\n掉不满足条件的排列。", "title": "有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？", "output": "\n1 2 3\n1 2 4\n1 3 2\n1 3 4\n1 4 2\n1 4 3\n2 1 3\n2 1 4\n2 3 1\n2 3 4\n2 4 1\n2 4 3\n3 1 2\n3 1 4\n3 2 1\n3 2 4\n3 4 1\n3 4 2\n4 1 2\n4 1 3\n4 2 1\n4 2 3\n4 3 1\n4 3 2\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,5):\n    for j in range(1,5):\n        for k in range(1,5):\n            if( i != k ) and (i != j) and (j != k):\n                print i,j,k"}
{"name": "Python 练习实例13", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。", "title": "打印出所有的\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个\"水仙花数\"，因为153=1的三次方＋5的三次方＋3的三次方。", "output": "\n153\n370\n371\n407\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor n in range(100,1000):\n    i = n / 100\n    j = n / 10 % 10\n    k = n % 10\n    if n == i ** 3 + j ** 3 + k ** 3:\n        print n"}
{"name": "Python 练习实例5", "analysis": "我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。", "title": "输入三个整数x,y,z，请把这三个数由小到大输出。", "output": "\ninteger:\n8\ninteger:\n5\ninteger:\n6\n[5, 6, 8]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nl = []\nfor i in range(3):\n    x = int(raw_input('integer:\\n'))\n    l.append(x)\nl.sort()\nprint l"}
{"name": "Python 练习实例6", "analysis": "斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。", "title": "斐波那契数列。 ", "output": "\nF0 = 0     (n=0)\nF1 = 1    (n=1)\nFn = F[n-1]+ F[n-2](n=>2)\n\n55\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    a,b = 1,1\n    for i in range(n-1):\n        a,b = b,a+b\n    return a\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 使用递归\ndef fib(n):\n    if n==1 or n==2:\n        return 1\n    return fib(n-1)+fib(n-2)\n \n# 输出了第10个斐波那契数列\nprint fib(10)#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fib(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 1]\n    fibs = [1, 1]\n    for i in range(2, n):\n        fibs.append(fibs[-1] + fibs[-2])\n    return fibs\n \n# 输出前 10 个斐波那契数列\nprint fib(10)"}
{"name": "Python 练习实例7", "analysis": "使用列表[:]。", "title": "将一个列表的数据复制到另一个列表中。", "output": "\n[1, 2, 3]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = [1, 2, 3]\nb = a[:]\nprint b"}
{"name": "Python 练习实例2", "analysis": "请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。", "title": "企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？", "output": "\n净利润:120000\n1500.0\n10000.0\n11500.0", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = int(raw_input('净利润:'))\narr = [1000000,600000,400000,200000,100000,0]\nrat = [0.01,0.015,0.03,0.05,0.075,0.1]\nr = 0\nfor idx in range(0,6):\n    if i>arr[idx]:\n        r+=(i-arr[idx])*rat[idx]\n        print (i-arr[idx])*rat[idx]\n        i=arr[idx]\nprint r"}
{"name": "Python 练习实例10", "analysis": "无。", "title": "暂停一秒输出，并格式化当前时间。 ", "output": "\n2015-10-21 17:48:40\n2015-10-21 17:48:41\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport time\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))\n \n# 暂停一秒\ntime.sleep(1)\n \nprint time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))"}
{"name": "Python 练习实例4", "analysis": "以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于2时需考虑多加一天：", "title": "输入某年某月某日，判断这一天是这一年的第几天？", "output": "\nyear:\n2015\nmonth:\n6\nday:\n7\nit is the 158th day.\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nyear = int(raw_input('year:\\n'))\nmonth = int(raw_input('month:\\n'))\nday = int(raw_input('day:\\n'))\n \nmonths = (0,31,59,90,120,151,181,212,243,273,304,334)\nif 0 < month <= 12:\n    sum = months[month - 1]\nelse:\n    print 'data error'\nsum += day\nleap = 0\nif (year % 400 == 0) or ((year % 4 == 0) and (year % 100 != 0)):\n    leap = 1\nif (leap == 1) and (month > 2):\n    sum += 1\nprint 'it is the %dth day.' % sum"}
{"name": "Python 练习实例3", "analysis": "设m=n+k（不妨设m,n,k均为自然数）：带入m^2-n^2-168，得k^2+2nk=168。", "title": "一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？", "output": "\n-99\n21\n261\n1581\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1,85):\n    if 168 % i == 0:\n        j = 168 / i;\n        if  i > j and (i + j) % 2 == 0 and (i - j) % 2 == 0 :\n            m = (i + j) / 2\n            n = (i - j) / 2\n            x = n * n - 100\n            print(x)"}
{"name": "Python 练习实例11", "analysis": "兔子的规律为数列1,1,2,3,5,8,13,21....", "title": "古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ ", "output": "\n           1           1            2           3            5           8 \n          13          21           34          55           89         144 \n         233         377          610         987         1597        2584 \n        4181        6765        10946       17711        28657       46368 \n       75025      121393       196418      317811       514229      832040 \n     1346269     2178309      3524578     5702887      9227465    14930352 \n    24157817    39088169     63245986   102334155    165580141   267914296 \n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nf1 = 1\nf2 = 1\nfor i in range(1,22):\n    print '%12ld %12ld' % (f1,f2),\n    if (i % 3) == 0:\n        print ''\n    f1 = f1 + f2\n    f2 = f1 + f2"}
{"name": "Python 练习实例12", "analysis": "判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除，则表明此数不是素数，反之是素数。 　　　　　", "title": "判断101-200之间有多少个素数，并输出所有素数。", "output": "\n101 \n103 \n107 \n109 \n113 \n127 \n131 \n137 \n139 \n149 \n\n151 \n157 \n163 \n167 \n173 \n179 \n181 \n191 \n193 \n197 \n\n199 \nThe total is 21\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nh = 0\nleap = 1\nfrom math import sqrt\nfrom sys import stdout\nfor m in range(101,201):\n    k = int(sqrt(m + 1))\n    for i in range(2,k + 1):\n        if m % i == 0:\n            leap = 0\n            break\n    if leap == 1:\n        print '%-4d' % m\n        h += 1\n        if h % 10 == 0:\n            print ''\n    leap = 1\nprint 'The total is %d' % h"}
{"name": "Python 练习实例9", "analysis": "使用 time 模块的 sleep() 函数。", "title": "暂停一秒输出。 ", "output": "\n1 a\n2 b\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport time\n \nmyD = {1: 'a', 2: 'b'}\nfor key, value in dict.items(myD):\n    print key, value\n    time.sleep(1) # 暂停 1 秒"}
{"name": "Python 练习实例17", "analysis": "利用while语句,条件为输入的字符不为'\\n'。", "title": "输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。", "output": "\ninput a string:\nrunoob\nchar = 6,space = 0,digit = 0,others = 0\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport string\ns = raw_input('input a string:\\n')\nletters = 0\nspace = 0\ndigit = 0\nothers = 0\nfor c in s:\n    if c.isalpha():\n        letters += 1\n    elif c.isspace():\n        space += 1\n    elif c.isdigit():\n        digit += 1\n    else:\n        others += 1\nprint 'char = %d,space = %d,digit = %d,others = %d' % (letters,space,digit,others)"}
{"name": "Python 练习实例16", "analysis": "使用 datetime 模块。", "title": "输出指定格式的日期。", "output": "\n21/10/2015\n05/01/1941\n06/01/1941\n05/01/1942\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport datetime\n \nif __name__ == '__main__':\n \n    # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法\n    print(datetime.date.today().strftime('%d/%m/%Y'))\n \n    # 创建日期对象\n    miyazakiBirthDate = datetime.date(1941, 1, 5)\n \n    print(miyazakiBirthDate.strftime('%d/%m/%Y'))\n \n    # 日期算术运算\n    miyazakiBirthNextDay = miyazakiBirthDate + datetime.timedelta(days=1)\n \n    print(miyazakiBirthNextDay.strftime('%d/%m/%Y'))\n \n    # 日期替换\n    miyazakiFirstBirthday = miyazakiBirthDate.replace(year=miyazakiBirthDate.year + 1)\n \n    print(miyazakiFirstBirthday.strftime('%d/%m/%Y'))"}
{"name": "Python 练习实例15", "analysis": "程序分析：(a>b)?a:b这是条件运算符的基本例子。", "title": "利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。", "output": "\n输入分数:\n89\n89 属于 B\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nscore = int(raw_input('输入分数:\\n'))\nif score >= 90:\n    grade = 'A'\nelif score >= 60:\n    grade = 'B'\nelse:\n    grade = 'C'\n \nprint '%d 属于 %s' % (score,grade)"}
{"name": "Python 练习实例70", "analysis": "无。", "title": "写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    s = raw_input('please input a string:\\n')\n    print 'the string has %d characters.' % len(s)\n\nplease input a string:\nabc\nthe string has 3 characters.\n", "demo": ""}
{"name": "Python 练习实例100", "analysis": "无。", "title": "列表转换为字典。 ", "output": "\n{'a': 'b', 1: 2}\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ni = ['a', 'b']\nl = [1, 2]\nprint dict([i,l])"}
{"name": "Python 练习实例8", "analysis": "分行与列考虑，共9行9列，i控制行，j控制列。", "title": "输出 9*9 乘法口诀表。", "output": "\n1*1=1\n2*1=2 2*2=4\n3*1=3 3*2=6 3*3=9\n4*1=4 4*2=8 4*3=12 4*4=16\n5*1=5 5*2=10 5*3=15 5*4=20 5*5=25\n6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36\n7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49\n8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64\n9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfor i in range(1, 10):\n    print \n    for j in range(1, i+1):\n        print \"%d*%d=%d\" % (i, j, i*j),"}
{"name": "Python 练习实例18", "analysis": "关键是计算出每一项的值。", "title": "求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。", "output": "\nn = 4\na = 4\n4\n44\n444\n4444\n计算和为： 4936\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTn = 0\nSn = []\nn = int(raw_input('n = '))\na = int(raw_input('a = '))\nfor count in range(n):\n    Tn = Tn + a\n    a = a * 10\n    Sn.append(Tn)\n    print Tn\n \nSn = reduce(lambda x,y : x + y,Sn)\nprint \"计算和为：\",Sn"}
{"name": "Python 练习实例99", "analysis": "无。", "title": "有两个磁盘文件A和B,各存放一行字母,要求把这两个文件中的信息合并(按字母顺序排列), 输出到一个新文件C中。 ", "output": "\n123456\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import string\n    fp = open('test1.txt')\n    a = fp.read()\n    fp.close()\n \n    fp = open('test2.txt')\n    b = fp.read()\n    fp.close()\n \n    fp = open('test3.txt','w')\n    l = list(a + b)\n    l.sort()\n    s = ''\n    s = s.join(l)\n    fp.write(s)\n    fp.close()"}
{"name": "Python 练习实例98", "analysis": "无。", "title": "从键盘输入一个字符串，将小写字母全部转换成大写字母，然后输出到一个磁盘文件\"test\"中保存。 ", "output": "\nplease input a string:\nrunoob.com\nRUNOOB.COM\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    fp = open('test.txt','w')\n    string = raw_input('please input a string:\\n')\n    string = string.upper()\n    fp.write(string)\n    fp = open('test.txt','r')\n    print fp.read()\n    fp.close()"}
{"name": "Python 练习实例97", "analysis": "无。", "title": "从键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个 ", "output": "\n输入文件名:\nrunoobfile.txt\n输入字符串:\nrunoob   \nrunoob\ngoogle\ngoogle#\n\n$ cat runoobfile.txt \nrunoobgoogle\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from sys import stdout\n    filename = raw_input('输入文件名:\\n')\n    fp = open(filename,\"w\")\n    ch = raw_input('输入字符串:\\n')\n    while ch != '#':\n        fp.write(ch)\n        stdout.write(ch)\n        ch = raw_input('')\n    fp.close()"}
{"name": "Python 练习实例96", "analysis": "无。", "title": "计算字符串中子串出现的次数。", "output": "\n请输入一个字符串:\nwww.runoob.com\n请输入一个子字符串:\nrunoob\n1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('请输入一个字符串:\\n')\n    str2 = raw_input('请输入一个子字符串:\\n')\n    ncount = str1.count(str2)\n    print ncount"}
{"name": "Python 练习实例95", "analysis": "无。", "title": "字符串日期转换为易读的日期格式。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nfrom dateutil import parser\ndt = parser.parse(\"Aug 28 2015 12:00AM\")\nprint dt\n\n2015-08-28 00:00:00\n", "demo": ""}
{"name": "Python 练习实例94", "analysis": "无。", "title": "时间函数举例4,一个猜数游戏，判断一个人反应快慢。", "output": "\ndo you want to play it.('y' or 'n')y\ninput a character:\n5\nplease input number you guess:\n\ninput your guess:\n60\n……\nplease input a little bigger\ninput your guess:\n29\nplease input a little smaller\ninput your guess:\n28\n3.81868131868e-05\nyou are very clever!\nCongradulations\nThe number you guess is 28\ndo you want to play it.\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    import random\n    \n    play_it = raw_input('do you want to play it.(\\'y\\' or \\'n\\')')\n    while play_it == 'y':\n        c = raw_input('input a character:\\n')\n        i = random.randint(0,2**32) % 100\n        print 'please input number you guess:\\n'\n        start = time.clock()\n        a = time.time()\n        guess = int(raw_input('input your guess:\\n'))\n        while guess != i:\n            if guess > i:\n                print 'please input a little smaller'\n                guess = int(raw_input('input your guess:\\n'))\n            else:\n                print 'please input a little bigger'\n                guess = int(raw_input('input your guess:\\n'))\n        end = time.clock()\n        b = time.time()\n        var = (end - start) / 18.2\n        print var\n        # print 'It took you %6.3 seconds' % time.difftime(b,a))\n        if var < 15:\n            print 'you are very clever!'\n        elif var < 25:\n            print 'you are normal!'\n        else:\n            print 'you are stupid!'\n        print 'Congradulations'\n        print 'The number you guess is %d' % i\n        play_it = raw_input('do you want to play it.')"}
{"name": "Python 练习实例93", "analysis": "无。", "title": "时间函数举例3。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    start = time.clock()\n    for i in range(10000):\n        print i\n    end = time.clock()\n    print 'different is %6.3f' % (end - start)\n\n0\n1\n2\n3\n4\n……\ndifferent is  0.014\n", "demo": ""}
{"name": "Python 练习实例92", "analysis": "无。", "title": "时间函数举例2。", "output": "\n0\n1\n2\n3\n4\n……\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    import time\n    start = time.time()\n    for i in range(3000):\n        print i\n    end = time.time()\n \n    print end - start"}
{"name": "Python 练习实例87", "analysis": "无。", "title": "回答结果（结构体变量传递）。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    class student:\n        x = 0\n        c = 0\n    def f(stu):\n        stu.x = 20\n        stu.c = 'c'\n    a= student()\n    a.x = 3\n    a.c = 'a'\n    f(a)\n    print a.x,a.c\n\n20 c\n", "demo": ""}
{"name": "Python 练习实例86", "analysis": "无。", "title": "两个字符串连接程序。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = \"acegikm\"\n    b = \"bdfhjlnpq\"\n\n    # 连接字符串\n    c = a + b\n    print c\n\nacegikmbdfhjlnpq\n", "demo": ""}
{"name": "Python 练习实例84", "analysis": "无。", "title": "连接字符串。", "output": "\nBrazil,Russia,India,China\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndelimiter = ','\nmylist = ['Brazil', 'Russia', 'India', 'China']\nprint delimiter.join(mylist)"}
{"name": "Python 练习实例91", "analysis": "无。", "title": "时间函数举例1。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    import time\n    print time.ctime(time.time())\n    print time.asctime(time.localtime(time.time()))\n    print time.asctime(time.gmtime(time.time()))\n\nWed Oct 21 17:08:51 2015\nWed Oct 21 17:08:51 2015\nWed Oct 21 09:08:51 2015\n", "demo": ""}
{"name": "Python 练习实例90", "analysis": "无。", "title": "列表使用实例。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n#list  \n#新建列表  \ntestList=[10086,'中国移动',[1,2,4,5]]  \n  \n#访问列表长度  \nprint len(testList)  \n#到列表结尾  \nprint testList[1:]  \n#向列表添加元素  \ntestList.append('i\\'m new here!')  \n  \nprint len(testList)  \nprint testList[-1]  \n#弹出列表的最后一个元素  \nprint testList.pop(1)  \nprint len(testList)  \nprint testList  \n#list comprehension  \n#后面有介绍，暂时掠过  \nmatrix = [[1, 2, 3],  \n[4, 5, 6],  \n[7, 8, 9]]  \nprint matrix  \nprint matrix[1]  \ncol2 = [row[1] for row in matrix]#get a  column from a matrix  \nprint col2  \ncol2even = [row[1] for row in matrix if  row[1] % 2 == 0]#filter odd item  \nprint col2even  \n\n3\n['\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe7\\xa7\\xbb\\xe5\\x8a\\xa8', [1, 2, 4, 5]]\n4\ni'm new here!\n中国移动\n3\n[10086, [1, 2, 4, 5], \"i'm new here!\"]\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n[4, 5, 6]\n[2, 5, 8]\n[2, 8]\n", "demo": ""}
{"name": "Python 练习实例89", "analysis": "无。", "title": "某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。", "output": "\n输入四个数字:\n1234\n9876\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nif __name__ == '__main__':\n    a = int(raw_input('输入四个数字:\\n'))\n    aa = []\n    aa.append(a % 10)\n    aa.append(a % 100 / 10)\n    aa.append(a % 1000 / 100)\n    aa.append(a / 1000)\n \n    for i in range(4):\n        aa[i] += 5\n        aa[i] %= 10\n    for i in range(2):\n        aa[i],aa[3 - i] = aa[3 - i],aa[i]\n    for i in range(3,-1,-1):\n        stdout.write(str(aa[i]))"}
{"name": "Python 练习实例88", "analysis": "无。", "title": "读取7个数（1―50）的整数值，每读取一个值，程序打印出该值个数的＊。", "output": "\ninput a number:\n9\n*********\ninput a number:\n5\n*****\ninput a number:\n6\n******\ninput a number:\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 1\n    while n <= 7:\n        a = int(raw_input('input a number:\\n'))\n        while a < 1 or a > 50:\n            a = int(raw_input('input a number:\\n'))\n        print a * '*'\n        n += 1"}
{"name": "Python 练习实例85", "analysis": "999999 / 13 = 76923。", "title": "输入一个正整数，然后判断最少几个 9 除于该数的结果为整数。", "output": "\n输入一个数字:\n13\n6 个 9 可以被 13 整除 : 999999\n999999 / 13 = 76923\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    zi = int(raw_input('输入一个数字:\\n'))\n    n1 = 1\n    c9 = 1\n    m9 = 9\n    sum = 9\n    while n1 != 0:\n        if sum % zi == 0:\n            n1 = 0\n        else:\n            m9 *= 10\n            sum += m9\n            c9 += 1\n    print '%d 个 9 可以被 %d 整除 : %d' % (c9,zi,sum)\n    r = sum / zi\n    print '%d / %d = %d' % (sum,zi,r)"}
{"name": "Python 练习实例83", "analysis": "\n\t\t\t\t\t", "title": "求0―7所能组成的奇数个数。", "output": "\n4\n32\n256\n2048\n16384\n131072\n1048576\nsum = 8388608\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    sum = 4\n    s = 4\n    for j in range(2,9):\n        print sum\n        if j <= 2:\n            s *= 7\n        else:\n            s *= 8\n        sum += s\n    print 'sum = %d' % sum"}
{"name": "Python 练习实例82", "analysis": "无。", "title": "八进制转换为十进制", "output": "\ninput a octal number:\n122\n82\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = 0\n    p = raw_input('input a octal number:\\n')\n    for i in range(len(p)):\n        n = n * 8 + ord(p[i]) - ord('0')\n    print n"}
{"name": "Python 练习实例81", "analysis": "无。", "title": "809*??=800*??+9*?? 其中??代表的两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。", "output": "\n9708  = 800 *  12  + 9 *  12\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 809\nfor i in range(10,100):\n    b = i * a\n    if b >= 1000 and b <= 10000 and 8 * i < 100 and 9 * i >= 100:\n        print b,' = 800 * ', i, ' + 9 * ', i"}
{"name": "Python 练习实例80", "analysis": "无。", "title": "海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？", "output": "\n3121\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 0\n    j = 1\n    x = 0\n    while (i < 5) :\n        x = 4 * j\n        for i in range(0,5) :\n            if(x%4 != 0) :\n                break\n            else :\n                i += 1\n            x = (x/4) * 5 +1\n        j += 1\n    print x"}
{"name": "Python 练习实例79", "analysis": "无。", "title": "字符串排序。", "output": "\ninput string:\nabcde\ninput string:\nefdis\ninput string:\nadk\nabcde efdis adk\nafter being sorted.\nabcde adk efdis\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    str1 = raw_input('input string:\\n')\n    str2 = raw_input('input string:\\n')\n    str3 = raw_input('input string:\\n')\n    print str1,str2,str3\n    \n    if str1 > str2 : str1,str2 = str2,str1\n    if str1 > str3 : str1,str3 = str3,str1\n    if str2 > str3 : str2,str3 = str3,str2\n \n    print 'after being sorted.'\n    print str1,str2,str3"}
{"name": "Python 练习实例78", "analysis": "无。", "title": "找到年龄最大的人，并输出。请找出程序中有什么问题。", "output": "\nwang,50\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    person = {\"li\":18,\"wang\":50,\"zhang\":20,\"sun\":22}\n    m = 'li'\n    for key in person.keys():\n        if person[m] < person[key]:\n            m = key\n \n    print '%s,%d' % (m,person[m])"}
{"name": "Python 练习实例77", "analysis": "无。", "title": "循环输出列表", "output": "\nman\nwoman\ngirl\nboy\nsister\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    s = [\"man\",\"woman\",\"girl\",\"boy\",\"sister\"]\n    for i in range(len(s)):\n        print s[i]"}
{"name": "Python 练习实例75", "analysis": "无。", "title": "放松一下，算一道简单的题目。", "output": "\n67\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    for i in range(5):\n        n = 0\n        if i != 1: n += 1\n        if i == 3: n += 1\n        if i == 4: n += 1\n        if i != 4: n += 1\n        if n == 3: print 64 + i"}
{"name": "Python 练习实例74", "analysis": "排序可使用 ", "title": "列表排序及连接。", "output": "\n[1, 2, 3]\n[1, 2, 3, 3, 4, 5]\n[1, 2, 3, 3, 4, 5]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [1,3,2]\n    b = [3,4,5]\n    a.sort()     # 对列表 a 进行排序\n    print a\n \n    # 连接列表 a 与 b\n    print a+b\n    \n    # 连接列表 a 与 b\n    a.extend(b)\n    print a"}
{"name": "Python 练习实例76", "analysis": "无。", "title": "编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数1/1+1/3+...+1/n", "output": "\ninput a number:\n6\n0.916666666667\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef peven(n):\n    i = 0\n    s = 0.0\n    for i in range(2,n + 1,2):\n        s += 1.0 / i   # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef podd(n):\n    s = 0.0\n    for i in range(1, n + 1,2):\n        s += 1.0 / i    # Python里，整数除整数，只能得出整数，所以需要使用 浮点数 1.0\n    return s\n \ndef dcall(fp,n):\n    s = fp(n)\n    return s\n \nif __name__ == '__main__':\n    n = int(raw_input('input a number:\\n'))\n    if n % 2 == 0:\n        sum = dcall(peven,n)\n    else:\n        sum = dcall(podd,n)\n    print sum"}
{"name": "Python 练习实例73", "analysis": "无。", "title": "反向输出一个链表。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n    ptr.reverse()\n    print ptr\n\nplease input a number:\n6\nplease input a number:\n5\nplease input a number:\n3\nplease input a number:\n4\nplease input a number:\n8\n[6, 5, 3, 4, 8]\n[8, 4, 3, 5, 6]\n", "demo": ""}
{"name": "Python 练习实例72", "analysis": "无。", "title": "创建一个链表。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    ptr = []\n    for i in range(5):\n        num = int(raw_input('please input a number:\\n'))\n        ptr.append(num)\n    print ptr\n\nplease input a number:\n3\nplease input a number:\n5\nplease input a number:\n7\nplease input a number:\n8\nplease input a number:\n2\n[3, 5, 7, 8, 2]\n", "demo": ""}
{"name": "Python 练习实例71", "analysis": "无。", "title": "编写input()和output()函数输入，输出5个学生的数据记录。", "output": "\ninput student num:\n2\ninput student name:\naaa\nscore:\n89\nscore:\n98\nscore:\n67\ninput student num:\nbbb\ninput student name:\nccc\nscore:\n87\nscore:\n45\nscore:\n68\ninput student num:\nddd\ninput student name:\neee\nscore:\n56\nscore:\n78\nscore:\n56\n[['2', 'aaa', [89, 98, 67]], ['bbb', 'ccc', [87, 45, 68]], ['ddd', 'eee', [56, 78, 56]], ['', '', []], ['', '', []]]\n2     aaa       \n89      \n98      \n67      \nbbb   ccc       \n87      \n45      \n68      \nddd   eee       \n56      \n78      \n56    \n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nN = 3\n#stu\n# num : string\n# name : string\n# score[4]: list\nstudent = []\nfor i in range(5):\n    student.append(['','',[]])\n \ndef input_stu(stu):\n    for i in range(N):\n        stu[i][0] = raw_input('input student num:\\n')\n        stu[i][1] = raw_input('input student name:\\n')\n        for j in range(3):\n            stu[i][2].append(int(raw_input('score:\\n')))\n \ndef output_stu(stu):\n    for i in range(N):\n        print '%-6s%-10s' % ( stu[i][0],stu[i][1] )\n        for j in range(3):\n            print '%-8d' % stu[i][2][j]\n \nif __name__ == '__main__':\n    input_stu(student)\n    print student\n    output_stu(student)"}
{"name": "Python 练习实例69", "analysis": "无。", "title": "有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "output": "\n$ python test.py \n请输入总人数:34\n10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    nmax = 50\n    n = int(raw_input('请输入总人数:'))\n    num = []\n    for i in range(n):\n        num.append(i + 1)\n \n    i = 0\n    k = 0\n    m = 0\n \n    while m < n - 1:\n        if num[i] != 0 : k += 1\n        if k == 3:\n            num[i] = 0\n            k = 0\n            m += 1\n        i += 1\n        if i == n : i = 0\n \n    i = 0\n    while num[i] == 0: i += 1\n    print num[i]"}
{"name": "Python 练习实例68", "analysis": "无。", "title": "有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数", "output": "\n整数 n 为:\n8\n向后移 m 个位置为:\n5\n输入一个数字:\n2\n输入一个数字:\n8\n输入一个数字:\n6\n输入一个数字:\n1\n输入一个数字:\n78\n输入一个数字:\n45\n输入一个数字:\n34\n输入一个数字:\n2\n原始列表: [2, 8, 6, 1, 78, 45, 34, 2]\n移动之后: [1, 78, 45, 34, 2, 2, 8, 6]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n = int(raw_input('整数 n 为:\\n'))\n    m = int(raw_input('向后移 m 个位置为:\\n'))\n \n    def move(array,n,m):\n        array_end = array[n - 1]\n        for i in range(n - 1,-1,- 1):\n            array[i] = array[i - 1]\n        array[0] = array_end\n        m -= 1\n        if m > 0:move(array,n,m)\n        \n    number = []\n    for i in range(n):\n        number.append(int(raw_input('输入一个数字:\\n')))\n    print '原始列表:',number\n \n    move(number,n,m)\n \n    print '移动之后:',number"}
{"name": "Python 练习实例67", "analysis": "无。", "title": "输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "output": "\n输入一个数字:\n1\n输入一个数字:\n2\n输入一个数字:\n3\n输入一个数字:\n7\n输入一个数字:\n9\n输入一个数字:\n8\n计算结果：\n9\n2\n3\n7\n8\n1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef inp(numbers):\n    for i in range(6):\n        numbers.append(int(raw_input('输入一个数字:\\n')))\np = 0\n \ndef arr_max(array):\n    max = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] > array[max] : max = p\n    k = max\n    array[0],array[k] = array[k],array[0]\ndef arr_min(array):\n    min = 0\n    for i in range(1,len(array) - 1):\n        p = i\n        if array[p] < array[min] : min = p\n    l = min\n    array[5],array[l] = array[l],array[5]\n \ndef outp(numbers):\n    for i  in range(len(numbers)):\n        print numbers[i]\n \nif __name__ == '__main__':\n    array = []\n    inp(array)        # 输入 6 个数字并放入数组\n    arr_max(array)    # 获取最大元素并与第一个元素交换\n    arr_min(array)    # 获取最小元素并与最后一个元素交换\n    print '计算结果：'\n    outp(array)"}
{"name": "Python 练习实例66", "analysis": "无。", "title": "输入3个数a,b,c，按大小顺序输出。　　　", "output": "\nn1 = :\n123\nn2 = :\n456\nn3 = :\n789\n123 456 789\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    n1 = int(raw_input('n1 = :\\n'))\n    n2 = int(raw_input('n2 = :\\n'))\n    n3 = int(raw_input('n3 = :\\n'))\n \n    def swap(p1,p2):\n        return p2,p1\n \n    if n1 > n2 : n1,n2 = swap(n1,n2)\n    if n1 > n3 : n1,n3 = swap(n1,n3)\n    if n2 > n3 : n2,n3 = swap(n2,n3)\n \n    print n1,n2,n3"}
{"name": "Python 练习实例65", "analysis": "无。", "title": "一个最优美的图案。　　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport math\nclass PTS:\n    def __init__(self):\n        self.x = 0\n        self.y = 0\npoints = []\n\ndef LineToDemo():\n    from Tkinter import *\n    screenx = 400\n    screeny = 400\n    canvas = Canvas(width = screenx,height = screeny,bg = 'white')\n\n    AspectRatio = 0.85\n    MAXPTS = 15\n    h = screeny\n    w = screenx\n    xcenter = w / 2\n    ycenter = h / 2\n    radius = (h - 30) / (AspectRatio * 2) - 20\n    step = 360 / MAXPTS\n    angle = 0.0\n    for i in range(MAXPTS):\n        rads = angle * math.pi / 180.0\n        p = PTS()\n        p.x = xcenter + int(math.cos(rads) * radius)\n        p.y = ycenter - int(math.sin(rads) * radius * AspectRatio)\n        angle += step\n        points.append(p)\n    canvas.create_oval(xcenter - radius,ycenter - radius,\n                       xcenter + radius,ycenter + radius)\n    for i in range(MAXPTS):\n        for j in range(i,MAXPTS):\n            canvas.create_line(points[i].x,points[i].y,points[j].x,points[j].y)\n\n    canvas.pack()\n    mainloop()\nif __name__ == '__main__':\n    LineToDemo()\n", "demo": ""}
{"name": "Python 练习实例64", "analysis": "无。", "title": "利用ellipse 和 rectangle 画图。。　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    left = 20\n    right = 50\n    top = 50\n    num = 15\n    for i in range(num):\n        canvas.create_oval(250 - right,250 - left,250 + right,250 + left)\n        canvas.create_oval(250 - 20,250 - top,250 + 20,250 + top)\n        canvas.create_rectangle(20 - 2 * i,20 - 2 * i,10 * (i + 2),10 * ( i + 2))\n        right += 5\n        left += 5\n        top += 10\n\n    canvas.pack()\n    mainloop()\n", "demo": ""}
{"name": "Python 练习实例63", "analysis": "使用 Tkinter。", "title": "画椭圆。　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n    x = 360\n    y = 160\n    top = y - 30\n    bottom = y - 30\n    \n    canvas = Canvas(width = 400,height = 600,bg = 'white')\n    for i in range(20):\n        canvas.create_oval(250 - top,250 - bottom,250 + top,250 + bottom)\n        top -= 5\n        bottom += 5\n    canvas.pack()\n    mainloop()"}
{"name": "Python 练习实例62", "analysis": "无。", "title": "查找字符串。　　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nsStr1 = 'abcdefg'\nsStr2 = 'cde'\nprint sStr1.find(sStr2)\n\n2\n", "demo": ""}
{"name": "Python 练习实例61", "analysis": "无。", "title": "打印出杨辉三角形（要求打印出10行如下图）。　　", "output": "\n1 \n1 1 \n1 2 1 \n1 3 3 1 \n1 4 6 4 1 \n1 5 10 10 5 1 \n1 6 15 20 15 6 1 \n1 7 21 35 35 21 7 1 \n1 8 28 56 70 56 28 8 1 \n1 9 36 84 126 126 84 36 9 1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    for i in range(10):\n        a.append([])\n        for j in range(10):\n            a[i].append(0)\n    for i in range(10):\n        a[i][0] = 1\n        a[i][i] = 1\n    for i in range(2,10):\n        for j in range(1,i):\n            a[i][j] = a[i - 1][j-1] + a[i - 1][j]\n    from sys import stdout\n    for i in range(10):\n        for j in range(i + 1):\n            stdout.write(str(a[i][j]))\n            stdout.write(' ')\n        print"}
{"name": "Python 练习实例60", "analysis": "无。", "title": "计算字符串长度。　　", "output": "\n6\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nsStr1 = 'strlen'\nprint len(sStr1)"}
{"name": "Python 练习实例59", "analysis": "利用for循环控制100-999个数，每个数分解出个位，十位，百位。。", "title": "画图，综合例子。　　", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__  == '__main__':\n    from Tkinter import *\n    canvas = Canvas(width = 300,height = 300,bg = 'green')\n    canvas.pack(expand = YES,fill = BOTH)\n    x0 = 150\n    y0 = 100\n    canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)\n    canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)\n    canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)\n    import math\n    B = 0.809\n    for i in range(16):\n        a = 2 * math.pi / 16 * i\n        x = math.ceil(x0 + 48 * math.cos(a))\n        y = math.ceil(y0 + 48 * math.sin(a) * B)\n        canvas.create_line(x0,y0,x,y,fill = 'red')\n    canvas.create_oval(x0 - 60,y0 - 60,x0 + 60,y0 + 60)\n    \n\n    for k in range(501):\n        for i in range(17):\n            a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 + math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n        for j in range(51):\n            a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1\n            x = math.ceil(x0 + 48 * math.cos(a))\n            y = math.ceil(y0 + 48 * math.sin(a) * B)\n            canvas.create_line(x0,y0,x,y,fill = 'red')\n    mainloop()\n", "demo": ""}
{"name": "Python 练习实例58", "analysis": "\n\t\t\t\t\t", "title": "画图，学用rectangle画方形。　　　", "output": "rectangle(int left, int top, int right, int bottom)\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    from Tkinter import *\n    root = Tk()\n    root.title('Canvas')\n    canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')\n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_rectangle(x0,y0,x1,y1)\n        x0 -= 5\n        y0 -= 5\n        x1 += 5\n        y1 += 5\n        \n    canvas.pack()\n    root.mainloop()\n", "demo": ""}
{"name": "Python 练习实例57", "analysis": "无。", "title": "画图，学用line画直线。", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=300, height=300, bg='green')   \n    canvas.pack(expand=YES, fill=BOTH)                  \n    x0 = 263\n    y0 = 263\n    y1 = 275\n    x1 = 275\n    for i in range(19):\n        canvas.create_line(x0,y0,x0,y1, width=1, fill='red')\n        x0 = x0 - 5\n        y0 = y0 - 5\n        x1 = x1 + 5\n        y1 = y1 + 5\n \n    x0 = 263\n    y1 = 275\n    y0 = 263\n    for i in range(21):\n        canvas.create_line(x0,y0,x0,y1,fill = 'red')\n        x0 += 5\n        y0 += 5\n        y1 += 5\n \n    mainloop()"}
{"name": "Python 练习实例56", "analysis": "无。", "title": "画图，学用circle画圆形。　　　", "output": "", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    from Tkinter import *\n \n    canvas = Canvas(width=800, height=600, bg='yellow')  \n    canvas.pack(expand=YES, fill=BOTH)                \n    k = 1\n    j = 1\n    for i in range(0,26):\n        canvas.create_oval(310 - k,250 - k,310 + k,250 + k, width=1)\n        k += j\n        j += 0.3\n \n    mainloop()"}
{"name": "Python 练习实例55", "analysis": "~0=1; ~1=0; ", "title": "学习使用按位取反~。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 234\n    b = ~a\n    print 'The a\\'s 1 complement is %d' % b\n    a = ~a\n    print 'The a\\'s 2 complement is %d' % a\n\nThe a's 1 complement is -235\nThe a's 2 complement is -235\n", "demo": ""}
{"name": "Python 练习实例53", "analysis": "0^0=0; 0^1=1; 1^0=1; 1^1=0", "title": "学习使用按位异或 ^ 。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a ^ 3\n    print 'The a ^ 3 = %d' % b\n    b ^= 7\n    print 'The a ^ b = %d' % b\n\nThe a ^ 3 = 60\nThe a ^ b = 59\n", "demo": ""}
{"name": "Python 练习实例52", "analysis": "0|0=0; 0|1=1; 1|0=1; 1|1=1", "title": "学习使用按位或 | 。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a | 3\n    print 'a | b is %d' % b\n    b |= 7\n    print 'a | b is %d' % b\n\na | b is 63\na | b is 63\n", "demo": ""}
{"name": "Python 练习实例51", "analysis": "0&0=0; 0&1=0; 1&0=0; 1&1=1。", "title": "学习使用按位与 & 。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nif __name__ == '__main__':\n    a = 077\n    b = a & 3\n    print 'a & b = %d' % b\n    b &= 7\n    print 'a & b = %d' % b\n\na & b = 3\na & b = 3\n", "demo": ""}
{"name": "Python 练习实例50", "analysis": "使用 random 模块。", "title": "输出一个随机数。", "output": "\n14.4012371357\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nimport random\n \n#生成 10 到 20 之间的随机数\nprint random.uniform(10, 20)"}
{"name": "Python 练习实例49", "analysis": "无", "title": "使用lambda来创建匿名函数。", "output": "\nThe largar one is 20\nThe lower one is 10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nMAXIMUM = lambda x,y :  (x > y) * x + (x < y) * y\nMINIMUM = lambda x,y :  (x > y) * y + (x < y) * x\n \nif __name__ == '__main__':\n    a = 10\n    b = 20\n    print 'The largar one is %d' % MAXIMUM(a,b)\n    print 'The lower one is %d' % MINIMUM(a,b)"}
{"name": "Python 练习实例48", "analysis": "无", "title": "数字比较。", "output": "\n10 小于 20\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    i = 10\n    j = 20\n    if i > j:\n        print '%d 大于 %d' % (i,j)\n    elif i == j:\n        print '%d 等于 %d' % (i,j)\n    elif i < j:\n        print '%d 小于 %d' % (i,j)\n    else:\n        print '未知'"}
{"name": "Python 练习实例47", "analysis": "无", "title": "两个变量值互换。", "output": "\nx = 10,y = 20\nx = 20,y = 10\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef exchange(a,b):\n    a,b = b,a\n    return (a,b)\n \nif __name__ == '__main__':\n    x = 10\n    y = 20\n    print 'x = %d,y = %d' % (x,y)\n    x,y = exchange(x,y)\n    print 'x = %d,y = %d' % (x,y)"}
{"name": "Python 练习实例46", "analysis": "无", "title": "求输入数字的平方，如果平方运算后小于 50 则退出。", "output": "\n如果输入的数字小于 50，程序将停止运行。\n请输入一个数字：12\n运算结果为: 144\n请输入一个数字：14\n运算结果为: 196\n请输入一个数字：1\n运算结果为: 1\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nTRUE = 1\nFALSE = 0\ndef SQ(x):\n    return x * x\nprint '如果输入的数字小于 50，程序将停止运行。'\nagain = 1\nwhile again:\n    num = int(raw_input('请输入一个数字：'))\n    print '运算结果为: %d' % (SQ(num))\n    if SQ(num) >= 50:\n        again = TRUE\n    else:\n        again = FALSE"}
{"name": "Python 练习实例45", "analysis": "无", "title": "统计 1 到 100 之和。", "output": "\nThe sum is 5050\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntmp = 0\nfor i in range(1,101):\n    tmp += i\nprint 'The sum is %d' % tmp"}
{"name": "Python 练习实例44 - Python 两个矩阵相加", "analysis": "\r\n程序分析：创建一个新的 3 行 3 列的矩阵，使用 for 迭代并取出 X 和 Y 矩阵中对应位置的值，相加后放到新矩阵的对应位置中。", "title": "两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：", "output": "\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\n[17, 15, 4]\n[10, 12, 9]\n[11, 13, 18]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n \nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n \nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n \n# 迭代输出行\nfor i in range(len(X)):\n   # 迭代输出列\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n \nfor r in result:\n   print(r)"}
{"name": "Python 练习实例43", "analysis": "演示一个python作用域使用方法", "title": "模仿静态变量(static)另一案例。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass Num:\n    nNum = 1\n    def inc(self):\n        self.nNum += 1\n        print 'nNum = %d' % self.nNum\n\nif __name__ == '__main__':\n    nNum = 2\n    inst = Num()\n    for i in range(3):\n        nNum += 1\n        print 'The num = %d' % nNum\n        inst.inc()\n\nThe num = 3\nnNum = 2\nThe num = 4\nnNum = 3\nThe num = 5\nnNum = 4\n", "demo": ""}
{"name": "Python 练习实例42", "analysis": "没有auto关键字，使用变量作用域来举例吧。", "title": "学习使用auto定义变量的用法。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nnum = 2\ndef autofunc():\n    num = 1\n    print 'internal block num = %d' % num\n    num += 1\nfor i in range(3):\n    print 'The num = %d' % num\n    num += 1\n    autofunc()\n\nThe num = 2\ninternal block num = 1\nThe num = 3\ninternal block num = 1\nThe num = 4\ninternal block num = 1\n", "demo": ""}
{"name": "Python 练习实例41", "analysis": "无。", "title": "模仿静态变量的用法。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef varfunc():\n    var = 0\n    print 'var = %d' % var\n    var += 1\nif __name__ == '__main__':\n    for i in range(3):\n        varfunc()\n\n# 类的属性\n# 作为类的一个属性吧\nclass Static:\n    StaticVar = 5\n    def varfunc(self):\n        self.StaticVar += 1\n        print self.StaticVar\n\nprint Static.StaticVar\na = Static()\nfor i in range(3):\n    a.varfunc()\n\nvar = 0\nvar = 0\nvar = 0\n5\n6\n7\n8\n", "demo": ""}
{"name": "Python 练习实例40", "analysis": "用第一个与最后一个交换。", "title": "将一个数组逆序输出。", "output": "\n[9, 6, 5, 4, 1]\n[1, 4, 5, 6, 9]\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = [9,6,5,4,1]\n    N = len(a) \n    print a\n    for i in range(len(a) / 2):\n        a[i],a[N - i - 1] = a[N - i - 1],a[i]\n    print a"}
{"name": "Python 练习实例39", "analysis": "首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。 ", "title": "有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。", "output": "\n原始列表:\n1 4 6 9 13 16 19 28 40 100 0 \n插入一个数字:\n7\n排序后列表:\n1 4 6 7 9 13 16 19 28 40 100\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    # 方法一 ： 0 作为加入数字的占位符\n    a = [1,4,6,9,13,16,19,28,40,100,0]\n    print '原始列表:'\n    for i in range(len(a)):\n        print a[i],\n    number = int(raw_input(\"\\n插入一个数字:\\n\"))\n    end = a[9]\n    if number > end:\n        a[10] = number\n    else:\n        for i in range(10):\n            if a[i] > number:\n                temp1 = a[i]\n                a[i] = number\n                for j in range(i + 1,11):\n                    temp2 = a[j]\n                    a[j] = temp1\n                    temp1 = temp2\n                break\n    print '排序后列表:'\n    for i in range(11):\n        print a[i],"}
{"name": "Python 练习实例38", "analysis": "利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。", "title": "求一个3*3矩阵对角线元素之和。", "output": "\ninput num:\n78\ninput num:\n34\ninput num:\n23\ninput num:\n34\ninput num:\n56\ninput num:\n33\ninput num:\n12\ninput num:\n21\ninput num:\n2\n136.0\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == '__main__':\n    a = []\n    sum = 0.0\n    for i in range(3):\n        a.append([])\n        for j in range(3):\n            a[i].append(float(raw_input(\"input num:\\n\")))\n    for i in range(3):\n        sum += a[i][i]\n    print sum"}
{"name": "Python 练习实例37", "analysis": "可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。", "title": "对10个数进行排序。", "output": "\n请输入10个数字:\n\n输入一个数字:\n5\n输入一个数字:\n3\n输入一个数字:\n23\n输入一个数字:\n67\n输入一个数字:\n2\n输入一个数字:\n56\n输入一个数字:\n45\n输入一个数字:\n98\n输入一个数字:\n239\n输入一个数字:\n9\n\n5\n3\n23\n67\n2\n56\n45\n98\n239\n9\n\n排列之后：\n2\n3\n5\n9\n23\n45\n56\n67\n98\n239\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nif __name__ == \"__main__\":\n    N = 10\n    # input data\n    print '请输入10个数字:\\n'\n    l = []\n    for i in range(N):\n        l.append(int(raw_input('输入一个数字:\\n')))\n    print\n    for i in range(N):\n        print l[i]\n    print\n \n    # 排列10个数字\n    for i in range(N - 1):\n        min = i\n        for j in range(i + 1,N):\n            if l[min] > l[j]:min = j\n        l[i],l[min] = l[min],l[i]\n    print '排列之后：'\n    for i in range(N):\n        print l[i]"}
{"name": "Python 练习实例36", "analysis": "无。", "title": "求100之内的素数。", "output": "\n输入区间最小值: 1\n输入区间最大值: 100\n2\n3\n5\n7\n11\n13\n17\n19\n23\n29\n31\n37\n41\n43\n47\n53\n59\n61\n67\n71\n73\n79\n83\n89\n97\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \n# 输出指定范围内的素数\n \n# 用户输入数据\nlower = int(input(\"输入区间最小值: \"))\nupper = int(input(\"输入区间最大值: \"))\n \nfor num in range(lower,upper + 1):\n    # 素数大于 1\n    if num > 1:\n        for i in range(2,num):\n            if (num % i) == 0:\n                break\n        else:\n            print(num)"}
{"name": "Python 练习实例35", "analysis": "无。", "title": "文本颜色设置。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nclass bcolors:\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\nprint bcolors.WARNING + \"警告的颜色字体?\" + bcolors.ENDC\n\n警告的颜色字体?    # 浅黄色\n", "demo": ""}
{"name": "Python 练习实例34", "analysis": "无。", "title": "练习函数调用。", "output": "\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ndef hello_world():\n    print 'hello world'\n\ndef three_hellos():\n    for i in range(3):\n        hello_world()\nif __name__ == '__main__':\n    three_hellos()\n\nhello world\nhello world\nhello world\n", "demo": ""}
{"name": "Python 练习实例33", "analysis": "无。", "title": "按逗号分隔列表。", "output": "\n1,2,3,4,5\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nL = [1,2,3,4,5]\ns1 = ','.join(str(n) for n in L)\nprint s1"}
{"name": "Python 练习实例32", "analysis": "无。", "title": "按相反的顺序输出列表的值。", "output": "\nthree\ntwo\none\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = ['one', 'two', 'three']\nfor i in a[::-1]:\n    print i"}
{"name": "Python 练习实例31", "analysis": "用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。。", "title": "请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。", "output": "\nplease input:S\nplease input second letter:\nplease input:a\nSaturday\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nletter = raw_input(\"please input:\")\n#while letter  != 'Y':\nif letter == 'S':\n    print ('please input second letter:')\n    letter = raw_input(\"please input:\")\n    if letter == 'a':\n        print ('Saturday')\n    elif letter  == 'u':\n        print ('Sunday')\n    else:\n        print ('data error')\n    \nelif letter == 'F':\n    print ('Friday')\n    \nelif letter == 'M':\n    print ('Monday')\n    \nelif letter == 'T':\n    print ('please input second letter')\n    letter = raw_input(\"please input:\")\n \n    if letter  == 'u':\n        print ('Tuesday')\n    elif letter  == 'h':\n        print ('Thursday')\n    else:\n        print ('data error')\n        \nelif letter == 'W':\n    print ('Wednesday')\nelse:\n    print ('data error')"}
{"name": "Python 练习实例30", "analysis": "无。", "title": "一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。", "output": "\n请输入一个数字:\n12321\n12321 是一个回文数!\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = int(raw_input(\"请输入一个数字:\\n\"))\nx = str(a)\nflag = True\n \nfor i in range(len(x)/2):\n    if x[i] != x[-i - 1]:\n        flag = False\n        break\nif flag:\n    print \"%d 是一个回文数!\" % a\nelse:\n    print \"%d 不是一个回文数!\" % a"}
{"name": "Python 练习实例29", "analysis": "学会分解出每一位数。", "title": "给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。", "output": "\n请输入一个数:\n23459\n5 位数： 9 5 4 3 2\n\n请输入一个数:\n3472\n4 位数： 2 7 4 3\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx = int(raw_input(\"请输入一个数:\\n\"))\na = x / 10000\nb = x % 10000 / 1000\nc = x % 1000 / 100\nd = x % 100 / 10\ne = x % 10\n \nif a != 0:\n    print \"5 位数：\",e,d,c,b,a\nelif b != 0:\n    print \"4 位数：\",e,d,c,b,\nelif c != 0:\n    print \"3 位数：\",e,d,c\nelif d != 0:\n    print \"2 位数：\",e,d\nelse:\n    print \"1 位数：\",e"}
{"name": "Python 练习实例28", "analysis": "利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。", "title": "有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？", "output": "\n18\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef age(n):\n    if n == 1: c = 10\n    else: c = age(n - 1) + 2\n    return c\nprint age(5)"}
{"name": "Python 练习实例27", "analysis": "无。", "title": "利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。", "output": "\nInput a string:abcde\ne\nd\nc\nb\na\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef output(s,l):\n    if l==0:\n       return\n    print (s[l-1])\n    output(s,l-1)\n \ns = raw_input('Input a string:')\nl = len(s)\noutput(s,l)"}
{"name": "Python 练习实例26", "analysis": "递归公式：fn=fn_1*4! ", "title": "利用递归方法求5!。", "output": "\n0! = 1\n1! = 1\n2! = 2\n3! = 6\n4! = 24\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef fact(j):\n    sum = 0\n    if j == 0:\n        sum = 1\n    else:\n        sum = j * fact(j - 1)\n    return sum\n \nfor i in range(5):\n    print '%d! = %d' % (i,fact(i))"}
{"name": "Python 练习实例25", "analysis": "此程序只是把累加变成了累乘。  ", "title": "求1+2!+3!+...+20!的和。", "output": "\n1! + 2! + 3! + ... + 20! = 2561327494111820313\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nn = 0\ns = 0\nt = 1\nfor n in range(1,21):\n    t *= n\n    s += t\nprint '1! + 2! + 3! + ... + 20! = %d' % s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ns = 0\nl = range(1,21)\ndef op(x):\n    r = 1\n    for i in range(1,x + 1):\n        r *= i\n    return r\ns = sum(map(op,l))\nprint '1! + 2! + 3! + ... + 20! = %d' % s"}
{"name": "Python 练习实例24", "analysis": "请抓住分子与分母的变化规律。 ", "title": "有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。", "output": "\n32.6602607986\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0\nfor n in range(1,21):\n    s += a / b\n    t = a\n    a = a + b\n    b = t\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s\n \ns = 0.0\nfor n in range(1,21):\n    s += a / b\n    b,a = a , a + b\nprint s#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \na = 2.0\nb = 1.0\nl = []\nl.append(a / b)\nfor n in range(1,20):\n    b,a = a,a + b\n    l.append(a / b)\nprint reduce(lambda x,y: x + y,l)"}
{"name": "Python 练习实例23", "analysis": "先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重for循环，第一层控制行，第二层控制列。", "title": "打印出如下图案（菱形）:", "output": "\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor i in range(4):\n    for j in range(2 - i + 1):\n        stdout.write(' ')\n    for k in range(2 * i + 1):\n        stdout.write('*')\n    print\n \nfor i in range(3):\n    for j in range(i + 1):\n        stdout.write(' ')\n    for k in range(4 - 2 * i + 1):\n        stdout.write('*')\n    print"}
{"name": "Python 练习实例21", "analysis": "采取逆向思维的方法，从后往前推断。", "title": "猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。", "output": "\n1534\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nx2 = 1\nfor day in range(9,0,-1):\n    x1 = (x2 + 1) * 2\n    x2 = x1\nprint x1"}
{"name": "Python 练习实例20", "analysis": "无", "title": "一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？", "output": "\n总高度：tour = 299.609375\n第10次反弹高度：height = 0.09765625\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ntour = []\nheight = []\n \nhei = 100.0 # 起始高度\ntim = 10 # 次数\n \nfor i in range(1, tim + 1):\n    # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2*hei) \n    hei /= 2\n    height.append(hei)\n \nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))"}
{"name": "Python 练习实例19", "analysis": "请参照程序", "title": "一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。", "output": "\n6\n1 2 3\n28\n1 2 4 7 14\n496\n1 2 4 8 16 31 62 124 248\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nfrom sys import stdout\nfor j in range(2,1001):\n    k = []\n    n = -1\n    s = j\n    for i in range(1,j):\n            if j % i == 0:\n                n += 1\n                s -= i\n                k.append(i)\n    \n    if s == 0:\n        print j\n        for i in range(n):\n            stdout.write(str(k[i]))\n            stdout.write(' ')\n        print k[n]"}
{"name": "Python 练习实例14", "analysis": "对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：", "title": "将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。", "output": "\n90 =  2 * 3 * 3 * 5\n100 =  2 * 2 * 5 * 5\n", "demo": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \ndef reduceNum(n):\n    print '{} = '.format(n),\n    if not isinstance(n, int) or n <= 0 :\n        print '请输入一个正确的数字 !'\n        exit(0)\n    elif n in [1] :\n        print '{}'.format(n)\n    while n not in [1] : # 循环保证递归\n        for index in xrange(2, n + 1) :\n            if n % index == 0:\n                n /= index # n 等于 n/index\n                if n == 1: \n                    print index \n                else : # index 一定是素数\n                    print '{} *'.format(index),\n                break\nreduceNum(90)\nreduceNum(100)"}
